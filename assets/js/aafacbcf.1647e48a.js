"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[29329],{3905:(e,t,a)=>{a.d(t,{Zo:()=>p,kt:()=>c});var n=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var d=n.createContext({}),s=function(e){var t=n.useContext(d),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},p=function(e){var t=s(e.components);return n.createElement(d.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,i=e.originalType,d=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=s(a),c=r,v=u["".concat(d,".").concat(c)]||u[c]||m[c]||i;return a?n.createElement(v,o(o({ref:t},p),{},{components:a})):n.createElement(v,o({ref:t},p))}));function c(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=a.length,o=new Array(i);o[0]=u;var l={};for(var d in t)hasOwnProperty.call(t,d)&&(l[d]=t[d]);l.originalType=e,l.mdxType="string"==typeof e?e:r,o[1]=l;for(var s=2;s<i;s++)o[s]=a[s];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}u.displayName="MDXCreateElement"},85162:(e,t,a)=>{a.d(t,{Z:()=>o});var n=a(67294),r=a(86010);const i="tabItem_Ymn6";function o(e){let{children:t,hidden:a,className:o}=e;return n.createElement("div",{role:"tabpanel",className:(0,r.Z)(i,o),hidden:a},t)}},65488:(e,t,a)=>{a.d(t,{Z:()=>c});var n=a(87462),r=a(67294),i=a(86010),o=a(72389),l=a(67392),d=a(7094),s=a(12466);const p="tabList__CuJ",m="tabItem_LNqP";function u(e){var t,a;const{lazy:o,block:u,defaultValue:c,values:v,groupId:k,className:h}=e,g=r.Children.map(e.children,(e=>{if((0,r.isValidElement)(e)&&"value"in e.props)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),N=null!=v?v:g.map((e=>{let{props:{value:t,label:a,attributes:n}}=e;return{value:t,label:a,attributes:n}})),f=(0,l.l)(N,((e,t)=>e.value===t.value));if(f.length>0)throw new Error('Docusaurus error: Duplicate values "'+f.map((e=>e.value)).join(", ")+'" found in <Tabs>. Every value needs to be unique.');const w=null===c?c:null!=(t=null!=c?c:null==(a=g.find((e=>e.props.default)))?void 0:a.props.value)?t:g[0].props.value;if(null!==w&&!N.some((e=>e.value===w)))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+w+'" but none of its children has the corresponding value. Available values are: '+N.map((e=>e.value)).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");const{tabGroupChoices:y,setTabGroupChoices:b}=(0,d.U)(),[C,P]=(0,r.useState)(w),L=[],{blockElementScrollPositionUntilNextRender:T}=(0,s.o5)();if(null!=k){const e=y[k];null!=e&&e!==C&&N.some((t=>t.value===e))&&P(e)}const x=e=>{const t=e.currentTarget,a=L.indexOf(t),n=N[a].value;n!==C&&(T(t),P(n),null!=k&&b(k,String(n)))},R=e=>{var t;let a=null;switch(e.key){case"ArrowRight":{var n;const t=L.indexOf(e.currentTarget)+1;a=null!=(n=L[t])?n:L[0];break}case"ArrowLeft":{var r;const t=L.indexOf(e.currentTarget)-1;a=null!=(r=L[t])?r:L[L.length-1];break}}null==(t=a)||t.focus()};return r.createElement("div",{className:(0,i.Z)("tabs-container",p)},r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.Z)("tabs",{"tabs--block":u},h)},N.map((e=>{let{value:t,label:a,attributes:o}=e;return r.createElement("li",(0,n.Z)({role:"tab",tabIndex:C===t?0:-1,"aria-selected":C===t,key:t,ref:e=>L.push(e),onKeyDown:R,onFocus:x,onClick:x},o,{className:(0,i.Z)("tabs__item",m,null==o?void 0:o.className,{"tabs__item--active":C===t})}),null!=a?a:t)}))),o?(0,r.cloneElement)(g.filter((e=>e.props.value===C))[0],{className:"margin-top--md"}):r.createElement("div",{className:"margin-top--md"},g.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==C})))))}function c(e){const t=(0,o.Z)();return r.createElement(u,(0,n.Z)({key:String(t)},e))}},17173:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>p,contentTitle:()=>d,default:()=>c,frontMatter:()=>l,metadata:()=>s,toc:()=>m});var n=a(87462),r=(a(67294),a(3905)),i=a(65488),o=a(85162);const l={id:"audit-log-provider",title:"Audit Log Provider"},d=void 0,s={unversionedId:"core/providers/audit-log-provider",id:"core/providers/audit-log-provider",title:"Audit Log Provider",description:"Overview",source:"@site/docs/core/providers/audit-log-provider.md",sourceDirName:"core/providers",slug:"/core/providers/audit-log-provider",permalink:"/docs/core/providers/audit-log-provider",draft:!1,editUrl:"https://github.com/pankod/refine/tree/master/documentation/docs/core/providers/audit-log-provider.md",tags:[],version:"current",lastUpdatedBy:"\xd6mer Faruk APLAK",lastUpdatedAt:1657110817,formattedLastUpdatedAt:"7/6/2022",frontMatter:{id:"audit-log-provider",title:"Audit Log Provider"},sidebar:"someSidebar",previous:{title:"Auth Provider",permalink:"/docs/core/providers/auth-provider"},next:{title:"Data Provider",permalink:"/docs/core/providers/data-provider"}},p={},m=[{value:"Overview",id:"overview",level:2},{value:"Usage",id:"usage",level:2},{value:"Creating an Audit Log Provider",id:"creating-an-audit-log-provider",level:2},{value:"<code>get</code>",id:"get",level:3},{value:"Parameter Types",id:"parameter-types",level:4},{value:"<code>create</code>",id:"create",level:3},{value:"Parameter Types",id:"parameter-types-1",level:4},{value:"<code>update</code>",id:"update",level:3},{value:"Parameter Types",id:"parameter-types-2",level:4},{value:"Supported Hooks",id:"supported-hooks",level:2},{value:"<code>useCreate</code>",id:"usecreate",level:3},{value:"<code>useUpdate</code>",id:"useupdate",level:3},{value:"<code>useDelete</code>",id:"usedelete",level:3},{value:"Enable/Disable to Audit Log by Mutation Type for a Resource",id:"enabledisable-to-audit-log-by-mutation-type-for-a-resource",level:2},{value:"Live StackBlitz Example",id:"live-stackblitz-example",level:2}],u={toc:m};function c(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,n.Z)({},u,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"overview"},"Overview"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"refine")," allows you to track changes in your data and keep track of who made the changes. This is done by sending a new log event record whenever a new record is created, updated or deleted. Mutations made with data hooks are automatically sent the ",(0,r.kt)("inlineCode",{parentName:"p"},"auditLogProvider")," as an event. You can also manually send events to the ",(0,r.kt)("inlineCode",{parentName:"p"},"auditLogProvider")," via hooks."),(0,r.kt)("p",null,"An audit log provider must have the following three methods:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"create"),": Logs an event to the audit log."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"get"),": Returns a list of events."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"update"),": Updates an event in the audit log.")),(0,r.kt)("p",null,"Below are the corresponding interfaces for each of these methods."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"const auditLogProvider = {\n    create: (params: {\n        resource: string;\n        action: string;\n        data?: any;\n        author?: {\n            name?: string;\n            [key: string]: any;\n        };\n        previousData?: any;\n        meta?: Record<string, any>;\n    }) => void;\n    get: (params: {\n        resource: string;\n        action?: string;\n        meta?: Record<string, any>;\n        author?: Record<string, any>;\n        metaData?: MetaDataQuery;\n    }) => Promise<any>;\n    update: (params: {\n        id: BaseKey;\n        name: string;\n    }) => Promise<any>;\n}\n")),(0,r.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},(0,r.kt)("strong",{parentName:"p"},"refine")," provides the ",(0,r.kt)("inlineCode",{parentName:"p"},"useLog")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"useLogList")," hooks to access your ",(0,r.kt)("inlineCode",{parentName:"p"},"auditLogProvider")," methods from anywhere in your application."))),(0,r.kt)("h2",{id:"usage"},"Usage"),(0,r.kt)("p",null,"You just need to pass your ",(0,r.kt)("inlineCode",{parentName:"p"},"auditLogProvider")," object to ",(0,r.kt)("inlineCode",{parentName:"p"},"<Refine>"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx",metastring:'title="App.tsx"',title:'"App.tsx"'},'import { Refine } from "@pankod/refine-core";\n\nimport auditLogProvider from "./auditLogProvider";\n\nconst App: React.FC = () => {\n    return <Refine auditLogProvider={auditLogProvider} />;\n};\n')),(0,r.kt)("h2",{id:"creating-an-audit-log-provider"},"Creating an Audit Log Provider"),(0,r.kt)("p",null,"Let's create an ",(0,r.kt)("inlineCode",{parentName:"p"},"auditLogProvider")," to understand better. In this example, we will use ",(0,r.kt)("inlineCode",{parentName:"p"},"dataProvider")," to handle events. But you can handle events whatever you want because ",(0,r.kt)("strong",{parentName:"p"},"refine")," provides an agnostic API. So, If you want to use a third-party library, of course, you can."),(0,r.kt)("h3",{id:"get"},(0,r.kt)("inlineCode",{parentName:"h3"},"get")),(0,r.kt)("p",null,"This method is used to list audit log events."),(0,r.kt)("p",null,"For example, using ",(0,r.kt)("inlineCode",{parentName:"p"},"useLogList")," hook to list all resource activities by a specific record id creates an event like this:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "resource": "posts",\n    "meta": {\n        "id": "1"\n    }\n}\n')),(0,r.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"The event is create with parameters passed to the ",(0,r.kt)("inlineCode",{parentName:"p"},"useLogList")," hook."))),(0,r.kt)("p",null,"Now let's see how we can handle these events in our audit log provider."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="auditLogProvider.ts"',title:'"auditLogProvider.ts"'},'import refineSimpleRestDataProvider from "@pankod/refine-simple-rest";\n\nconst API_URL = "https://api.fake-rest.refine.dev";\n\nconst dataProvider = refineSimpleRestDataProvider(API_URL);\n\nconst auditLogProvider: AuditLogProvider = {\n    get: async ({ resource, meta }) => {\n        const { data } = await dataProvider(API_URL).getList({\n            resource: "logs",\n            filters: [\n                {\n                    field: "resource",\n                    operator: "eq",\n                    value: resource,\n                },\n                {\n                    field: "meta.id",\n                    operator: "eq",\n                    value: meta?.id,\n                },\n            ],\n        });\n\n        return data;\n    },\n};\n')),(0,r.kt)("h4",{id:"parameter-types"},"Parameter Types"),(0,r.kt)("p",null,"This method can take the following parameters via hooks. You can use these parameters to filter the events."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"resource"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"string"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"action"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},'"create"')," ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},'"update"')," ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},'"delete"')," ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},"string"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"meta"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Record<string, any>"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"author"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Record<string, any>"))))),(0,r.kt)("h3",{id:"create"},(0,r.kt)("inlineCode",{parentName:"h3"},"create")),(0,r.kt)("p",null,"This method is used to create an audit log event. It is triggered when a new successful mutation or when you use ",(0,r.kt)("inlineCode",{parentName:"p"},"useLog"),"'s ",(0,r.kt)("inlineCode",{parentName:"p"},"log")," method. The incoming parameters show the values of the new record to be created."),(0,r.kt)("div",{className:"admonition admonition-caution alert alert--warning"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"caution")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"We recommend you create audit logs on the API side for security concerns because data can be changed on the client side."))),(0,r.kt)("p",null,"When the mutations is successful, the ",(0,r.kt)("inlineCode",{parentName:"p"},"create")," method is called with the following parameters, depending on the mutation type:"),(0,r.kt)(i.Z,{defaultValue:"create",values:[{label:"Create event",value:"create"},{label:"Update event",value:"update"},{label:"Delete event",value:"delete"}],mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"create",mdxType:"TabItem"},(0,r.kt)("p",null,"When a record is created, refine automatically sends an event to ",(0,r.kt)("inlineCode",{parentName:"p"},"create")," method like this:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "action": "create",\n    "resource": "posts",\n    "data": {\n        "id": "1",\n        "title": "Hello World",\n        "content": "Hello World"\n    },\n    "meta": {\n        "dataProviderName": "simple-rest",\n        // If request response has a `id` field, it will be add in the `meta` field.\n        "id": "1"\n    }\n}\n')),(0,r.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"The ",(0,r.kt)("inlineCode",{parentName:"p"},"id")," of the created record is added to the ",(0,r.kt)("inlineCode",{parentName:"p"},"meta")," object. It can be used for filtering purposes.")))),(0,r.kt)(o.Z,{value:"update",mdxType:"TabItem"},(0,r.kt)("p",null,"When a record is updated, refine automatically sends an event to ",(0,r.kt)("inlineCode",{parentName:"p"},"create")," method like this:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "action": "update",\n    "resource": "posts",\n    "data": {\n        "id": "1",\n        "title": "New Hello World",\n        "content": "New Hello World"\n    },\n    "previousData": {\n        "id": "1",\n        "title": "Hello World",\n        "content": "Hello World"\n    },\n    "meta": {\n        "dataProviderName": "simple-rest",\n        "id": "1"\n    }\n}\n')),(0,r.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},(0,r.kt)("strong",{parentName:"p"},"refine")," returns the ",(0,r.kt)("inlineCode",{parentName:"p"},"previousData")," from the react-query cache. So, if it cannot find the previous data, it will return ",(0,r.kt)("inlineCode",{parentName:"p"},"undefined"),".")))),(0,r.kt)(o.Z,{value:"delete",mdxType:"TabItem"},(0,r.kt)("p",null,"When a record is deleted, refine automatically sends an event to ",(0,r.kt)("inlineCode",{parentName:"p"},"create")," method like this:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "action": "delete",\n    "resource": "posts",\n    "meta": {\n        "dataProviderName": "simple-rest",\n        "id": "1"\n    }\n}\n')))),(0,r.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"If ",(0,r.kt)("a",{parentName:"p",href:"/docs/core/providers/auth-provider"},(0,r.kt)("inlineCode",{parentName:"a"},"getUserIdentity"))," is defined in your auth provider, the ",(0,r.kt)("inlineCode",{parentName:"p"},"author")," object is added to the event with the value returned by ",(0,r.kt)("inlineCode",{parentName:"p"},"getUserIdentity"),"."))),(0,r.kt)("br",null),(0,r.kt)("p",null,"Now let's see how we can handle these events in our audit log provider."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="auditLogProvider.ts"',title:'"auditLogProvider.ts"'},'import refineSimpleRestDataProvider from "@pankod/refine-simple-rest";\n\nconst API_URL = "https://api.fake-rest.refine.dev";\n\nconst dataProvider = refineSimpleRestDataProvider(API_URL);\n\nconst auditLogProvider: AuditLogProvider = {\n    create: (params) => {\n        return dataProvider(API_URL).create({\n            resource: "logs",\n            variables: params,\n        });\n    },\n};\n')),(0,r.kt)("h4",{id:"parameter-types-1"},"Parameter Types"),(0,r.kt)("p",null,"This method can take the following parameters."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"resource"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"string"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"action"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},'"create"')," ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},'"update"')," ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},'"delete"')," ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},"string"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"meta"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Record<string, any>"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"data"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Record<string, any>"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"author"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Record<string, any>"))))),(0,r.kt)("br",null),(0,r.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},(0,r.kt)("strong",{parentName:"p"},"refine")," will use this ",(0,r.kt)("inlineCode",{parentName:"p"},"create")," method in the ",(0,r.kt)("a",{parentName:"p",href:"/docs/core/hooks/audit-log/useLog"},(0,r.kt)("inlineCode",{parentName:"a"},"useLog"))," hook."),(0,r.kt)("p",{parentName:"div"},(0,r.kt)("a",{parentName:"p",href:"/docs/core/hooks/audit-log/useLog"},"Refer to the ",(0,r.kt)("inlineCode",{parentName:"a"},"useLog")," documentation for more information. ","\u2192")))),(0,r.kt)("h3",{id:"update"},(0,r.kt)("inlineCode",{parentName:"h3"},"update")),(0,r.kt)("p",null,"This method is used to update an audit log event."),(0,r.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"If you want to name an event, this is the way to do it. You can create a milestone by naming it."))),(0,r.kt)("p",null,"For example, using ",(0,r.kt)("inlineCode",{parentName:"p"},"useLog"),"'s ",(0,r.kt)("inlineCode",{parentName:"p"},"log")," method creates an event like below:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "id": "1",\n    "name": "event name"\n}\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="auditLogProvider.ts"',title:'"auditLogProvider.ts"'},'import refineSimpleRestDataProvider from "@pankod/refine-simple-rest";\n\nconst API_URL = "https://api.fake-rest.refine.dev";\n\nconst dataProvider = refineSimpleRestDataProvider(API_URL);\n\nconst auditLogProvider: AuditLogProvider = {\n    update: async ({ id, name }) => {\n        const { data } = await dataProvider(API_URL).update({\n            resource: "logs",\n            id,\n            variables: { name },\n        });\n        return data;\n    },\n};\n')),(0,r.kt)("h4",{id:"parameter-types-2"},"Parameter Types"),(0,r.kt)("p",null,"This method can take the following parameters."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"id"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"BaseKey"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"name"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"string"))))),(0,r.kt)("br",null),(0,r.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},(0,r.kt)("strong",{parentName:"p"},"refine")," will use this ",(0,r.kt)("inlineCode",{parentName:"p"},"update")," method in the ",(0,r.kt)("a",{parentName:"p",href:"/docs/core/hooks/audit-log/useLog"},(0,r.kt)("inlineCode",{parentName:"a"},"useLog"))," hook."),(0,r.kt)("p",{parentName:"div"},(0,r.kt)("a",{parentName:"p",href:"/docs/core/hooks/audit-log/useLog"},"Refer to the ",(0,r.kt)("inlineCode",{parentName:"a"},"useLog")," documentation for more information. ","\u2192")))),(0,r.kt)("h2",{id:"supported-hooks"},"Supported Hooks"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"refine")," creates an audit log event when the mutation is succssful on hooks that ",(0,r.kt)("inlineCode",{parentName:"p"},"useCreate"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"useUpdate")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"useDelete")," hooks. The ",(0,r.kt)("inlineCode",{parentName:"p"},"useCreateMany"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"useUpdateMany")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"useDeleteMany")," hooks are not create audit log events."),(0,r.kt)("h3",{id:"usecreate"},(0,r.kt)("inlineCode",{parentName:"h3"},"useCreate")),(0,r.kt)("p",null,"When ",(0,r.kt)("inlineCode",{parentName:"p"},"useCreate")," is called, ",(0,r.kt)("inlineCode",{parentName:"p"},"refine")," sends the following parameters to audit log provider's ",(0,r.kt)("inlineCode",{parentName:"p"},"create")," method."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},'const { mutate } = useCreate();\n\nmutate({\n    resource: "posts",\n    values: {\n        title: "New Post",\n        status: "published",\n        content: "New Post Content",\n    },\n    metaData: {\n        foo: "bar",\n    },\n});\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="Create event"',title:'"Create','event"':!0},'{\n    "action": "create",\n    "resource": "posts",\n    "data": {\n        "title": "Title",\n        "status": "published",\n        "content": "New Post Content"\n    },\n    "meta": {\n        "id": "1",\n        // `metaData` is included in `meta`.\n        "foo": "bar"\n    }\n}\n')),(0,r.kt)("h3",{id:"useupdate"},(0,r.kt)("inlineCode",{parentName:"h3"},"useUpdate")),(0,r.kt)("p",null,"When ",(0,r.kt)("inlineCode",{parentName:"p"},"useUpdate")," is called, ",(0,r.kt)("inlineCode",{parentName:"p"},"refine")," sends the following parameters to audit log provider's ",(0,r.kt)("inlineCode",{parentName:"p"},"create")," method."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},'const { mutate } = useUpdate();\n\nmutate({\n    id: 1,\n    resource: "posts",\n    values: {\n        title: "Updated New Title",\n    },\n});\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="Update event"',title:'"Update','event"':!0},'{\n    "action": "update",\n    "resource": "posts",\n    "data": {\n        "title": "Updated New Title",\n        "status": "published",\n        "content": "New Post Content"\n    },\n    "previousData": {\n        "title": "Title",\n        "status": "published",\n        "content": "New Post Content"\n    },\n    "meta": {\n        "id": 1\n    }\n}\n')),(0,r.kt)("h3",{id:"usedelete"},(0,r.kt)("inlineCode",{parentName:"h3"},"useDelete")),(0,r.kt)("p",null,"When ",(0,r.kt)("inlineCode",{parentName:"p"},"useDelete")," is called, ",(0,r.kt)("inlineCode",{parentName:"p"},"refine")," sends the following parameters to audit log provider's ",(0,r.kt)("inlineCode",{parentName:"p"},"create")," method."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},'const { mutate } = useDelete();\n\nmutate({\n    id: 1,\n    resource: "posts",\n});\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="Delete event"',title:'"Delete','event"':!0},'{\n    "action": "delete",\n    "resource": "posts",\n    "meta": {\n        "id": 1\n    }\n}\n')),(0,r.kt)("br",null),(0,r.kt)("h2",{id:"enabledisable-to-audit-log-by-mutation-type-for-a-resource"},"Enable/Disable to Audit Log by Mutation Type for a Resource"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"options")," allows you to manage the audit log events for a resource. In addition, it can be managed in which type of mutations an event will be created. ",(0,r.kt)("strong",{parentName:"p"},"If no definition is made, it works in all actions"),"."),(0,r.kt)("p",null,"In this case, only events will be created for the ",(0,r.kt)("inlineCode",{parentName:"p"},"create")," mutation."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="App.tsx"',title:'"App.tsx"'},'<Refine\n    dataProvider={dataProvider(API_URL)}\n    resources={[\n        {\n            name: "posts",\n            list: PostList,\n            create: PostCreate,\n            edit: PostEdit,\n            show: PostShow,\n            canDelete: true,\n            // highlight-start\n            options: {\n                auditLog: {\n                    permissions: ["create"],\n                },\n            },\n            // highlight-end\n        },\n    ]}\n/>\n')),(0,r.kt)("h2",{id:"live-stackblitz-example"},"Live StackBlitz Example"),(0,r.kt)("iframe",{src:"https://stackblitz.com/github/pankod/refine/tree/master/examples/auditLogProvider?embed=1&view=preview&theme=dark&preset=node",style:{width:"100%",height:"80vh",border:"0px",borderRadius:"8px",overflow:"hidden"},title:"refine-audit-log-provider-example"}))}c.isMDXComponent=!0}}]);