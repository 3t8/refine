"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[19349],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>c});var a=n(67294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},d=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,s=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),m=p(n),c=i,h=m["".concat(s,".").concat(c)]||m[c]||u[c]||r;return n?a.createElement(h,o(o({ref:t},d),{},{components:n})):a.createElement(h,o({ref:t},d))}));function c(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,o=new Array(r);o[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:i,o[1]=l;for(var p=2;p<r;p++)o[p]=n[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},13545:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>u,frontMatter:()=>r,metadata:()=>l,toc:()=>p});var a=n(87462),i=(n(67294),n(3905));const r={id:"useNavigation",title:"useNavigation"},o=void 0,l={unversionedId:"api-references/hooks/navigation/useNavigation",id:"version-2.xx.xx/api-references/hooks/navigation/useNavigation",title:"useNavigation",description:"refine uses routerProvider and comes with all redirects out of the box. It allows you to manage your routing operations in refine. Using this hook, you can manage all the routing operations of your application very easily.",source:"@site/versioned_docs/version-2.xx.xx/api-references/hooks/navigation/useNavigation.md",sourceDirName:"api-references/hooks/navigation",slug:"/api-references/hooks/navigation/useNavigation",permalink:"/docs/2.xx.xx/api-references/hooks/navigation/useNavigation",draft:!1,editUrl:"https://github.com/pankod/refine/tree/master/documentation/versioned_docs/version-2.xx.xx/api-references/hooks/navigation/useNavigation.md",tags:[],version:"2.xx.xx",lastUpdatedBy:"\xd6mer Faruk APLAK",lastUpdatedAt:1636468358,formattedLastUpdatedAt:"11/9/2021",frontMatter:{id:"useNavigation",title:"useNavigation"},sidebar:"version-2.xx.xx/someSidebar",previous:{title:"useResourceWithRoute",permalink:"/docs/2.xx.xx/api-references/hooks/resource/useResourceWithRoute"},next:{title:"useImport",permalink:"/docs/2.xx.xx/api-references/hooks/import-export/useImport"}},s={},p=[{value:"Usage",id:"usage",level:3},{value:"List",id:"list",level:2},{value:"Create",id:"create",level:3},{value:"Edit",id:"edit",level:3},{value:"Show",id:"show",level:3},{value:"Clone",id:"clone",level:3},{value:"Push, Replace and GoBack",id:"push-replace-and-goback",level:3},{value:"API Reference",id:"api-reference",level:2},{value:"Properties",id:"properties",level:3},{value:"Return values",id:"return-values",level:3},{value:"Interface",id:"interface",level:4}],d={toc:p};function u(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"refine")," uses ",(0,i.kt)("a",{parentName:"p",href:"/docs/2.xx.xx/api-references/providers/router-provider"},(0,i.kt)("inlineCode",{parentName:"a"},"routerProvider"))," and comes with all redirects out of the box. It allows you to manage your routing operations in refine. Using this hook, you can manage all the routing operations of your application very easily."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-tsx"},'import { useNavigation } from "@pankod/refine";\n\nconst { create, edit, clone, show, list, push, replace, goBack } = useNavigation();\n')),(0,i.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},(0,i.kt)("inlineCode",{parentName:"p"},"useNavigation")," uses the ",(0,i.kt)("inlineCode",{parentName:"p"},"useHistory")," of the ",(0,i.kt)("a",{parentName:"p",href:"/docs/2.xx.xx/api-references/providers/router-provider"},(0,i.kt)("inlineCode",{parentName:"a"},"routerProvider")),"."))),(0,i.kt)("h3",{id:"usage"},"Usage"),(0,i.kt)("p",null,"We will make a button for each method to use."),(0,i.kt)("h2",{id:"list"},"List"),(0,i.kt)("p",null,"Let's imagine that we have a post list and we want to be redirected to this page. To do this we will use the list hook."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-tsx"},'import {\n    Button,\n// highlight-next-line\n    useNavigation,\n} from "@pankod/refine";\n\nexport const MyListButton = () => {\n// highlight-next-line\n    const { list } = useNavigation();\n\n    return (\n        <Button\n            onClick={(): void =>\n// highlight-next-line\n                list("posts")\n            }\n        >\n            Navigate to Post List Page\n        </Button>\n    );\n};\n')),(0,i.kt)("h3",{id:"create"},"Create"),(0,i.kt)("p",null,"If we want to go to the post creation page to create a new post, we can use the create hook."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-tsx"},'import {\n    Button,\n// highlight-next-line\n    useNavigation,\n} from "@pankod/refine";\n\nexport const MyCreateButton = () => {\n// highlight-next-line\n    const { create } = useNavigation();\n\n    return (\n        <Button\n            onClick={(): void =>\n// highlight-next-line\n                create("posts")\n            }\n        >\n            Navigate to Create Page\n        </Button>\n    );\n};\n')),(0,i.kt)("h3",{id:"edit"},"Edit"),(0,i.kt)("p",null,"Let's see what we should do if we want to go to the editing page of one of our posts."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-tsx"},'import {\n    Button,\n// highlight-next-line\n    useNavigation,\n} from "@pankod/refine";\n\nexport const MyEditButton = () => {\n// highlight-next-line\n    const { edit } = useNavigation();\n\n    return (\n        <Button\n            onClick={(): void =>\n// highlight-next-line\n                edit("posts", "1")\n            }\n        >\n            Navigate to Edit Page\n        </Button>\n    );\n};\n')),(0,i.kt)("p",null,"We used the ",(0,i.kt)("inlineCode",{parentName:"p"},"edit")," to navigate to the post edit page, but you can see the differences in using it. ",(0,i.kt)("inlineCode",{parentName:"p"},"edit")," requires the id property from us and clicking the button will trigger the edit method of useNavigation and then redirect the app to ",(0,i.kt)("inlineCode",{parentName:"p"},"/posts/edit/1")),(0,i.kt)("div",{className:"admonition admonition-caution alert alert--warning"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"Attention")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"There is something we should pay attention to here. We need to give the ",(0,i.kt)("inlineCode",{parentName:"p"},"id")," of which post we want to edit."))),(0,i.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"You can also give a ",(0,i.kt)("inlineCode",{parentName:"p"},"type")," property to the methods. You can look here to see the ",(0,i.kt)("a",{parentName:"p",href:"#properties"},"properties.")))),(0,i.kt)("h3",{id:"show"},"Show"),(0,i.kt)("p",null,"If you want to show the detail of your posts you can use show and you need ",(0,i.kt)("inlineCode",{parentName:"p"},"id")," for show."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-tsx"},'import {\n    Button,\n// highlight-next-line\n    useNavigation,\n} from "@pankod/refine";\n\nexport const MyShowButton = () => {\n// highlight-next-line\n    const { show } = useNavigation();\n\n    return (\n        <Button\n            onClick={(): void =>\n// highlight-next-line\n                show("posts", "1")\n            }\n        >\n            Navigate to Show Page\n        </Button>\n    );\n};\n')),(0,i.kt)("div",{className:"admonition admonition-caution alert alert--warning"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"Attention")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"There is something we should pay attention to here. We need to give the ",(0,i.kt)("inlineCode",{parentName:"p"},"id")," of which post we want to show."))),(0,i.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"If you want to return to previous page. You can use ",(0,i.kt)("inlineCode",{parentName:"p"},"goBack")," hook."))),(0,i.kt)("h3",{id:"clone"},"Clone"),(0,i.kt)("p",null,"If we have the resources to clone a post and we want to go to this page, we will use ",(0,i.kt)("inlineCode",{parentName:"p"},"clone")," with a record id."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-tsx"},'import {\n    Button,\n// highlight-next-line\n    useNavigation,\n} from "@pankod/refine";\n\nexport const MyCloneButton = () => {\n// highlight-next-line\n    const { clone } = useNavigation();\n\n    return (\n        <Button\n            onClick={(): void =>\n// highlight-next-line\n                clone("posts", "1")\n            }\n        >\n            Navigate to Clone Page\n        </Button>\n    );\n};\n')),(0,i.kt)("div",{className:"admonition admonition-caution alert alert--warning"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"Attention")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"There is something we should pay attention to here. We need to give the ",(0,i.kt)("inlineCode",{parentName:"p"},"id")," of which post we want to clone."))),(0,i.kt)("h3",{id:"push-replace-and-goback"},"Push, Replace and GoBack"),(0,i.kt)("p",null,"If we do not want to use the above methods and want to redirect ourselves, we should use ",(0,i.kt)("inlineCode",{parentName:"p"},"push")," or ",(0,i.kt)("inlineCode",{parentName:"p"},"replace")," methods and also we can use ",(0,i.kt)("inlineCode",{parentName:"p"},"goBack")," to return to previous page. You can check out the differences between them ",(0,i.kt)("a",{parentName:"p",href:"#return-values"},"here"),"."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-tsx"},'import {\n    Button,\n// highlight-next-line\n    useNavigation,\n} from "@pankod/refine";\n\nexport const MyHistoryButtons = () => {\n// highlight-next-line\n    const { push, replace, goBack } = useNavigation();\n\n    return (\n        <>\n            <Button\n                onClick={(): void =>\n// highlight-next-line\n                    push("posts")\n                }\n            >\n                Push to posts Page\n            </Button>\n            <Button\n                onClick={(): void =>\n// highlight-next-line\n                    replace("posts")\n                }\n            >\n                Replaces to posts Page\n            </Button>\n            <Button\n                onClick={(): void =>\n// highlight-next-line\n                    goBack()\n                }\n            >\n                Go back to previous Page\n            </Button>\n        </>\n    );\n};\n')),(0,i.kt)("h2",{id:"api-reference"},"API Reference"),(0,i.kt)("h3",{id:"properties"},"Properties"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Property"),(0,i.kt)("th",{parentName:"tr",align:null},"Description"),(0,i.kt)("th",{parentName:"tr",align:null},"Type"),(0,i.kt)("th",{parentName:"tr",align:null},"Default"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"resource ",(0,i.kt)("div",{className:"required"},"Required")),(0,i.kt)("td",{parentName:"tr",align:null},"Redirect the app to the given resource name"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"string")),(0,i.kt)("td",{parentName:"tr",align:null})),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"type"),(0,i.kt)("td",{parentName:"tr",align:null},"It is ",(0,i.kt)("a",{parentName:"td",href:"/docs/2.xx.xx/api-references/providers/router-provider"},(0,i.kt)("inlineCode",{parentName:"a"},"routerProvider"))," history types"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("a",{parentName:"td",href:"#interface"},"HistoryType")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},'"push"'))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"id"),(0,i.kt)("td",{parentName:"tr",align:null},"It is used to append to the end of the path"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"string")),(0,i.kt)("td",{parentName:"tr",align:null})))),(0,i.kt)("h3",{id:"return-values"},"Return values"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Property"),(0,i.kt)("th",{parentName:"tr",align:null},"Description"),(0,i.kt)("th",{parentName:"tr",align:null},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"create"),(0,i.kt)("td",{parentName:"tr",align:null},"Navigate to ",(0,i.kt)("inlineCode",{parentName:"td"},"create page")," of your resource"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"(resource: string, type:")," ",(0,i.kt)("a",{parentName:"td",href:"#interface"},"HistoryType")," ",(0,i.kt)("inlineCode",{parentName:"td"},") => void "))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"list"),(0,i.kt)("td",{parentName:"tr",align:null},"Navigate to ",(0,i.kt)("inlineCode",{parentName:"td"},"list page")," of your resource"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"(resource: string, type:")," ",(0,i.kt)("a",{parentName:"td",href:"#interface"},"HistoryType")," ",(0,i.kt)("inlineCode",{parentName:"td"},") => void"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"edit"),(0,i.kt)("td",{parentName:"tr",align:null},"Navigate to ",(0,i.kt)("inlineCode",{parentName:"td"},"edit page")," of your resource"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"(resource: string, type:")," ",(0,i.kt)("a",{parentName:"td",href:"#interface"},"HistoryType")," ",(0,i.kt)("inlineCode",{parentName:"td"},", id: string) => void"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"clone"),(0,i.kt)("td",{parentName:"tr",align:null},"Navigate to ",(0,i.kt)("inlineCode",{parentName:"td"},"clone page")," of your resource"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"(resource: string, type:")," ",(0,i.kt)("a",{parentName:"td",href:"#interface"},"HistoryType")," ",(0,i.kt)("inlineCode",{parentName:"td"},", id: string) => void"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"show"),(0,i.kt)("td",{parentName:"tr",align:null},"Navigate to ",(0,i.kt)("inlineCode",{parentName:"td"},"show page")," of your resource"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"(resource: string, type:")," ",(0,i.kt)("a",{parentName:"td",href:"#interface"},"HistoryType")," ",(0,i.kt)("inlineCode",{parentName:"td"},", id: string) => void"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"push"),(0,i.kt)("td",{parentName:"tr",align:null},"Pushes a new entry onto the history stack"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"(path: string, state?: unknown ) => void"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"replace"),(0,i.kt)("td",{parentName:"tr",align:null},"Replaces the current entry on the history stack"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"(path: string, state?: unknown ) => void"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"goBack"),(0,i.kt)("td",{parentName:"tr",align:null},"Equivalent to go previous stack"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"() => void"))))),(0,i.kt)("h4",{id:"interface"},"Interface"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-tsx",metastring:'title="History Type"',title:'"History','Type"':!0},'export type HistoryType = "push" | "replace";\n')))}u.isMDXComponent=!0}}]);