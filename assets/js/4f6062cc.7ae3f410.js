"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[4017],{58215:function(e,t,r){var n=r(67294);t.Z=function(e){var t=e.children,r=e.hidden,a=e.className;return n.createElement("div",{role:"tabpanel",hidden:r,className:a},t)}},55064:function(e,t,r){r.d(t,{Z:function(){return c}});var n=r(67294),a=r(79443);var o=function(){var e=(0,n.useContext)(a.Z);if(null==e)throw new Error('"useUserPreferencesContext" is used outside of "Layout" component.');return e},i=r(86010),s="tabItem_1uMI",d="tabItemActive_2DSg";var u=37,p=39;var c=function(e){var t=e.lazy,r=e.block,a=e.defaultValue,c=e.values,l=e.groupId,m=e.className,f=o(),g=f.tabGroupChoices,k=f.setTabGroupChoices,h=(0,n.useState)(a),v=h[0],x=h[1],b=n.Children.toArray(e.children),y=[];if(null!=l){var N=g[l];null!=N&&N!==v&&c.some((function(e){return e.value===N}))&&x(N)}var C=function(e){var t=e.currentTarget,r=y.indexOf(t),n=c[r].value;x(n),null!=l&&(k(l,n),setTimeout((function(){var e,r,n,a,o,i,s,u;(e=t.getBoundingClientRect(),r=e.top,n=e.left,a=e.bottom,o=e.right,i=window,s=i.innerHeight,u=i.innerWidth,r>=0&&o<=u&&a<=s&&n>=0)||(t.scrollIntoView({block:"center",behavior:"smooth"}),t.classList.add(d),setTimeout((function(){return t.classList.remove(d)}),2e3))}),150))},P=function(e){var t,r;switch(e.keyCode){case p:var n=y.indexOf(e.target)+1;r=y[n]||y[0];break;case u:var a=y.indexOf(e.target)-1;r=y[a]||y[y.length-1]}null==(t=r)||t.focus()};return n.createElement("div",{className:"tabs-container"},n.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.Z)("tabs",{"tabs--block":r},m)},c.map((function(e){var t=e.value,r=e.label;return n.createElement("li",{role:"tab",tabIndex:v===t?0:-1,"aria-selected":v===t,className:(0,i.Z)("tabs__item",s,{"tabs__item--active":v===t}),key:t,ref:function(e){return y.push(e)},onKeyDown:P,onFocus:C,onClick:C},r)}))),t?(0,n.cloneElement)(b.filter((function(e){return e.props.value===v}))[0],{className:"margin-vert--md"}):n.createElement("div",{className:"margin-vert--md"},b.map((function(e,t){return(0,n.cloneElement)(e,{key:t,hidden:e.props.value!==v})}))))}},82924:function(e,t,r){var n=r(67294).createContext(void 0);t.Z=n},79443:function(e,t,r){var n=(0,r(67294).createContext)(void 0);t.Z=n},85350:function(e,t,r){var n=r(67294),a=r(82924);t.Z=function(){var e=(0,n.useContext)(a.Z);if(null==e)throw new Error('"useThemeContext" is used outside of "Layout" component. Please see https://docusaurus.io/docs/api/themes/configuration#usethemecontext.');return e}},4755:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return p},contentTitle:function(){return c},metadata:function(){return l},toc:function(){return m},Packages:function(){return f},default:function(){return k}});var n=r(22122),a=r(19756),o=(r(67294),r(3905)),i=r(55064),s=r(58215),d=r(94579),u=["components"],p={id:"migration-guide",title:"Migration Guide"},c=void 0,l={unversionedId:"migration-guide",id:"version-2.xx.xx/migration-guide",isDocsHomePage:!1,title:"Migration Guide",description:"1.0.XX to 2.0.XX",source:"@site/versioned_docs/version-2.xx.xx/migration-guide.md",sourceDirName:".",slug:"/migration-guide",permalink:"/docs/migration-guide",editUrl:"https://github.com/pankod/refine/tree/master/documentation/versioned_docs/version-2.xx.xx/migration-guide.md",version:"2.xx.xx",lastUpdatedBy:"\xd6mer Faruk APLAK",lastUpdatedAt:1636468358,formattedLastUpdatedAt:"11/9/2021",frontMatter:{id:"migration-guide",title:"Migration Guide"},sidebar:"version-2.xx.xx/someSidebar",previous:{title:"Javascript",permalink:"/docs/examples/javascript"},next:{title:"Testing",permalink:"/docs/testing"}},m=[{value:"1.0.XX to 2.0.XX",id:"10xx-to-20xx",children:[{value:"Motivation behind breaking changes",id:"motivation-behind-breaking-changes",children:[]}]},{value:"\ud83e\ude84 Migrating your project automatically with refine-codemod \u2728 (recommended)",id:"\ud83e\ude84-migrating-your-project-automatically-with-refine-codemod--recommended",children:[]},{value:"Migrating your project manually",id:"migrating-your-project-manually",children:[{value:"Updating the packages",id:"updating-the-packages",children:[]},{value:"<code>&lt;Resource/&gt;</code> to <code>resources</code>",id:"resource-to-resources",children:[]},{value:"<code>routerProvider</code>",id:"routerprovider-1",children:[]},{value:"Custom Pages",id:"custom-pages-1",children:[]}]}],f=function(){var e=["@pankod/refine","@pankod/refine-airtable","@pankod/refine-altogic","@pankod/refine-graphql","@pankod/refine-hasura","@pankod/refine-nestjsx-crud","@pankod/refine-nextjs-router","@pankod/refine-react-router","@pankod/refine-simple-rest","@pankod/refine-strapi","@pankod/refine-strapi-graphql","@pankod/refine-supabase"];return(0,o.kt)(i.Z,{defaultValue:"@pankod/refine",values:e.map((function(e){return{label:e,value:e}})),mdxType:"Tabs"},e.map((function(e){return(0,o.kt)(s.Z,{value:e,mdxType:"TabItem"},(0,o.kt)(d.Z,{className:"language-bash",mdxType:"CodeBlock"},"npm i "+e+"@latest"))})))},g={toc:m,Packages:f};function k(e){var t=e.components,r=(0,a.Z)(e,u);return(0,o.kt)("wrapper",(0,n.Z)({},g,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"10xx-to-20xx"},"1.0.XX to 2.0.XX"),(0,o.kt)("h3",{id:"motivation-behind-breaking-changes"},"Motivation behind breaking changes"),(0,o.kt)("h4",{id:"resources"},(0,o.kt)("inlineCode",{parentName:"h4"},"resources")),(0,o.kt)("p",null,"Making ",(0,o.kt)("inlineCode",{parentName:"p"},"resources")," property-based instead of component-based was necessary for Nextjs support. A property is also more flexible, dynamic and easier to configure compared to a component."),(0,o.kt)("h4",{id:"routerprovider"},(0,o.kt)("inlineCode",{parentName:"h4"},"routerProvider")),(0,o.kt)("p",null,"Router layer is abstracted from the core for mainly Nextjs support. This also creates the opportunity for any other router solution to be used."),(0,o.kt)("h4",{id:"custom-pages"},"Custom Pages"),(0,o.kt)("p",null,"This is also related to abstracting away the router layer from core. Differences between (currently two) router provider are so big that adding a layer to cover both cases (possibly more in the future) is much harder to implement and maintain compared to letting everyone handle it with their own conventions. This also has the huge benefit of allowing maximum configurability for every respective provider."),(0,o.kt)("h2",{id:"\ud83e\ude84-migrating-your-project-automatically-with-refine-codemod--recommended"},"\ud83e\ude84 Migrating your project automatically with refine-codemod \u2728 (recommended)"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://github.com/pankod/refine/tree/master/packages/codemod"},(0,o.kt)("inlineCode",{parentName:"a"},"@pankod/refine-codemod"))," package handles the breaking changes for your project automatically, without any manual steps. It migrates your project from ",(0,o.kt)("inlineCode",{parentName:"p"},"1.x.x")," to ",(0,o.kt)("inlineCode",{parentName:"p"},"2.x.x"),"."),(0,o.kt)("p",null,"Just ",(0,o.kt)("inlineCode",{parentName:"p"},"cd")," into root folder of your project (where ",(0,o.kt)("inlineCode",{parentName:"p"},"package.json")," is contained) and run this command:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sh"},"npx @pankod/refine-codemod refine1-to-refine2\n")),(0,o.kt)("p",null,"And it's done. Now your project uses ",(0,o.kt)("inlineCode",{parentName:"p"},"refine@2.x.x"),"."),(0,o.kt)("h2",{id:"migrating-your-project-manually"},"Migrating your project manually"),(0,o.kt)("h3",{id:"updating-the-packages"},"Updating the packages"),(0,o.kt)("p",null,"Packages used by your app must be updated to ",(0,o.kt)("inlineCode",{parentName:"p"},"^2.xx.xx")),(0,o.kt)(f,{mdxType:"Packages"}),(0,o.kt)("h3",{id:"resource-to-resources"},(0,o.kt)("inlineCode",{parentName:"h3"},"<Resource/>")," to ",(0,o.kt)("inlineCode",{parentName:"h3"},"resources")),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"<Resource/>")," is deprecated. Resources must be passed to ",(0,o.kt)("a",{parentName:"p",href:"/docs/api-references/components/refine-config#resources"},(0,o.kt)("inlineCode",{parentName:"a"},"resources"))," prop instead."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx",metastring:'title="App.tsx"',title:'"App.tsx"'},'import { Refine } from "@pankod/refine";\nimport dataProvider from "@pankod/refine-json-server";\nimport "@pankod/refine/dist/styles.min.css";\n\nimport { PostList, PostCreate, PostEdit, PostShow } from "pages/posts";\n\nconst API_URL = "https://api.fake-rest.refine.dev";\n\nconst App: React.FC = () => {\n    return (\n        <Refine\n            dataProvider={dataProvider(API_URL)}\n// highlight-start\n            resources={[\n                {\n                    name: "posts",\n                    list: PostList,\n                    create: PostCreate,\n                    edit: PostEdit,\n                    show: PostShow,\n                },\n            ]}\n// highlight-end\n        />\n    );\n};\n\nexport default App;\n')),(0,o.kt)("h3",{id:"routerprovider-1"},(0,o.kt)("inlineCode",{parentName:"h3"},"routerProvider")),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"/docs/api-references/components/refine-config"},(0,o.kt)("inlineCode",{parentName:"a"},"<Refine/>"))," now requires a ",(0,o.kt)("a",{parentName:"p",href:"/docs/api-references/providers/router-provider"},(0,o.kt)("inlineCode",{parentName:"a"},"routerProvider")),". You can use packages ",(0,o.kt)("strong",{parentName:"p"},"@pankod/refine-react-router")," or ",(0,o.kt)("strong",{parentName:"p"},"@pankod/refine-nextjs-router")," provided by ",(0,o.kt)("strong",{parentName:"p"},"refine"),"."),(0,o.kt)(i.Z,{defaultValue:"react",values:[{label:"react-router",value:"react"},{label:"nextjs-router",value:"nextjs"}],mdxType:"Tabs"},(0,o.kt)(s.Z,{value:"react",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx",metastring:'title="App.tsx"',title:'"App.tsx"'},'import { Refine } from "@pankod/refine";\nimport routerProvider from "@pankod/refine-react-router";\n\nconst App: React.FC = () => {\n    return <Refine routerProvider={routerProvider} />;\n};\n'))),(0,o.kt)(s.Z,{value:"nextjs",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx",metastring:'title="App.tsx"',title:'"App.tsx"'},'import { Refine } from "@pankod/refine";\nimport routerProvider from "@pankod/refine-nextjs-router";\n\nconst App: React.FC = () => {\n    return <Refine routerProvider={routerProvider} />;\n};\n')))),(0,o.kt)("h3",{id:"custom-pages-1"},"Custom Pages"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"routes")," prop of ",(0,o.kt)("inlineCode",{parentName:"p"},"<Refine/>")," is deprecated. Custom routes must be handled by the router provider you choose. ",(0,o.kt)("a",{parentName:"p",href:"/docs/guides-and-concepts/custom-pages"},"Refer to Custom Pages documentation for a detailed guide")))}k.isMDXComponent=!0}}]);