"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[12230],{12230:e=>{e.exports=JSON.parse('{"filePath":"/home/runner/work/refine/refine/packages/antd/src/index.tsx","description":"`useSelect` hook allows you to manage an Ant Design {@link https://ant.design/components/select/ Select} component when records in a resource needs to be used as select options.","displayName":"useSelect","props":{"resource":{"defaultValue":null,"description":"","name":"resource","required":true,"type":{"name":"string"},"tags":{}},"optionLabel":{"defaultValue":null,"description":"","name":"optionLabel","required":false,"type":{"name":"string"},"tags":{}},"optionValue":{"defaultValue":null,"description":"","name":"optionValue","required":false,"type":{"name":"string"},"tags":{}},"sort":{"defaultValue":null,"description":"","name":"sort","required":false,"type":{"name":"CrudSorting"},"tags":{}},"filters":{"defaultValue":null,"description":"","name":"filters","required":false,"type":{"name":"CrudFilters"},"tags":{}},"defaultValue":{"defaultValue":null,"description":"","name":"defaultValue","required":false,"type":{"name":"BaseKey | BaseKey[]"},"tags":{}},"debounce":{"defaultValue":null,"description":"","name":"debounce","required":false,"type":{"name":"number"},"tags":{}},"queryOptions":{"defaultValue":null,"description":"","name":"queryOptions","required":false,"type":{"name":"UseQueryOptions<GetListResponse<TData>, TError, GetListResponse<TData>, QueryKey>"},"tags":{}},"fetchSize":{"defaultValue":null,"description":"","name":"fetchSize","required":false,"type":{"name":"number"},"tags":{}},"defaultValueQueryOptions":{"defaultValue":null,"description":"","name":"defaultValueQueryOptions","required":false,"type":{"name":"UseQueryOptions<GetManyResponse<TData>, TError, GetManyResponse<TData>, QueryKey>"},"tags":{}},"onSearch":{"defaultValue":null,"description":"","name":"onSearch","required":false,"type":{"name":"((value: string) => CrudFilters)"},"tags":{}},"metaData":{"defaultValue":null,"description":"","name":"metaData","required":false,"type":{"name":"MetaDataQuery"},"tags":{}},"dataProviderName":{"defaultValue":null,"description":"","name":"dataProviderName","required":false,"type":{"name":"string"},"tags":{}},"successNotification":{"defaultValue":null,"description":"Success notification configuration to be displayed when the mutation is successful.","name":"successNotification","required":false,"type":{"name":"false | OpenNotificationParams | (data, values, resource) => OpenNotificationParams"},"tags":{}},"errorNotification":{"defaultValue":null,"description":"Error notification configuration to be displayed when the mutation fails.","name":"errorNotification","required":false,"type":{"name":"false | OpenNotificationParams | (error, values, resource) => OpenNotificationParams"},"tags":{}},"liveMode":{"defaultValue":null,"description":"Live interaction mode to be used when `liveProvider` is set in `Refine` component","name":"liveMode","required":false,"type":{"name":"\\"auto\\" | \\"manual\\" | \\"off\\"","raw":"\\"auto\\" | \\"manual\\" | \\"off\\"","value":[{"value":"\\"auto\\""},{"value":"\\"manual\\""},{"value":"\\"off\\""}]},"tags":{}},"onLiveEvent":{"defaultValue":null,"description":"Callback function to be called when a related subscription is triggered","name":"onLiveEvent","required":false,"type":{"name":"((event: LiveEvent) => void)"},"tags":{}},"liveParams":{"defaultValue":null,"description":"Additional props to be passed to the live provider subscription","name":"liveParams","required":false,"type":{"name":"{ [key]: any; ids?: BaseKey[]; }"},"tags":{}}},"generatedAt":1664865151607}')}}]);