"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[97650],{88101:e=>{e.exports=JSON.parse('{"filePath":"/home/runner/work/refine/refine/packages/antd/src/index.tsx","description":"By using useTable, you are able to get properties that are compatible with\\nAnt Design {@link https://ant.design/components/table/ `<Table>`} component.\\nAll features such as sorting, filtering and pagination comes as out of box.","displayName":"useTable","props":{"resource":{"defaultValue":null,"description":"","name":"resource","required":false,"type":{"name":"string"},"tags":{}},"initialCurrent":{"defaultValue":null,"description":"","name":"initialCurrent","required":false,"type":{"name":"number"},"tags":{}},"initialPageSize":{"defaultValue":null,"description":"","name":"initialPageSize","required":false,"type":{"name":"number"},"tags":{}},"hasPagination":{"defaultValue":{"value":"true"},"description":"","name":"hasPagination","required":false,"type":{"name":"boolean"},"tags":{}},"initialSorter":{"defaultValue":null,"description":"","name":"initialSorter","required":false,"type":{"name":"CrudSorting"},"tags":{}},"permanentSorter":{"defaultValue":null,"description":"","name":"permanentSorter","required":false,"type":{"name":"CrudSorting"},"tags":{}},"defaultSetFilterBehavior":{"defaultValue":null,"description":"","name":"defaultSetFilterBehavior","required":false,"type":{"name":"\\"merge\\" | \\"replace\\"","raw":"SetFilterBehavior","value":[{"value":"\\"merge\\""},{"value":"\\"replace\\""}]},"tags":{}},"initialFilter":{"defaultValue":null,"description":"","name":"initialFilter","required":false,"type":{"name":"CrudFilters"},"tags":{}},"permanentFilter":{"defaultValue":null,"description":"","name":"permanentFilter","required":false,"type":{"name":"CrudFilters"},"tags":{}},"syncWithLocation":{"defaultValue":null,"description":"","name":"syncWithLocation","required":false,"type":{"name":"boolean"},"tags":{}},"queryOptions":{"defaultValue":null,"description":"","name":"queryOptions","required":false,"type":{"name":"UseQueryOptions<GetListResponse<TData>, TError, GetListResponse<TData>, QueryKey>"},"tags":{}},"metaData":{"defaultValue":null,"description":"","name":"metaData","required":false,"type":{"name":"MetaDataQuery"},"tags":{}},"dataProviderName":{"defaultValue":null,"description":"","name":"dataProviderName","required":false,"type":{"name":"string"},"tags":{}},"successNotification":{"defaultValue":null,"description":"Success notification configuration to be displayed when the mutation is successful.","name":"successNotification","required":false,"type":{"name":"false | OpenNotificationParams | (data, values, resource) => OpenNotificationParams"},"tags":{}},"errorNotification":{"defaultValue":null,"description":"Error notification configuration to be displayed when the mutation fails.","name":"errorNotification","required":false,"type":{"name":"false | OpenNotificationParams | (error, values, resource) => OpenNotificationParams"},"tags":{}},"liveMode":{"defaultValue":null,"description":"Live interaction mode to be used when `liveProvider` is set in `Refine` component","name":"liveMode","required":false,"type":{"name":"\\"auto\\" | \\"manual\\" | \\"off\\"","raw":"\\"auto\\" | \\"manual\\" | \\"off\\"","value":[{"value":"\\"auto\\""},{"value":"\\"manual\\""},{"value":"\\"off\\""}]},"tags":{}},"onLiveEvent":{"defaultValue":null,"description":"Callback function to be called when a related subscription is triggered","name":"onLiveEvent","required":false,"type":{"name":"((event: LiveEvent) => void)"},"tags":{}},"liveParams":{"defaultValue":null,"description":"Additional props to be passed to the live provider subscription","name":"liveParams","required":false,"type":{"name":"{ [key]: any; ids?: BaseKey[]; }"},"tags":{}},"onSearch":{"defaultValue":null,"description":"","name":"onSearch","required":false,"type":{"name":"((data: TSearchVariables) => CrudFilters | Promise<CrudFilters>)"},"tags":{}}},"generatedAt":1664892143909}')}}]);