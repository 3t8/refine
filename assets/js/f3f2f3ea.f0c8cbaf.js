"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[9605],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return m}});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),l=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=l(e.components);return r.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),d=l(n),m=o,f=d["".concat(s,".").concat(m)]||d[m]||p[m]||a;return n?r.createElement(f,i(i({ref:t},u),{},{components:n})):r.createElement(f,i({ref:t},u))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=d;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:o,i[1]=c;for(var l=2;l<a;l++)i[l]=n[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},92019:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return c},contentTitle:function(){return s},metadata:function(){return l},toc:function(){return u},default:function(){return d}});var r=n(87462),o=n(63366),a=(n(67294),n(3905)),i=["components"],c={},s=void 0,l={unversionedId:"api-references/hooks/translate/useGetLocale",id:"api-references/hooks/translate/useGetLocale",isDocsHomePage:!1,title:"useGetLocale",description:"If you need to know the current locale, refine provides the useGetLocale hook. It returns the getLocale method from i18nProvider under the hood.",source:"@site/docs/api-references/hooks/translate/useGetLocale.md",sourceDirName:"api-references/hooks/translate",slug:"/api-references/hooks/translate/useGetLocale",permalink:"/docs/next/api-references/hooks/translate/useGetLocale",editUrl:"https://github.com/pankod/refine/tree/master/documentation/docs/api-references/hooks/translate/useGetLocale.md",tags:[],version:"current",lastUpdatedBy:"\xd6mer Faruk APLAK",lastUpdatedAt:1636468358,formattedLastUpdatedAt:"11/9/2021",frontMatter:{},sidebar:"someSidebar",previous:{title:"useSetLocale",permalink:"/docs/next/api-references/hooks/translate/useSetLocale"},next:{title:"useShow",permalink:"/docs/next/api-references/hooks/show/useShow"}},u=[{value:"Usage",id:"usage",children:[],level:2}],p={toc:u};function d(e){var t=e.components,n=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"If you need to know the current locale, refine provides the ",(0,a.kt)("inlineCode",{parentName:"p"},"useGetLocale")," hook. It returns the ",(0,a.kt)("inlineCode",{parentName:"p"},"getLocale")," method from ",(0,a.kt)("inlineCode",{parentName:"p"},"i18nProvider")," under the hood."),(0,a.kt)("h2",{id:"usage"},"Usage"),(0,a.kt)("p",null,"You can get the ",(0,a.kt)("inlineCode",{parentName:"p"},"locale")," value from the ",(0,a.kt)("inlineCode",{parentName:"p"},"i18nProvider")," that you provided.",(0,a.kt)("br",{parentName:"p"}),"\n","For example, ",(0,a.kt)("inlineCode",{parentName:"p"},"<LanguageSwitcher>")," component needs to know the current locale in order to disable the button for the current language."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},'import { Button, useTranslate, useGetLocale, useSetLocale } from "@pankod/refine";\n\nexport const LanguageSwitcher = () => {\n    const changeLanguage = useSetLocale();\n\n    const locale = useGetLocale();\n    const currentLocale = locale();\n\n    return (\n        <div>\n            <span>Languages</span>\n            <Button\n                disabled={currentLocale === "en"}\n                onClick={() => changeLanguage("en")}\n            >\n                English\n            </Button>\n            <Button\n                disabled={currentLocale === "es"}\n                onClick={() => changeLanguage("es")}\n            >\n                Spanish\n            </Button>\n        </div>\n    );\n};\n')),(0,a.kt)("div",{className:"admonition admonition-caution alert alert--warning"},(0,a.kt)("div",{parentName:"div",className:"admonition-heading"},(0,a.kt)("h5",{parentName:"div"},(0,a.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,a.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},(0,a.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"caution")),(0,a.kt)("div",{parentName:"div",className:"admonition-content"},(0,a.kt)("p",{parentName:"div"},"This hook can only be used if ",(0,a.kt)("inlineCode",{parentName:"p"},"i18nProvider")," is provided."))))}d.isMDXComponent=!0}}]);