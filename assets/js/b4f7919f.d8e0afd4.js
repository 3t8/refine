"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[43721],{3905:(t,e,n)=>{n.d(e,{Zo:()=>s,kt:()=>c});var a=n(67294);function r(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function o(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,a)}return n}function i(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?o(Object(n),!0).forEach((function(e){r(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function l(t,e){if(null==t)return{};var n,a,r=function(t,e){if(null==t)return{};var n,a,r={},o=Object.keys(t);for(a=0;a<o.length;a++)n=o[a],e.indexOf(n)>=0||(r[n]=t[n]);return r}(t,e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);for(a=0;a<o.length;a++)n=o[a],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(r[n]=t[n])}return r}var p=a.createContext({}),m=function(t){var e=a.useContext(p),n=e;return t&&(n="function"==typeof t?t(e):i(i({},e),t)),n},s=function(t){var e=m(t.components);return a.createElement(p.Provider,{value:e},t.children)},u={inlineCode:"code",wrapper:function(t){var e=t.children;return a.createElement(a.Fragment,{},e)}},d=a.forwardRef((function(t,e){var n=t.components,r=t.mdxType,o=t.originalType,p=t.parentName,s=l(t,["components","mdxType","originalType","parentName"]),d=m(n),c=r,k=d["".concat(p,".").concat(c)]||d[c]||u[c]||o;return n?a.createElement(k,i(i({ref:e},s),{},{components:n})):a.createElement(k,i({ref:e},s))}));function c(t,e){var n=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var o=n.length,i=new Array(o);i[0]=d;var l={};for(var p in e)hasOwnProperty.call(e,p)&&(l[p]=e[p]);l.originalType=t,l.mdxType="string"==typeof t?t:r,i[1]=l;for(var m=2;m<o;m++)i[m]=n[m];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},6532:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>m,contentTitle:()=>l,default:()=>d,frontMatter:()=>i,metadata:()=>p,toc:()=>s});var a=n(87462),r=(n(67294),n(3905));const o=n.p+"assets/images/import-mui-a4027ea10f30b345921ea6b52ff394b8.png",i={id:"import-button",title:"Import"},l=void 0,p={unversionedId:"ui-frameworks/mui/components/buttons/import-button",id:"ui-frameworks/mui/components/buttons/import-button",title:"Import",description:"` is compatible with the useImport hook and is meant to be used as it's upload button. It uses Material UI  component and native html  element. It wraps a  with a  component and ` element and accepts it's own properties for separately.",source:"@site/docs/ui-frameworks/mui/components/buttons/import.md",sourceDirName:"ui-frameworks/mui/components/buttons",slug:"/ui-frameworks/mui/components/buttons/import-button",permalink:"/docs/ui-frameworks/mui/components/buttons/import-button",draft:!1,editUrl:"https://github.com/pankod/refine/tree/master/documentation/docs/ui-frameworks/mui/components/buttons/import.md",tags:[],version:"current",lastUpdatedBy:"\xd6mer Faruk APLAK",lastUpdatedAt:1656407404,formattedLastUpdatedAt:"Jun 28, 2022",frontMatter:{id:"import-button",title:"Import"},sidebar:"someSidebar",previous:{title:"Export",permalink:"/docs/ui-frameworks/mui/components/buttons/export-button"},next:{title:"List",permalink:"/docs/ui-frameworks/mui/components/buttons/list-button"}},m={},s=[{value:"Usage",id:"usage",level:2},{value:"Properties",id:"properties",level:2},{value:"<code>hideText</code>",id:"hidetext",level:3},{value:"API Reference",id:"api-reference",level:2},{value:"Properties",id:"properties-1",level:3}],u={toc:s};function d(t){let{components:e,...n}=t;return(0,r.kt)("wrapper",(0,a.Z)({},u,n,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"<ImportButton>")," is compatible with the ",(0,r.kt)("inlineCode",{parentName:"p"},"useImport")," hook and is meant to be used as it's upload button. It uses Material UI ",(0,r.kt)("a",{parentName:"p",href:"https://mui.com/material-ui/api/loading-button/#main-content"},(0,r.kt)("inlineCode",{parentName:"a"},"<LoadingButton>"))," component and native html ",(0,r.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input"},(0,r.kt)("inlineCode",{parentName:"a"},"<input>"))," element. It wraps a ",(0,r.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/label"},(0,r.kt)("inlineCode",{parentName:"a"},"<label>"))," with a ",(0,r.kt)("a",{parentName:"p",href:"https://mui.com/material-ui/api/loading-button/#main-content"},(0,r.kt)("inlineCode",{parentName:"a"},"<LoadingButton>"))," component and ",(0,r.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input"},(0,r.kt)("inlineCode",{parentName:"a"},"<input>"))," element and accepts it's own properties for separately."),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/docs/core/hooks/import-export/useImport"},"Refer to the for more detailed information about ",(0,r.kt)("inlineCode",{parentName:"a"},"useImport"),". ","\u2192")),(0,r.kt)("h2",{id:"usage"},"Usage"),(0,r.kt)("p",null,"Use it like any other Material UI ",(0,r.kt)("a",{parentName:"p",href:"https://mui.com/material-ui/api/loading-button/#main-content"},(0,r.kt)("inlineCode",{parentName:"a"},"<LoadingButton>")),". You can use it with ",(0,r.kt)("a",{parentName:"p",href:"/docs/core/hooks/import-export/useImport"},"useImport"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx",metastring:'title="/src/pages/posts/list.tsx"',title:'"/src/pages/posts/list.tsx"'},'// highlight-next-line\nimport { useTable, useImport } from "@pankod/refine-core";\nimport {\n    // highlight-next-line\n    ImportButton,\n    List,\n    Table,\n    TableBody,\n    TableCell,\n    TableHead,\n    TableRow,\n} from "@pankod/refine-mui";\n\nexport const PostList: React.FC = () => {\n    const { tableQueryResult } = useTable<IPost>();\n    // highlight-next-line\n    const { inputProps, isLoading } = useImport<IPost>();\n\n    return (\n        <List\n            cardHeaderProps={{\n                action: (\n                    // highlight-next-line\n                    <ImportButton inputProps={inputProps} loading={isLoading} />\n                ),\n            }}\n        >\n            <Table>\n                <TableHead>\n                    <TableRow>\n                        <TableCell>ID</TableCell>\n                        <TableCell>Title</TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {tableQueryResult.data?.data.map((row) => (\n                        <TableRow key={row.title}>\n                            <TableCell>{row.id}</TableCell>\n                            <TableCell component="th" scope="row">\n                                {row.title}\n                            </TableCell>\n                        </TableRow>\n                    ))}\n                </TableBody>\n            </Table>\n        </List>\n    );\n};\n\ninterface IPost {\n    id: number;\n    title: string;\n}\n')),(0,r.kt)("p",null,"It looks like this:"),(0,r.kt)("div",{class:"img-container"},(0,r.kt)("div",{class:"window"},(0,r.kt)("div",{class:"control red"}),(0,r.kt)("div",{class:"control orange"}),(0,r.kt)("div",{class:"control green"})),(0,r.kt)("img",{src:o,alt:"Default export button"})),(0,r.kt)("h2",{id:"properties"},"Properties"),(0,r.kt)("h3",{id:"hidetext"},(0,r.kt)("inlineCode",{parentName:"h3"},"hideText")),(0,r.kt)("p",null,"It is used to show and not show the text of the button. When ",(0,r.kt)("inlineCode",{parentName:"p"},"true"),", only the button icon is visible."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},'import { ImportButton } from "@pankod/refine-mui";\n\nexport const MyImportComponent = () => {\n    return <ImportButton hideText />;\n};\n')),(0,r.kt)("h2",{id:"api-reference"},"API Reference"),(0,r.kt)("h3",{id:"properties-1"},"Properties"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Property"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Default"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"props"),(0,r.kt)("td",{parentName:"tr",align:null},"Material UI loading button properties"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://mui.com/material-ui/api/loading-button/#main-content"},(0,r.kt)("inlineCode",{parentName:"a"},"LoadingButtonProps"))),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"inputProps"),(0,r.kt)("td",{parentName:"tr",align:null},"Allows to set input props"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/docs/core/interfaceReferences#useimportinputpropstype"},(0,r.kt)("inlineCode",{parentName:"a"},"UseImportInputPropsType"))),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"hideText"),(0,r.kt)("td",{parentName:"tr",align:null},"Allows to hide button text"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"boolean")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"false"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"loading"),(0,r.kt)("td",{parentName:"tr",align:null},"Sets the loading status of the button"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"boolean")),(0,r.kt)("td",{parentName:"tr",align:null},"When the request is not completed, loading is ",(0,r.kt)("inlineCode",{parentName:"td"},"true"),", when it completes it's ",(0,r.kt)("inlineCode",{parentName:"td"},"false"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"children"),(0,r.kt)("td",{parentName:"tr",align:null},"Sets the button text"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"ReactNode")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},'"Import"'))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"startIcon"),(0,r.kt)("td",{parentName:"tr",align:null},"Sets the icon component of button"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"ReactNode")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://mui.com/material-ui/material-icons/?theme=Outlined&query=import+export&selected=ImportExportOutlined"},(0,r.kt)("inlineCode",{parentName:"a"},"<ImportExportOutlinedIcon />")))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"svgIconProps"),(0,r.kt)("td",{parentName:"tr",align:null},"Allows to set icon props"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://mui.com/material-ui/api/svg-icon/#props"},(0,r.kt)("inlineCode",{parentName:"a"},"SvgIconProps"))),(0,r.kt)("td",{parentName:"tr",align:null})))))}d.isMDXComponent=!0}}]);