"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[72632],{3905:function(e,t,a){a.d(t,{Zo:function(){return s},kt:function(){return c}});var n=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var d=n.createContext({}),p=function(e){var t=n.useContext(d),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},s=function(e){var t=p(e.components);return n.createElement(d.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,i=e.originalType,d=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),u=p(a),c=r,k=u["".concat(d,".").concat(c)]||u[c]||m[c]||i;return a?n.createElement(k,o(o({ref:t},s),{},{components:a})):n.createElement(k,o({ref:t},s))}));function c(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=a.length,o=new Array(i);o[0]=u;var l={};for(var d in t)hasOwnProperty.call(t,d)&&(l[d]=t[d]);l.originalType=e,l.mdxType="string"==typeof e?e:r,o[1]=l;for(var p=2;p<i;p++)o[p]=a[p];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}u.displayName="MDXCreateElement"},3133:function(e,t,a){a.r(t),a.d(t,{frontMatter:function(){return l},contentTitle:function(){return d},metadata:function(){return p},toc:function(){return s},default:function(){return u}});var n=a(87462),r=a(63366),i=(a(67294),a(3905)),o=["components"],l={id:"useDataGrid",title:"useDataGrid"},d=void 0,p={unversionedId:"ui-frameworks/mui/hooks/useDataGrid",id:"ui-frameworks/mui/hooks/useDataGrid",isDocsHomePage:!1,title:"useDataGrid",description:"By using useDataGrid, you are able to get properties that are compatible with MUI X ` component. All features such as sorting, filtering and pagination comes as out of box. For all the other features, you can refer to the MUI X ` documentation.",source:"@site/docs/ui-frameworks/mui/hooks/useDataGrid.md",sourceDirName:"ui-frameworks/mui/hooks",slug:"/ui-frameworks/mui/hooks/useDataGrid",permalink:"/docs/ui-frameworks/mui/hooks/useDataGrid",editUrl:"https://github.com/pankod/refine/tree/master/documentation/docs/ui-frameworks/mui/hooks/useDataGrid.md",tags:[],version:"current",lastUpdatedBy:"Salih \xd6zdemir",lastUpdatedAt:1656940755,formattedLastUpdatedAt:"7/4/2022",frontMatter:{id:"useDataGrid",title:"useDataGrid"},sidebar:"someSidebar",previous:{title:"useAutocomplete",permalink:"/docs/ui-frameworks/mui/hooks/useAutocomplete"},next:{title:"Create",permalink:"/docs/ui-frameworks/mui/components/basic-views/create"}},s=[{value:"Basic usage",id:"basic-usage",children:[],level:2},{value:"Pagination",id:"pagination",children:[],level:2},{value:"Sorting",id:"sorting",children:[],level:2},{value:"Filtering",id:"filtering",children:[],level:2},{value:"API",id:"api",children:[{value:"Properties",id:"properties",children:[],level:3},{value:"Type Parameters",id:"type-parameters",children:[],level:3},{value:"Return values",id:"return-values",children:[],level:3}],level:2},{value:"Live StackBlitz Example",id:"live-stackblitz-example",children:[],level:2}],m={toc:s};function u(e){var t=e.components,a=(0,r.Z)(e,o);return(0,i.kt)("wrapper",(0,n.Z)({},m,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"By using ",(0,i.kt)("inlineCode",{parentName:"p"},"useDataGrid"),", you are able to get properties that are compatible with MUI X ",(0,i.kt)("inlineCode",{parentName:"p"},"<DataGrid>")," component. All features such as sorting, filtering and pagination comes as out of box. For all the other features, you can refer to the MUI X ",(0,i.kt)("a",{parentName:"p",href:"https://mui.com/x/react-data-grid/"},(0,i.kt)("inlineCode",{parentName:"a"},"<DataGrid>"))," documentation."),(0,i.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"The ",(0,i.kt)("inlineCode",{parentName:"p"},"useDataGrid")," hook works in compatible with both the ",(0,i.kt)("inlineCode",{parentName:"p"},"<DataGrid>")," and the ",(0,i.kt)("inlineCode",{parentName:"p"},"<DataGridPro>")," component."))),(0,i.kt)("p",null,"This hook is extended from ",(0,i.kt)("a",{parentName:"p",href:"/docs/core/hooks/useTable"},(0,i.kt)("inlineCode",{parentName:"a"},"useTable"))," from the ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/pankod/refine/tree/master/packages/core"},(0,i.kt)("inlineCode",{parentName:"a"},"@pankod/refine-core"))," package."),(0,i.kt)("h2",{id:"basic-usage"},"Basic usage"),(0,i.kt)("p",null,"Let's assume that the data we are going to show on the table came like this from the endpoint:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="https://api.fake-rest.refine.dev/posts"',title:'"https://api.fake-rest.refine.dev/posts"'},'[\n    {\n        "id": 1,\n        "title": "A aspernatur rerum molestiae.",\n        "content": "Natus molestias incidunt voluptatibus. Libero delectus facilis...",\n        "status": "published"\n    },\n    {\n        "id": 2,\n        "title": "A molestiae vel voluptatem enim.",\n        "content": "Voluptas consequatur quia beatae. Ipsa est qui culpa deleniti...",\n        "status": "draft"\n    }\n]\n')),(0,i.kt)("p",null,"To see basic usage, let's create a table with the ",(0,i.kt)("inlineCode",{parentName:"p"},"id"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"title")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"content")," columns."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-tsx",metastring:'title="/src/pages/posts/list.tsx"',title:'"/src/pages/posts/list.tsx"'},'import React from "react";\nimport { useDataGrid, DataGrid, GridColumns, List } from "@pankod/refine-mui";\n\nconst columns: GridColumns = [\n    {\n        field: "id",\n        headerName: "ID",\n        type: "number",\n    },\n    { field: "title", headerName: "Title" },\n    { field: "status", headerName: "Status" },\n];\n\nexport const PostsList: React.FC = () => {\n    const { dataGridProps } = useDataGrid<IPost>();\n\n    return (\n        <List>\n            <DataGrid {...dataGridProps} columns={columns} autoHeight />\n        </List>\n    );\n};\n\ninterface IPost {\n    id: number;\n    title: string;\n    content: string;\n    status: "published" | "draft" | "rejected";\n}\n')),(0,i.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"Within the ",(0,i.kt)("inlineCode",{parentName:"p"},"<Refine>")," component, a resource page knows which resource name it has by reading from the URL."),(0,i.kt)("p",{parentName:"div"},"If you want to use a different resource name, you can pass ",(0,i.kt)("inlineCode",{parentName:"p"},"resource")," as a prop like this:"),(0,i.kt)("pre",{parentName:"div"},(0,i.kt)("code",{parentName:"pre",className:"language-tsx"},'const { dataGridProps } = useDataGrid({\n    //highlight-next-line\n    resource: "categories",\n});\n')),(0,i.kt)("blockquote",{parentName:"div"},(0,i.kt)("p",{parentName:"blockquote"},"If the resource option is given, ",(0,i.kt)("inlineCode",{parentName:"p"},"syncWithLocation")," will not work.")))),(0,i.kt)("h2",{id:"pagination"},"Pagination"),(0,i.kt)("p",null,"The hook handles pagination by setting the ",(0,i.kt)("inlineCode",{parentName:"p"},"paginationMode"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"page"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"onPageChange"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"pageSize")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"onPageSizeChange")," props that are compatible with ",(0,i.kt)("inlineCode",{parentName:"p"},"<DataGrid>"),"."),(0,i.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"To disable pagination, you can set ",(0,i.kt)("inlineCode",{parentName:"p"},"hasPagination")," property to ",(0,i.kt)("inlineCode",{parentName:"p"},"false")," which is ",(0,i.kt)("inlineCode",{parentName:"p"},"true")," by default. If pagination is disabled, ",(0,i.kt)("inlineCode",{parentName:"p"},"hideFooterPagination")," property will be send as ",(0,i.kt)("inlineCode",{parentName:"p"},"true")," with ",(0,i.kt)("inlineCode",{parentName:"p"},"paginationMode"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"page,")," ",(0,i.kt)("inlineCode",{parentName:"p"},"onPageChange"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"pageSize")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"onPageSizeChange")," set to undefined."))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-tsx"},"export const PostsList: React.FC = () => {\n    const { dataGridProps } = useDataGrid();\n\n    const {\n        //highlight-start\n        paginationMode,\n        page,\n        onPageChange,\n        pageSize,\n        onPageSizeChange,\n        //highlight-end\n        ...restDataGridProps\n    } = dataGridProps;\n\n    return (\n        <List>\n            <DataGrid\n                columns={columns}\n                {...restDataGridProps}\n                //highlight-start\n                paginationMode={paginationMode}\n                page={page}\n                onPageChange={onPageChange}\n                pageSize={pageSize}\n                onPageSizeChange={onPageSizeChange}\n                //highlight-end\n                autoHeight\n            />\n        </List>\n    );\n};\n")),(0,i.kt)("p",null,"Above, you can see the pagination properties from ",(0,i.kt)("inlineCode",{parentName:"p"},"dataGridProps"),"."),(0,i.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"To see how the pagination works, you can look at the ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/pankod/refine/blob/master/packages/master/src/hooks/useDataGrid/index.ts"},"source code")," of the ",(0,i.kt)("inlineCode",{parentName:"p"},"useDataGrid")," hook."))),(0,i.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"You can set initial values for the pagination by passing ",(0,i.kt)("inlineCode",{parentName:"p"},"initialCurrent")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"initialPageSize")," props."),(0,i.kt)("pre",{parentName:"div"},(0,i.kt)("code",{parentName:"pre",className:"language-tsx"},"const { dataGridProps } = useDataGrid({\n    initialCurrent: 2,\n    initialPageSize: 10,\n});\n")))),(0,i.kt)("h2",{id:"sorting"},"Sorting"),(0,i.kt)("p",null,"The hook handles sorting by setting the ",(0,i.kt)("inlineCode",{parentName:"p"},"sortingMode"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"sortModel")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"onSortModelChange"),"props that are compatible with ",(0,i.kt)("inlineCode",{parentName:"p"},"<DataGrid>"),"."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-tsx"},"export const PostsList: React.FC = () => {\n    const { dataGridProps } = useDataGrid();\n\n    //highlight-start\n    const { sortingMode, sortModel, onSortModelChange, ...restDataGridProps } =\n        dataGridProps;\n    //highlight-end\n\n    return (\n        <List>\n            <DataGrid\n                columns={columns}\n                {...restDataGridProps}\n                //highlight-start\n                sortingMode={sortingMode}\n                sortModel={sortModel}\n                onSortModelChange={onSortModelChange}\n                //highlight-end\n                autoHeight\n            />\n        </List>\n    );\n};\n")),(0,i.kt)("p",null,"Above, you can see the sorting properties from ",(0,i.kt)("inlineCode",{parentName:"p"},"dataGridProps"),"."),(0,i.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"To see how the sorting works, you can look at the ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/pankod/refine/blob/master/packages/master/src/hooks/useDataGrid/index.ts"},"source code")," of the ",(0,i.kt)("inlineCode",{parentName:"p"},"useDataGrid")," hook."))),(0,i.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"You can pass ",(0,i.kt)("inlineCode",{parentName:"p"},"initialSorter")," prop to set initial sorting and ",(0,i.kt)("inlineCode",{parentName:"p"},"permanentSorter")," prop to set permanent sorting."),(0,i.kt)("pre",{parentName:"div"},(0,i.kt)("code",{parentName:"pre",className:"language-tsx"},'const { dataGridProps } = useDataGrid({\n    initialSorter: [{ field: "id", order: "desc" }],\n    permanentSorter: [{ field: "title", order: "asc" }],\n});\n')))),(0,i.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"If you want to sort externally from the ",(0,i.kt)("inlineCode",{parentName:"p"},"<DataGrid>")," component. You can use ",(0,i.kt)("inlineCode",{parentName:"p"},"setSorter")," like this:"),(0,i.kt)("pre",{parentName:"div"},(0,i.kt)("code",{parentName:"pre",className:"language-tsx"},'import {\n    useDataGrid,\n    DataGrid,\n    GridColumns,\n    List,\n    Button,\n    ButtonGroup,\n} from "@pankod/refine-mui";\n\nconst columns: GridColumns = [\n    {\n        field: "id",\n        headerName: "ID",\n        type: "number",\n    },\n    { field: "title", headerName: "Title" },\n    { field: "status", headerName: "Status" },\n];\n\nexport const PostsList: React.FC = () => {\n    const { dataGridProps, setSorter } = useDataGrid();\n\n    const handleSorting = (order: "asc" | "desc") => {\n        setSorter([\n            {\n                field: "title",\n                order,\n            },\n        ]);\n    };\n\n    return (\n        <List>\n            <ButtonGroup variant="outlined">\n                <Button onClick={() => handleSorting("asc")}>Asc</Button>\n                <Button onClick={() => handleSorting("desc")}>Desc</Button>\n            </ButtonGroup>\n            <DataGrid {...dataGridProps} columns={columns} autoHeight />\n        </List>\n    );\n};\n')),(0,i.kt)("p",{parentName:"div"},"Mui X community version only sorts the rows according to one criterion at a time. To use multi-sorting, you need to upgrade to the ",(0,i.kt)("a",{parentName:"p",href:"https://mui.com/pricing/"},"Pro plan"),"."),(0,i.kt)("p",{parentName:"div"},"However, multiple sorting can be done as server-side without specifying the ",(0,i.kt)("inlineCode",{parentName:"p"},"sortModel"),"."),(0,i.kt)("pre",{parentName:"div"},(0,i.kt)("code",{parentName:"pre",className:"language-tsx"},"return <DataGrid {...dataGridProps} sortModel={undefined} autoHeight />;\n")),(0,i.kt)("p",{parentName:"div"},"When ",(0,i.kt)("inlineCode",{parentName:"p"},"sortModel")," is not passed, it supports more than one criteria at a time, but cannot show which fields are sorted in ",(0,i.kt)("inlineCode",{parentName:"p"},"<DataGrid>")," headers."))),(0,i.kt)("h2",{id:"filtering"},"Filtering"),(0,i.kt)("p",null,"The hook handles filtering by setting the ",(0,i.kt)("inlineCode",{parentName:"p"},"filterMode"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"filterModel")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"onFilterModelChange"),"props that are compatible with ",(0,i.kt)("inlineCode",{parentName:"p"},"<DataGrid>"),"."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-tsx"},"export const PostsList: React.FC = () => {\n    const { dataGridProps } = useDataGrid();\n\n    //highlight-start\n    const {\n        filterMode,\n        filterModel,\n        onFilterModelChange,\n        ...restDataGridProps\n    } = dataGridProps;\n    //highlight-end\n\n    return (\n        <List>\n            <DataGrid\n                columns={columns}\n                {...restDataGridProps}\n                //highlight-start\n                filterMode={filterMode}\n                filterModel={filterModel}\n                onFilterModelChange={onFilterModelChange}\n                //highlight-end\n                autoHeight\n            />\n        </List>\n    );\n};\n")),(0,i.kt)("p",null,"Above, you can see the filtering properties from ",(0,i.kt)("inlineCode",{parentName:"p"},"dataGridProps"),"."),(0,i.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"To see how the filtering works, you can look at the ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/pankod/refine/blob/master/packages/master/src/hooks/useDataGrid/index.ts"},"source code")," of the ",(0,i.kt)("inlineCode",{parentName:"p"},"useDataGrid")," hook."))),(0,i.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"You can pass ",(0,i.kt)("inlineCode",{parentName:"p"},"initialFilter")," prop to set initial filter and ",(0,i.kt)("inlineCode",{parentName:"p"},"permanentFilter")," prop to set permanent filter."),(0,i.kt)("pre",{parentName:"div"},(0,i.kt)("code",{parentName:"pre",className:"language-tsx"},'const { dataGridProps } = useDataGrid({\n    initialFilter: [{ field: "title", value: "lorem", operator: "contains" }],\n    permanentFilter: [{ field: "status", value: "draft", operator: "eq" }],\n});\n')))),(0,i.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"If you want to filter externally from the ",(0,i.kt)("inlineCode",{parentName:"p"},"<DataGrid>")," component. You can use ",(0,i.kt)("inlineCode",{parentName:"p"},"setFilter")," like this:"),(0,i.kt)("pre",{parentName:"div"},(0,i.kt)("code",{parentName:"pre",className:"language-tsx"},'import {\n    useDataGrid,\n    DataGrid,\n    GridColumns,\n    List,\n    FormControlLabel,\n    Checkbox,\n} from "@pankod/refine-mui";\n\nconst columns: GridColumns = [\n    {\n        field: "id",\n        headerName: "ID",\n        type: "number",\n    },\n    { field: "title", headerName: "Title" },\n    { field: "status", headerName: "Status" },\n];\n\nexport const PostsList: React.FC = () => {\n    const { dataGridProps, setFilters } = useDataGrid();\n\n    const handleFilter = (\n        e: React.ChangeEvent<HTMLInputElement>,\n        checked: boolean,\n    ) => {\n        setFilters([\n            {\n                field: "status",\n                value: checked ? "draft" : undefined,\n                operator: "eq",\n            },\n        ]);\n    };\n\n    return (\n        <List>\n            <FormControlLabel\n                label="Filter by Draft Status"\n                control={<Checkbox onChange={handleFilter} />}\n            />\n            <DataGrid {...dataGridProps} columns={columns} autoHeight />\n        </List>\n    );\n};\n')),(0,i.kt)("p",{parentName:"div"},"Mui X community version only filter the rows according to one criterion at a time. To use multi-filtering, you need to upgrade to the ",(0,i.kt)("a",{parentName:"p",href:"#"},"Pro plan"),"."),(0,i.kt)("p",{parentName:"div"},"However, multiple filtering can be done as server-side without specifying the ",(0,i.kt)("inlineCode",{parentName:"p"},"filterModel"),"."),(0,i.kt)("pre",{parentName:"div"},(0,i.kt)("code",{parentName:"pre",className:"language-tsx"},"return <DataGrid {...dataGridProps} filterModel={undefined} autoHeight />;\n")),(0,i.kt)("p",{parentName:"div"},"When ",(0,i.kt)("inlineCode",{parentName:"p"},"filterModel")," is not passed, it supports more than one criteria at a time, but cannot show which fields are filtered in ",(0,i.kt)("inlineCode",{parentName:"p"},"<DataGrid>")," headers."))),(0,i.kt)("h2",{id:"api"},"API"),(0,i.kt)("h3",{id:"properties"},"Properties"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Key"),(0,i.kt)("th",{parentName:"tr",align:null},"Description"),(0,i.kt)("th",{parentName:"tr",align:null},"Type"),(0,i.kt)("th",{parentName:"tr",align:null},"Default"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("div",{className:"required-block"},(0,i.kt)("div",null,"columns")," ",(0,i.kt)("div",{className:" required"},"Required"))),(0,i.kt)("td",{parentName:"tr",align:null},"Set of columns of type ",(0,i.kt)("inlineCode",{parentName:"td"},"GridColumns")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("a",{parentName:"td",href:"https://mui.com/x/api/data-grid/grid-col-def"},(0,i.kt)("inlineCode",{parentName:"a"},"GridColDef"))),(0,i.kt)("td",{parentName:"tr",align:null})),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"resource"),(0,i.kt)("td",{parentName:"tr",align:null},"The resource to use for table data"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"string")," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},"undefined")),(0,i.kt)("td",{parentName:"tr",align:null},"Resource name that it reads from the URL")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"permanentFilter"),(0,i.kt)("td",{parentName:"tr",align:null},"Default and unchangeable filter"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("a",{parentName:"td",href:"/docs/core/interfaceReferences#crudfilters"},(0,i.kt)("inlineCode",{parentName:"a"},"CrudFilters"))),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"[]"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"permanentSorter"),(0,i.kt)("td",{parentName:"tr",align:null},"Default and unchangeable sorter state"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("a",{parentName:"td",href:"/docs/core/interfaceReferences#crudsorting"},(0,i.kt)("inlineCode",{parentName:"a"},"CrudSorting"))),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"[]"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"hasPagination"),(0,i.kt)("td",{parentName:"tr",align:null},"Whether to use server side pagination or not"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"boolean")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"true"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"initialCurrent"),(0,i.kt)("td",{parentName:"tr",align:null},"Initial page index"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"1"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"initialPageSize"),(0,i.kt)("td",{parentName:"tr",align:null},"Number of records shown per initial number of pages"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"25"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"initialSorter"),(0,i.kt)("td",{parentName:"tr",align:null},"Initial sorting"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("a",{parentName:"td",href:"/docs/core/interfaceReferences#crudsorting"},(0,i.kt)("inlineCode",{parentName:"a"},"CrudSorting"))),(0,i.kt)("td",{parentName:"tr",align:null})),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"initialFilter"),(0,i.kt)("td",{parentName:"tr",align:null},"Initial filtering"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("a",{parentName:"td",href:"/docs/core/interfaceReferences#crudfilters"},(0,i.kt)("inlineCode",{parentName:"a"},"CrudFilters"))),(0,i.kt)("td",{parentName:"tr",align:null})),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"syncWithLocation"),(0,i.kt)("td",{parentName:"tr",align:null},"Sortings, filters, page index and records shown per page are tracked by browser history"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"boolean")),(0,i.kt)("td",{parentName:"tr",align:null},"Value set in ",(0,i.kt)("a",{parentName:"td",href:"/docs/core/components/refine-config#syncwithlocation"},"Refine"),". If a custom resource is given, it will be ",(0,i.kt)("inlineCode",{parentName:"td"},"false"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"onSearch"),(0,i.kt)("td",{parentName:"tr",align:null},"When the search form is submitted, it creates the 'CrudFilters' object. Refer to ",(0,i.kt)("a",{parentName:"td",href:"/docs/guides-and-concepts/search/table-search"},"search form")," to learn how to create a search form"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"Function")),(0,i.kt)("td",{parentName:"tr",align:null})),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"queryOptions"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"react-query"),"'s ",(0,i.kt)("inlineCode",{parentName:"td"},"useQuery")," options"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"}," UseQueryOptions<"),(0,i.kt)("br",null),(0,i.kt)("inlineCode",{parentName:"td"},"{ data: TData[]; },"),(0,i.kt)("br",null),(0,i.kt)("inlineCode",{parentName:"td"},"TError>")),(0,i.kt)("td",{parentName:"tr",align:null})),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"metaData"),(0,i.kt)("td",{parentName:"tr",align:null},"Metadata query for ",(0,i.kt)("inlineCode",{parentName:"td"},"dataProvider")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("a",{parentName:"td",href:"/docs/core/interfaceReferences#metadataquery"},(0,i.kt)("inlineCode",{parentName:"a"},"MetaDataQuery"))),(0,i.kt)("td",{parentName:"tr",align:null},"{}")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("a",{parentName:"td",href:"/docs/core/providers/live-provider#usage-in-a-hook"},"liveMode")),(0,i.kt)("td",{parentName:"tr",align:null},"Whether to update data automatically (",(0,i.kt)("inlineCode",{parentName:"td"},'"auto"'),") or not (",(0,i.kt)("inlineCode",{parentName:"td"},'"manual"'),') if a related live event is received. The "off" value is used to avoid creating a subscription.'),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("a",{parentName:"td",href:"/docs/core/interfaceReferences#livemodeprops"},(0,i.kt)("inlineCode",{parentName:"a"},'"auto"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"a"},'"manual"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"a"},'"off"'))),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},'"off"'))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"liveParams"),(0,i.kt)("td",{parentName:"tr",align:null},"Params to pass to ",(0,i.kt)("inlineCode",{parentName:"td"},"liveProvider"),"'s ",(0,i.kt)("inlineCode",{parentName:"td"},"subscribe")," method if ",(0,i.kt)("inlineCode",{parentName:"td"},"liveMode")," is enabled"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("a",{parentName:"td",href:"/docs/core/interfaceReferences#livemodeprops"},(0,i.kt)("inlineCode",{parentName:"a"},"{ ids?: string[]; [key: string]: any; }"))),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"undefined"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"onLiveEvent"),(0,i.kt)("td",{parentName:"tr",align:null},"Callback to handle all related live events of this hook"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("a",{parentName:"td",href:"/docs/core/interfaceReferences#livemodeprops"},(0,i.kt)("inlineCode",{parentName:"a"},"(event: LiveEvent) => void"))),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"undefined"))))),(0,i.kt)("h3",{id:"type-parameters"},"Type Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Property"),(0,i.kt)("th",{parentName:"tr",align:null},"Desription"),(0,i.kt)("th",{parentName:"tr",align:null},"Type"),(0,i.kt)("th",{parentName:"tr",align:null},"Default"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"TData"),(0,i.kt)("td",{parentName:"tr",align:null},"Result data of the query. Extends ",(0,i.kt)("a",{parentName:"td",href:"/docs/core/interfaceReferences#baserecord"},(0,i.kt)("inlineCode",{parentName:"a"},"BaseRecord"))),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("a",{parentName:"td",href:"/docs/core/interfaceReferences#baserecord"},(0,i.kt)("inlineCode",{parentName:"a"},"BaseRecord"))),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("a",{parentName:"td",href:"/docs/core/interfaceReferences#baserecord"},(0,i.kt)("inlineCode",{parentName:"a"},"BaseRecord")))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"TError"),(0,i.kt)("td",{parentName:"tr",align:null},"Custom error object that extends ",(0,i.kt)("a",{parentName:"td",href:"/docs/core/interfaceReferences#httperror"},(0,i.kt)("inlineCode",{parentName:"a"},"HttpError"))),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("a",{parentName:"td",href:"/docs/core/interfaceReferences#httperror"},(0,i.kt)("inlineCode",{parentName:"a"},"HttpError"))),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("a",{parentName:"td",href:"/docs/core/interfaceReferences#httperror"},(0,i.kt)("inlineCode",{parentName:"a"},"HttpError")))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"TSearchVariables"),(0,i.kt)("td",{parentName:"tr",align:null},"Values for search params"),(0,i.kt)("td",{parentName:"tr",align:null}),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"{}"))))),(0,i.kt)("h3",{id:"return-values"},"Return values"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Property"),(0,i.kt)("th",{parentName:"tr",align:null},"Description"),(0,i.kt)("th",{parentName:"tr",align:null},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"dataGridProps"),(0,i.kt)("td",{parentName:"tr",align:null},"MUI X ",(0,i.kt)("a",{parentName:"td",href:"https://mui.com/x/react-data-grid/"},(0,i.kt)("inlineCode",{parentName:"a"},"<DataGrid>"))," props"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"DataGridPropsType"),"*")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"tableQueryResult"),(0,i.kt)("td",{parentName:"tr",align:null},"Result of the ",(0,i.kt)("inlineCode",{parentName:"td"},"react-query"),"'s ",(0,i.kt)("inlineCode",{parentName:"td"},"useQuery")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("a",{parentName:"td",href:"https://react-query.tanstack.com/reference/useQuery"},(0,i.kt)("inlineCode",{parentName:"a"},"QueryObserverResult<{"),(0,i.kt)("br",null),(0,i.kt)("inlineCode",{parentName:"a"}," data: TData[];"),(0,i.kt)("br",null),(0,i.kt)("inlineCode",{parentName:"a"}," total: number; },"),(0,i.kt)("br",null),(0,i.kt)("inlineCode",{parentName:"a"}," TError>")))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"search"),(0,i.kt)("td",{parentName:"tr",align:null},"It sends the parameters it receives to its ",(0,i.kt)("inlineCode",{parentName:"td"},"onSearch")," function"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"(value: TSearchVariables) => Promise<void>"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"current"),(0,i.kt)("td",{parentName:"tr",align:null},"Current page index state (returns ",(0,i.kt)("inlineCode",{parentName:"td"},"undefined")," if pagination is disabled)"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"number")," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},"undefined"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"totalPage"),(0,i.kt)("td",{parentName:"tr",align:null},"Total page count (returns ",(0,i.kt)("inlineCode",{parentName:"td"},"undefined")," if pagination is disabled)"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"number")," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},"undefined"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"setCurrent"),(0,i.kt)("td",{parentName:"tr",align:null},"A function that changes the current (returns ",(0,i.kt)("inlineCode",{parentName:"td"},"undefined")," if pagination is disabled)"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"React.Dispatch<React.SetStateAction<number>>")," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},"undefined"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"pageSize"),(0,i.kt)("td",{parentName:"tr",align:null},"Current pageSize state (returns ",(0,i.kt)("inlineCode",{parentName:"td"},"undefined")," if pagination is disabled)"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"number")," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},"undefined"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"setPageSize"),(0,i.kt)("td",{parentName:"tr",align:null},"A function that changes the pageSize (returns ",(0,i.kt)("inlineCode",{parentName:"td"},"undefined")," if pagination is disabled)"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"React.Dispatch<React.SetStateAction<number>>")," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},"undefined"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"hideFooterPagination"),(0,i.kt)("td",{parentName:"tr",align:null},"Whether to hide the footer pagination or not. This value is only returned if ",(0,i.kt)("inlineCode",{parentName:"td"},"hasPagination")," is set to ",(0,i.kt)("inlineCode",{parentName:"td"},"false")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"boolean"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"sorter"),(0,i.kt)("td",{parentName:"tr",align:null},"Current sorting state"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("a",{parentName:"td",href:"/docs/core/interfaceReferences#crudsorting"},(0,i.kt)("inlineCode",{parentName:"a"},"CrudSorting")))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"setSorter"),(0,i.kt)("td",{parentName:"tr",align:null},"A function that accepts a new sorter state"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"(sorter: CrudSorting) => void"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"filters"),(0,i.kt)("td",{parentName:"tr",align:null},"Current filters state"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("a",{parentName:"td",href:"/docs/core/interfaceReferences#crudfilters"},(0,i.kt)("inlineCode",{parentName:"a"},"CrudFilters")))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"setFilters"),(0,i.kt)("td",{parentName:"tr",align:null},"A function that accepts a new filter state"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"(filters: CrudFilters) => void"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"createLinkForSyncWithLocation"),(0,i.kt)("td",{parentName:"tr",align:null},"A function create accessible links for syncWithLocation"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"(params: "),(0,i.kt)("a",{parentName:"td",href:"/docs/core/interfaceReferences#syncwithlocationparams"},"SyncWithLocationParams"),(0,i.kt)("inlineCode",{parentName:"td"},") => string;"))))),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},(0,i.kt)("strong",{parentName:"p"},"DataGridProps")),(0,i.kt)("table",{parentName:"blockquote"},(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Property"),(0,i.kt)("th",{parentName:"tr",align:null},"Default"),(0,i.kt)("th",{parentName:"tr",align:null},"Property"),(0,i.kt)("th",{parentName:"tr",align:null},"Default"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"rows"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"[]")),(0,i.kt)("td",{parentName:"tr",align:null},"pageSize"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"25"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"rowCount"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"0")),(0,i.kt)("td",{parentName:"tr",align:null},"onPageSizeChange"),(0,i.kt)("td",{parentName:"tr",align:null})),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"disableSelectionOnClick"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"true")),(0,i.kt)("td",{parentName:"tr",align:null},"sortingMode"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},'"server"'))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"loading"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"false")),(0,i.kt)("td",{parentName:"tr",align:null},"sortModel"),(0,i.kt)("td",{parentName:"tr",align:null})),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"paginationMode"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},'"server"')),(0,i.kt)("td",{parentName:"tr",align:null},"onSortModelChange"),(0,i.kt)("td",{parentName:"tr",align:null})),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"page"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"0")),(0,i.kt)("td",{parentName:"tr",align:null},"filterMode"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},'"server"'))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"onPageChange"),(0,i.kt)("td",{parentName:"tr",align:null}),(0,i.kt)("td",{parentName:"tr",align:null},"filterModel"),(0,i.kt)("td",{parentName:"tr",align:null})),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"onStateChange"),(0,i.kt)("td",{parentName:"tr",align:null}),(0,i.kt)("td",{parentName:"tr",align:null},"onFilterModelChange"),(0,i.kt)("td",{parentName:"tr",align:null}))))),(0,i.kt)("br",null),(0,i.kt)("div",{className:"admonition admonition-caution alert alert--warning"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"caution")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"The ",(0,i.kt)("inlineCode",{parentName:"p"},"onStateChange")," callback is used internally by the ",(0,i.kt)("inlineCode",{parentName:"p"},"useDataGrid")," hook. If you want to override it, you can use like this:"),(0,i.kt)("pre",{parentName:"div"},(0,i.kt)("code",{parentName:"pre",className:"language-tsx"},"export const PostsList: React.FC = () => {\n    const { dataGridProps } = useDataGrid<IPost>();\n\n    return (\n        <List>\n            <DataGrid\n                {...dataGridProps}\n                columns={columns}\n                autoHeight\n                //highlight-start\n                onStateChange={(state) => {\n                    dataGridProps.onStateChange(state);\n                    // do something else\n                }}\n                //highlight-end\n            />\n        </List>\n    );\n};\n")))),(0,i.kt)("h2",{id:"live-stackblitz-example"},"Live StackBlitz Example"),(0,i.kt)("iframe",{src:"https://stackblitz.com/github/pankod/refine/tree/master/examples/table/mui/useDataGrid?embed=1&view=preview&theme=dark&preset=node",style:{width:"100%",height:"80vh",border:"0px",borderRadius:"8px",overflow:"hidden"},title:"refine-use-data-grid-example"}))}u.isMDXComponent=!0}}]);