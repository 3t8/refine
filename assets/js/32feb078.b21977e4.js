"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[15487],{3905:function(e,t,a){a.d(t,{Zo:function(){return p},kt:function(){return m}});var n=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var d=n.createContext({}),s=function(e){var t=n.useContext(d),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},p=function(e){var t=s(e.components);return n.createElement(d.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},c=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,i=e.originalType,d=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),c=s(a),m=r,k=c["".concat(d,".").concat(m)]||c[m]||u[m]||i;return a?n.createElement(k,o(o({ref:t},p),{},{components:a})):n.createElement(k,o({ref:t},p))}));function m(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=a.length,o=new Array(i);o[0]=c;var l={};for(var d in t)hasOwnProperty.call(t,d)&&(l[d]=t[d]);l.originalType=e,l.mdxType="string"==typeof e?e:r,o[1]=l;for(var s=2;s<i;s++)o[s]=a[s];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}c.displayName="MDXCreateElement"},95072:function(e,t,a){a.r(t),a.d(t,{frontMatter:function(){return l},contentTitle:function(){return d},metadata:function(){return s},toc:function(){return p},default:function(){return c}});var n=a(87462),r=a(63366),i=(a(67294),a(3905)),o=["components"],l={id:"useInvalidate",title:"useInvalidate"},d=void 0,s={unversionedId:"core/hooks/invalidate/useInvalidate",id:"core/hooks/invalidate/useInvalidate",isDocsHomePage:!1,title:"useInvalidate",description:"useInvalidate can be used to invalidate the state of a particular resource or dataProvider (with dataProviderName).",source:"@site/docs/core/hooks/invalidate/useInvalidate.md",sourceDirName:"core/hooks/invalidate",slug:"/core/hooks/invalidate/useInvalidate",permalink:"/docs/core/hooks/invalidate/useInvalidate",editUrl:"https://github.com/pankod/refine/tree/master/documentation/docs/core/hooks/invalidate/useInvalidate.md",tags:[],version:"current",lastUpdatedBy:"\xd6mer Faruk APLAK",lastUpdatedAt:1649331121,formattedLastUpdatedAt:"4/7/2022",frontMatter:{id:"useInvalidate",title:"useInvalidate"},sidebar:"someSidebar",previous:{title:"useImport",permalink:"/docs/core/hooks/import-export/useImport"},next:{title:"usePublish",permalink:"/docs/core/hooks/live/usePublish"}},p=[{value:"API Reference",id:"api-reference",children:[{value:"Properties",id:"properties",children:[],level:3}],level:2}],u={toc:p};function c(e){var t=e.components,a=(0,r.Z)(e,o);return(0,i.kt)("wrapper",(0,n.Z)({},u,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"useInvalidate")," can be used to invalidate the state of a particular ",(0,i.kt)("inlineCode",{parentName:"p"},"resource")," or ",(0,i.kt)("inlineCode",{parentName:"p"},"dataProvider")," (with dataProviderName). "),(0,i.kt)("p",null,"For example, creating a ",(0,i.kt)("inlineCode",{parentName:"p"},"Posts")," with ",(0,i.kt)("a",{parentName:"p",href:"/docs/core/hooks/data/useCreate"},"useCreate")," hook will invalidate the ",(0,i.kt)("inlineCode",{parentName:"p"},"list")," (",(0,i.kt)("a",{parentName:"p",href:"/docs/core/hooks/data/useList"},"useList"),") and ",(0,i.kt)("inlineCode",{parentName:"p"},"many")," (",(0,i.kt)("a",{parentName:"p",href:"/docs/core/hooks/data/useMany"},"useMany"),") state of the ",(0,i.kt)("inlineCode",{parentName:"p"},"Posts")," resource."),(0,i.kt)("p",null,"The hook is used internal in ",(0,i.kt)("strong",{parentName:"p"},"refine"),". Normally you don't need this hook, but we export it as it may be useful for some use-cases."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},'import { useInvalidate } from "@pankod/refine-core";\n\nconst invalidate = useInvalidate();\n\n// To invalidate the list and many states of the Posts resource\ninvalidate({\n    resource: "posts",\n    invalidates: ["list", "many"]\n});\n\n// To invalidate the state of a Posts with an id of 1\ninvalidate({\n    resource: "posts",\n    invalidates: ["detail"],\n    id: 1,\n});\n\n// To invalidate the list and many states of the Posts resource of the dataProvider named "second-data-provider"\ninvalidate({\n    resource: "posts",\n    dataProviderName: "second-data-provider",\n    invalidates: ["list"],\n});\n\n// To invalidate all states of dataprovider named "second-data-provider"\ninvalidate({\n    dataProviderName: "second-data-provider",\n    invalidates: ["all"],\n});\n')),(0,i.kt)("h2",{id:"api-reference"},"API Reference"),(0,i.kt)("h3",{id:"properties"},"Properties"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Property"),(0,i.kt)("th",{parentName:"tr",align:null},"Description"),(0,i.kt)("th",{parentName:"tr",align:null},"Type"),(0,i.kt)("th",{parentName:"tr",align:null},"Default"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("div",{className:"required-block"},(0,i.kt)("div",null,"invalidates")," ",(0,i.kt)("div",{className:"required"},"Required"))),(0,i.kt)("td",{parentName:"tr",align:null},"The states you want to invalidate."),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"all"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"resourceAll"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"list"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"many"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"detail"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"false")),(0,i.kt)("td",{parentName:"tr",align:null})),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"resource"),(0,i.kt)("td",{parentName:"tr",align:null},"Resource name for State invalidation."),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"string")),(0,i.kt)("td",{parentName:"tr",align:null})),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"id"),(0,i.kt)("td",{parentName:"tr",align:null},"The ",(0,i.kt)("inlineCode",{parentName:"td"},"id"),' to use when invalidating the "detail" state.'),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("a",{parentName:"td",href:"/docs/core/interfaceReferences#basekey"},(0,i.kt)("inlineCode",{parentName:"a"},"BaseKey"))),(0,i.kt)("td",{parentName:"tr",align:null})),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"dataProviderName"),(0,i.kt)("td",{parentName:"tr",align:null},"The name of the data provider whose state you want to invalidate."),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"string")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"default"))))))}c.isMDXComponent=!0}}]);