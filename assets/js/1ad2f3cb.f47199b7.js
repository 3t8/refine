"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[42590],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return m}});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),d=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=d(e.components);return a.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),c=d(n),m=r,h=c["".concat(s,".").concat(m)]||c[m]||u[m]||o;return n?a.createElement(h,i(i({ref:t},p),{},{components:n})):a.createElement(h,i({ref:t},p))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=c;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var d=2;d<o;d++)i[d]=n[d];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}c.displayName="MDXCreateElement"},58215:function(e,t,n){var a=n(67294);t.Z=function(e){var t=e.children,n=e.hidden,r=e.className;return a.createElement("div",{role:"tabpanel",hidden:n,className:r},t)}},26396:function(e,t,n){n.d(t,{Z:function(){return c}});var a=n(87462),r=n(67294),o=n(72389),i=n(79443);var l=function(){var e=(0,r.useContext)(i.Z);if(null==e)throw new Error('"useUserPreferencesContext" is used outside of "Layout" component.');return e},s=n(89521),d=n(86010),p="tabItem_vU9c";function u(e){var t,n,a,o=e.lazy,i=e.block,u=e.defaultValue,c=e.values,m=e.groupId,h=e.className,k=r.Children.map(e.children,(function(e){if((0,r.isValidElement)(e)&&void 0!==e.props.value)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),g=null!=c?c:k.map((function(e){var t=e.props;return{value:t.value,label:t.label}})),f=(0,s.lx)(g,(function(e,t){return e.value===t.value}));if(f.length>0)throw new Error('Docusaurus error: Duplicate values "'+f.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.');var v=null===u?u:null!=(t=null!=u?u:null==(n=k.find((function(e){return e.props.default})))?void 0:n.props.value)?t:null==(a=k[0])?void 0:a.props.value;if(null!==v&&!g.some((function(e){return e.value===v})))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+v+'" but none of its children has the corresponding value. Available values are: '+g.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");var N=l(),b=N.tabGroupChoices,w=N.setTabGroupChoices,y=(0,r.useState)(v),x=y[0],C=y[1],P=[],S=(0,s.o5)().blockElementScrollPositionUntilNextRender;if(null!=m){var T=b[m];null!=T&&T!==x&&g.some((function(e){return e.value===T}))&&C(T)}var D=function(e){var t=e.currentTarget,n=P.indexOf(t),a=g[n].value;a!==x&&(S(t),C(a),null!=m&&w(m,a))},I=function(e){var t,n=null;switch(e.key){case"ArrowRight":var a=P.indexOf(e.currentTarget)+1;n=P[a]||P[0];break;case"ArrowLeft":var r=P.indexOf(e.currentTarget)-1;n=P[r]||P[P.length-1]}null==(t=n)||t.focus()};return r.createElement("div",{className:"tabs-container"},r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,d.Z)("tabs",{"tabs--block":i},h)},g.map((function(e){var t=e.value,n=e.label;return r.createElement("li",{role:"tab",tabIndex:x===t?0:-1,"aria-selected":x===t,className:(0,d.Z)("tabs__item",p,{"tabs__item--active":x===t}),key:t,ref:function(e){return P.push(e)},onKeyDown:I,onFocus:D,onClick:D},null!=n?n:t)}))),o?(0,r.cloneElement)(k.filter((function(e){return e.props.value===x}))[0],{className:"margin-vert--md"}):r.createElement("div",{className:"margin-vert--md"},k.map((function(e,t){return(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==x})}))))}function c(e){var t=(0,o.Z)();return r.createElement(u,(0,a.Z)({key:String(t)},e))}},79443:function(e,t,n){var a=(0,n(67294).createContext)(void 0);t.Z=a},74036:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return m},contentTitle:function(){return h},metadata:function(){return k},toc:function(){return g},default:function(){return v}});var a=n(87462),r=n(63366),o=(n(67294),n(3905)),i=n(81733),l=n(56327),s=n(1392),d=n(18572),p=n(26396),u=n(58215),c=["components"],m={id:"strapi-v4",title:"Strapi-v4"},h=void 0,k={unversionedId:"guides-and-concepts/data-provider/strapi-v4",id:"guides-and-concepts/data-provider/strapi-v4",isDocsHomePage:!1,title:"Strapi-v4",description:"refine supports the features that come with Strapi-v4.",source:"@site/docs/guides-and-concepts/data-provider/strapi-v4.md",sourceDirName:"guides-and-concepts/data-provider",slug:"/guides-and-concepts/data-provider/strapi-v4",permalink:"/docs/next/guides-and-concepts/data-provider/strapi-v4",editUrl:"https://github.com/pankod/refine/tree/master/documentation/docs/guides-and-concepts/data-provider/strapi-v4.md",tags:[],version:"current",lastUpdatedBy:"Salih \xd6zdemir",lastUpdatedAt:1644907266,formattedLastUpdatedAt:"2/15/2022",frontMatter:{id:"strapi-v4",title:"Strapi-v4"},sidebar:"someSidebar",previous:{title:"GraphQL",permalink:"/docs/next/guides-and-concepts/data-provider/graphql"},next:{title:"Appwrite",permalink:"/docs/next/guides-and-concepts/data-provider/appwrite"}},g=[{value:"Setup",id:"setup",children:[],level:2},{value:"Usage",id:"usage",children:[],level:2},{value:"API Parameters",id:"api-parameters",children:[{value:"Create Collections",id:"create-collections",children:[],level:3},{value:"Fields Selection",id:"fields-selection",children:[],level:3},{value:"Relations Population",id:"relations-population",children:[],level:3},{value:"Publication State",id:"publication-state",children:[],level:3},{value:"Locale",id:"locale",children:[],level:3}],level:2},{value:"<code>metaData</code> Usages",id:"metadata-usages",children:[],level:2},{value:"Live Codesandbox Example",id:"live-codesandbox-example",children:[],level:2}],f={toc:g};function v(e){var t=e.components,n=(0,r.Z)(e,c);return(0,o.kt)("wrapper",(0,a.Z)({},f,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"refine")," supports the features that come with ",(0,o.kt)("a",{parentName:"p",href:"https://docs.strapi.io/developer-docs/latest/getting-started/introduction.html"},"Strapi-v4"),"."),(0,o.kt)("p",null,"A few of the Strapi-v4 API features are as follows:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Fields Selection"),(0,o.kt)("li",{parentName:"ul"},"Relations Population"),(0,o.kt)("li",{parentName:"ul"},"Publication State"),(0,o.kt)("li",{parentName:"ul"},"Locale")),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"metaData")," allows us to use the above features in hooks. Thus, we can fetch the data according to the parameters we want."),(0,o.kt)("p",null,"Hooks and components that support ",(0,o.kt)("inlineCode",{parentName:"p"},"metaData"),":"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Supported data hooks"),(0,o.kt)("th",{parentName:"tr",align:null},"Supported other hooks"),(0,o.kt)("th",{parentName:"tr",align:null},"Supported components"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/docs/next/core/hooks/data/useUpdate"},(0,o.kt)("inlineCode",{parentName:"a"},"useUpdate")," ","\u2192")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/docs/next/core/hooks/useForm"},(0,o.kt)("inlineCode",{parentName:"a"},"useForm")," ","\u2192")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/docs/next/ui-frameworks/antd/components/buttons/delete-button"},(0,o.kt)("inlineCode",{parentName:"a"},"DeleteButton")," ","\u2192"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/docs/next/core/hooks/data/useUpdateMany"},(0,o.kt)("inlineCode",{parentName:"a"},"useUpdateMany")," ","\u2192")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/docs/next/ui-frameworks/antd/hooks/form/useModalForm"},(0,o.kt)("inlineCode",{parentName:"a"},"useModalForm")," ","\u2192")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/docs/next/ui-frameworks/antd/components/buttons/refresh-button"},(0,o.kt)("inlineCode",{parentName:"a"},"RefreshButton")," ","\u2192"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/docs/next/core/hooks/data/useDelete"},(0,o.kt)("inlineCode",{parentName:"a"},"useDelete")," ","\u2192")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/docs/next/ui-frameworks/antd/hooks/form/useDrawerForm"},(0,o.kt)("inlineCode",{parentName:"a"},"useDrawerForm")," ","\u2192")),(0,o.kt)("td",{parentName:"tr",align:null})),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/docs/next/core/hooks/data/useDeleteMany"},(0,o.kt)("inlineCode",{parentName:"a"},"useDeleteMany")," ","\u2192")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/docs/next/ui-frameworks/antd/hooks/form/useStepsForm"},(0,o.kt)("inlineCode",{parentName:"a"},"useStepsForm")," ","\u2192")),(0,o.kt)("td",{parentName:"tr",align:null})),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/docs/next/core/hooks/data/useCreate"},(0,o.kt)("inlineCode",{parentName:"a"},"useCreate")," ","\u2192")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/docs/next/core/hooks/useTable"},(0,o.kt)("inlineCode",{parentName:"a"},"useTable")," ","\u2192")),(0,o.kt)("td",{parentName:"tr",align:null})),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/docs/next/core/hooks/data/useCreateMany"},(0,o.kt)("inlineCode",{parentName:"a"},"useCreateMany")," ","\u2192")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/docs/next/ui-frameworks/antd/hooks/table/useEditableTable"},(0,o.kt)("inlineCode",{parentName:"a"},"useEditableTable")," ","\u2192")),(0,o.kt)("td",{parentName:"tr",align:null})),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/docs/next/core/hooks/data/useList"},(0,o.kt)("inlineCode",{parentName:"a"},"useList")," ","\u2192")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/docs/next/ui-frameworks/antd/hooks/list/useSimpleList"},(0,o.kt)("inlineCode",{parentName:"a"},"useSimpleList")," ","\u2192")),(0,o.kt)("td",{parentName:"tr",align:null})),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/docs/next/core/hooks/data/useOne"},(0,o.kt)("inlineCode",{parentName:"a"},"useOne")," ","\u2192")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/docs/next/core/hooks/show/useShow"},(0,o.kt)("inlineCode",{parentName:"a"},"useShow")," ","\u2192")),(0,o.kt)("td",{parentName:"tr",align:null})),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/docs/next/core/hooks/data/useMany"},(0,o.kt)("inlineCode",{parentName:"a"},"useMany")," ","\u2192")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/docs/next/core/hooks/import-export/useExport"},(0,o.kt)("inlineCode",{parentName:"a"},"useExport")," ","\u2192")),(0,o.kt)("td",{parentName:"tr",align:null})),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/docs/next/core/hooks/data/useCustom"},(0,o.kt)("inlineCode",{parentName:"a"},"useCustom")," ","\u2192")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/docs/next/ui-frameworks/antd/hooks/field/useCheckboxGroup"},(0,o.kt)("inlineCode",{parentName:"a"},"useCheckboxGroup")," ","\u2192")),(0,o.kt)("td",{parentName:"tr",align:null})),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null}),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/docs/next/core/hooks/useSelect"},(0,o.kt)("inlineCode",{parentName:"a"},"useSelect")," ","\u2192")),(0,o.kt)("td",{parentName:"tr",align:null})),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null}),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/docs/next/ui-frameworks/antd/hooks/field/useRadioGroup"},(0,o.kt)("inlineCode",{parentName:"a"},"useRadioGroup")," ","\u2192")),(0,o.kt)("td",{parentName:"tr",align:null})))),(0,o.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"There is no need to use ",(0,o.kt)("inlineCode",{parentName:"p"},"metaData")," for sorting, pagination and filters. Sorting, pagination and filters will be handled automatically by the strapi-v4 dataProvider."))),(0,o.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"Normally, strapi-v4 backend returns data in the following format:"),(0,o.kt)("pre",{parentName:"div"},(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "id": 1,\n    "attributes": {\n        "title": "My title",\n        "content": "Long content...",\n}\n')),(0,o.kt)("p",{parentName:"div"},"However, we can use ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/pankod/refine/blob/27a55320ada61a0624ed2f5b29331946334f7727/packages/strapi-v4/src/dataProvider.ts#L80"},"normalizeData")," to customize the data returned by the backend. So, our data will look like:"),(0,o.kt)("pre",{parentName:"div"},(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "id": 1,\n    "title": "My title",\n    "content": "Long content..."\n}\n')))),(0,o.kt)("h2",{id:"setup"},"Setup"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"npm i @pankod/refine-strapi-v4\n")),(0,o.kt)("div",{className:"admonition admonition-caution alert alert--warning"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"caution")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"To make this example more visual, we used the ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/pankod/refine/tree/master/packages/refine-antd"},(0,o.kt)("inlineCode",{parentName:"a"},"@pankod/refine-antd"))," package. If you are using Refine headless, you need to provide the components, hooks or helpers imported from the ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/pankod/refine/tree/master/packages/refine-antd"},(0,o.kt)("inlineCode",{parentName:"a"},"@pankod/refine-antd"))," package."))),(0,o.kt)("h2",{id:"usage"},"Usage"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx",metastring:'title="App.tsx"',title:'"App.tsx"'},'import { Refine, AuthProvider } from "@pankod/refine-core";\n//highlight-start\nimport { DataProvider } from "@pankod/refine-strapi-v4";\n//highlight-end\nimport routerProvider from "@pankod/refine-react-router";\n\nconst App: React.FC = () => {\n    return (\n        <Refine\n            authProvider={authProvider}\n            //highlight-start\n            dataProvider={DataProvider("API_URL")}\n            //highlight-end\n            routerProvider={routerProvider}\n        />\n    );\n};\n')),(0,o.kt)("h2",{id:"api-parameters"},"API Parameters"),(0,o.kt)("p",null,"Let's examine how API parameters that come with Strapi-v4 are used with ",(0,o.kt)("inlineCode",{parentName:"p"},"metaData"),". Then, let's see how it is used in the application."),(0,o.kt)("h3",{id:"create-collections"},"Create Collections"),(0,o.kt)("p",null,"We created two collections on ",(0,o.kt)("a",{parentName:"p",href:"https://strapi.io/"},"Strapi")," as ",(0,o.kt)("inlineCode",{parentName:"p"},"posts")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"categories")," and added a relation between them. For detailed information on how to create a collection, you can check ",(0,o.kt)("a",{parentName:"p",href:"https://strapi.io/documentation/developer-docs/latest/getting-started/quick-start.html"},"here"),"."),(0,o.kt)(p.Z,{defaultValue:"posts",values:[{label:"posts",value:"posts"},{label:"categories",value:"categories"}],mdxType:"Tabs"},(0,o.kt)(u.Z,{value:"posts",mdxType:"TabItem"},(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"posts")," has the following fields:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"id")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"title")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"content")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"category")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"createdAt")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"locale")))),(0,o.kt)(u.Z,{value:"categories",mdxType:"TabItem"},(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"categories")," has the following fields:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"id")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"title"))))),(0,o.kt)("h3",{id:"fields-selection"},"Fields Selection"),(0,o.kt)("p",null,"To select only some fields, we must specify this fields with ",(0,o.kt)("inlineCode",{parentName:"p"},"metaData"),"."),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://docs.strapi.io/developer-docs/latest/developer-resources/database-apis-reference/rest-api.html#fields-selection"},"Refer to the Fields Selection documentation for detailed information. \u2192")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx",metastring:'title="Get only id and title of all posts"',title:!0,only:!0,id:!0,and:!0,of:!0,all:!0,'posts"':!0},'const { tableProps } = useTable<IPost>({\n    metaData: {\n        fields: ["id", "title"],\n    },\n});\n')),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx",metastring:'title="Get all fields of all posts(id, title, category, content ...)"',title:'"Get',all:!0,fields:!0,of:!0,"posts(id,":!0,"title,":!0,"category,":!0,content:!0,'...)"':!0},'const { tableProps } = useTable<IPost>({\n    metaData: {\n        fields: "*",\n    },\n});\n')),(0,o.kt)("p",null,"When sending the request, we can specify which fields will come, so we send ",(0,o.kt)("inlineCode",{parentName:"p"},"fields")," in ",(0,o.kt)("inlineCode",{parentName:"p"},"metaData")," to hooks that we will fetch data from. In this way, you can perform the queries of only the fields you want."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx",metastring:'title="PostList.tsx"',title:'"PostList.tsx"'},'import { useState } from "react";\nimport { IResourceComponentsProps } from "@pankod/core";\nimport {\n    List,\n    Table,\n    useTable,\n    getDefaultSortOrder,\n    FilterDropdown,\n    Select,\n    useSelect,\n    Space,\n    EditButton,\n    DeleteButton,\n} from "@pankod/refine-antd";\n\nimport { IPost } from "interfaces";\n\nimport { API_URL } from "../../constants";\n\nexport const PostList: React.FC<IResourceComponentsProps> = () => {\n    const { tableProps, sorter } = useTable<IPost>({\n        metaData: {\n            // highlight-start\n            fields: ["id", "title"],\n            // highlight-end\n        },\n    });\n\n    return (\n        <List>\n            <Table\n                {...tableProps}\n                rowKey="id"\n                pagination={{\n                    ...tableProps.pagination,\n                    showSizeChanger: true,\n                }}\n            >\n                <Table.Column\n                    dataIndex="id"\n                    title="ID"\n                    defaultSortOrder={getDefaultSortOrder("id", sorter)}\n                    sorter={{ multiple: 3 }}\n                />\n                <Table.Column\n                    dataIndex="title"\n                    title="Title"\n                    defaultSortOrder={getDefaultSortOrder("title", sorter)}\n                    sorter={{ multiple: 2 }}\n                />\n\n                <Table.Column<{ id: string }>\n                    title="Actions"\n                    render={(_, record) => (\n                        <Space>\n                            <EditButton\n                                hideText\n                                size="small"\n                                recordItemId={record.id}\n                            />\n                            <DeleteButton\n                                hideText\n                                size="small"\n                                recordItemId={record.id}\n                            />\n                        </Space>\n                    )}\n                />\n            </Table>\n        </List>\n    );\n};\n')),(0,o.kt)("div",{class:"img-container"},(0,o.kt)("div",{class:"window"},(0,o.kt)("div",{class:"control red"}),(0,o.kt)("div",{class:"control orange"}),(0,o.kt)("div",{class:"control green"})),(0,o.kt)("img",{src:i.Z,alt:"Fields Selection Metadata"})),(0,o.kt)("h3",{id:"relations-population"},"Relations Population"),(0,o.kt)("p",null,"By default, relations are not populated when fetching entries."),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"populate")," parameter is used to define which fields will be populated."),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://docs.strapi.io/developer-docs/latest/developer-resources/database-apis-reference/rest-api.html#relations-population"},"Refer to the Relations Population documentation for detailed information. \u2192")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx",metastring:'title="Get all the posts and populate the selected relations"',title:'"Get',all:!0,the:!0,posts:!0,and:!0,populate:!0,selected:!0,'relations"':!0},'const { tableProps } = useTable<IPost>({\n    metaData: {\n        populate: ["category", "cover"],\n    },\n});\n')),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx",metastring:'title="Get all posts and populate all their first-level relations"',title:'"Get',all:!0,posts:!0,and:!0,populate:!0,their:!0,"first-level":!0,'relations"':!0},'const { tableProps } = useTable<IPost>({\n    metaData: {\n        populate: "*",\n    },\n});\n')),(0,o.kt)("p",null,"In order to pull the ",(0,o.kt)("inlineCode",{parentName:"p"},"categories")," related to the posts, we can now show the categories in our list by defining the ",(0,o.kt)("inlineCode",{parentName:"p"},"metaData")," ",(0,o.kt)("inlineCode",{parentName:"p"},"populate")," parameter."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx",metastring:'title="PostList.tsx"',title:'"PostList.tsx"'},'import { IResourceComponentsProps } from "@pankod/refine-core";\nimport {\n    List,\n    Table,\n    useTable,\n    getDefaultSortOrder,\n    FilterDropdown,\n    Select,\n    useSelect,\n    Space,\n    EditButton,\n    DeleteButton,\n} from "@pankod/refine-antd";\n\nimport { IPost } from "interfaces";\n\nimport { API_URL } from "../../constants";\n\nexport const PostList: React.FC<IResourceComponentsProps> = () => {\n    const { tableProps, sorter } = useTable<IPost>({\n        metaData: {\n            fields: ["id", "title"],\n            // highlight-start\n            populate: ["category"],\n            // highlight-end\n        },\n    });\n\n    // highlight-start\n    const { selectProps } = useSelect({\n        resource: "categories",\n        optionLabel: "title",\n        optionValue: "id",\n    });\n    // highlight-end\n\n    return (\n        <List>\n            <Table\n                {...tableProps}\n                rowKey="id"\n                pagination={{\n                    ...tableProps.pagination,\n                    showSizeChanger: true,\n                }}\n            >\n                <Table.Column\n                    dataIndex="id"\n                    title="ID"\n                    defaultSortOrder={getDefaultSortOrder("id", sorter)}\n                    sorter={{ multiple: 3 }}\n                />\n                <Table.Column\n                    dataIndex="title"\n                    title="Title"\n                    defaultSortOrder={getDefaultSortOrder("title", sorter)}\n                    sorter={{ multiple: 2 }}\n                />\n                //highlight-start\n                <Table.Column\n                    dataIndex={["category", "title"]}\n                    title="Category"\n                    filterDropdown={(props) => (\n                        <FilterDropdown {...props}>\n                            <Select\n                                style={{ minWidth: 200 }}\n                                mode="multiple"\n                                placeholder="Select Category"\n                                {...selectProps}\n                            />\n                        </FilterDropdown>\n                    )}\n                />\n                //highlight-end\n                <Table.Column<{ id: string }>\n                    title="Actions"\n                    render={(_, record) => (\n                        <Space>\n                            <EditButton\n                                hideText\n                                size="small"\n                                recordItemId={record.id}\n                            />\n                            <DeleteButton\n                                hideText\n                                size="small"\n                                recordItemId={record.id}\n                            />\n                        </Space>\n                    )}\n                />\n            </Table>\n        </List>\n    );\n};\n')),(0,o.kt)("div",{class:"img-container"},(0,o.kt)("div",{class:"window"},(0,o.kt)("div",{class:"control red"}),(0,o.kt)("div",{class:"control orange"}),(0,o.kt)("div",{class:"control green"})),(0,o.kt)("img",{src:l.Z,alt:"category"})),(0,o.kt)("h3",{id:"publication-state"},"Publication State"),(0,o.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"The Draft & Publish feature should be enabled on Strapi."))),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://docs.strapi.io/developer-docs/latest/developer-resources/database-apis-reference/rest-api.html#publication-state"},"Refer to the Publication State documentation for detailed information. \u2192")),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"live"),": returns only published entries"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"preview"),": returns draft and published entries"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},'const { tableProps } = useTable<IPost>({\n    metaData: {\n        publicationState: "preview",\n    },\n});\n')),(0,o.kt)("p",null,"We can list the posts separately according to the ",(0,o.kt)("inlineCode",{parentName:"p"},"published")," or ",(0,o.kt)("inlineCode",{parentName:"p"},"draft")," information."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx",metastring:'title="PostList"',title:'"PostList"'},'// highlight-next-line\nimport { useState } from "react";\n\nimport { IResourceComponentsProps } from "@pankod/refine-core";\nimport {\n    List,\n    Table,\n    useTable,\n    getDefaultSortOrder,\n    FilterDropdown,\n    Select,\n    useSelect,\n    DateField,\n    Space,\n    EditButton,\n    DeleteButton,\n    // highlight-start\n    Form,\n    Radio,\n    Tag,\n    // highlight-end\n} from "@pankod/refine-antd";\n\nimport { IPost } from "interfaces";\n\nimport { API_URL } from "../../constants";\n\nexport const PostList: React.FC<IResourceComponentsProps> = () => {\n    // highlight-start\n    const [publicationState, setPublicationState] = useState("live");\n    // highlight-end\n\n    const { tableProps, sorter } = useTable<IPost>({\n        metaData: {\n            fields: ["id", "title"],\n            populate: ["category"],\n            // highlight-start\n            publicationState,\n            // highlight-end\n        },\n    });\n\n    const { selectProps } = useSelect({\n        resource: "categories",\n        optionLabel: "title",\n        optionValue: "id",\n    });\n\n    return (\n        <List>\n            //highlight-start\n            <Form\n                layout="inline"\n                initialValues={{\n                    publicationState,\n                }}\n            >\n                <Form.Item label="Publication State" name="publicationState">\n                    <Radio.Group\n                        onChange={(e) => setPublicationState(e.target.value)}\n                    >\n                        <Radio.Button value="live">Published</Radio.Button>\n                        <Radio.Button value="preview">\n                            Draft and Published\n                        </Radio.Button>\n                    </Radio.Group>\n                </Form.Item>\n            </Form>\n            //highlight-end\n            <br />\n            <Table\n                {...tableProps}\n                rowKey="id"\n                pagination={{\n                    ...tableProps.pagination,\n                    showSizeChanger: true,\n                }}\n            >\n                <Table.Column\n                    dataIndex="id"\n                    title="ID"\n                    defaultSortOrder={getDefaultSortOrder("id", sorter)}\n                    sorter={{ multiple: 3 }}\n                />\n                <Table.Column\n                    dataIndex="title"\n                    title="Title"\n                    defaultSortOrder={getDefaultSortOrder("title", sorter)}\n                    sorter={{ multiple: 2 }}\n                />\n                <Table.Column\n                    dataIndex={["category", "title"]}\n                    title="Category"\n                    filterDropdown={(props) => (\n                        <FilterDropdown {...props}>\n                            <Select\n                                style={{ minWidth: 200 }}\n                                mode="multiple"\n                                placeholder="Select Category"\n                                {...selectProps}\n                            />\n                        </FilterDropdown>\n                    )}\n                />\n                //highlight-start\n                <Table.Column\n                    dataIndex="publishedAt"\n                    title="Status"\n                    render={(value) => {\n                        return (\n                            <Tag color={value ? "green" : "blue"}>\n                                {value ? "Published" : "Draft"}\n                            </Tag>\n                        );\n                    }}\n                />\n                //highlight-end\n                <Table.Column<{ id: string }>\n                    title="Actions"\n                    render={(_, record) => (\n                        <Space>\n                            <EditButton\n                                hideText\n                                size="small"\n                                recordItemId={record.id}\n                            />\n                            <DeleteButton\n                                hideText\n                                size="small"\n                                recordItemId={record.id}\n                            />\n                        </Space>\n                    )}\n                />\n            </Table>\n        </List>\n    );\n};\n')),(0,o.kt)("div",{class:"img-container"},(0,o.kt)("div",{class:"window"},(0,o.kt)("div",{class:"control red"}),(0,o.kt)("div",{class:"control orange"}),(0,o.kt)("div",{class:"control green"})),(0,o.kt)("img",{src:s.Z,alt:"publication"})),(0,o.kt)("br",null),(0,o.kt)("h3",{id:"locale"},"Locale"),(0,o.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"To fetch content for a locale, make sure it has been already ",(0,o.kt)("a",{parentName:"p",href:"https://docs.strapi.io/user-docs/latest/settings/managing-global-settings.html#configuring-internationalization-locales"},"added to Strapi in the admin panel")))),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://docs.strapi.io/developer-docs/latest/developer-resources/database-apis-reference/rest-api.html#locale"},"Refer to the Locale documentation for detailed information. \u2192")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},'const { tableProps } = useTable<IPost>({\n    metaData: {\n        locale: "de",\n    },\n});\n')),(0,o.kt)("p",null,"With the local parameter feature, we can fetch posts and categories created according to different languages."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},'import { useState } from "react";\n\nimport { IResourceComponentsProps } from "@pankod/refine-core";\nimport {\n    List,\n    Table,\n    useTable,\n    getDefaultSortOrder,\n    FilterDropdown,\n    Select,\n    useSelect,\n    Space,\n    EditButton,\n    DeleteButton,\n    Form,\n    Radio,\n    Tag,\n} from "@pankod/refine-antd";\n\nimport { IPost } from "interfaces";\n\nimport { API_URL } from "../../constants";\n\nexport const PostList: React.FC<IResourceComponentsProps> = () => {\n    //highlight-start\n    const [locale, setLocale] = useState("en");\n    //highlight-end\n    const [publicationState, setPublicationState] = useState("live");\n\n    const { tableProps, sorter } = useTable<IPost>({\n        metaData: {\n            populate: ["category", "cover"],\n            //highlight-start\n            locale,\n            //highlight-end\n            publicationState,\n        },\n    });\n\n    const { selectProps } = useSelect({\n        resource: "categories",\n        optionLabel: "title",\n        optionValue: "id",\n        //highlight-start\n        metaData: { locale },\n        //highlight-end\n    });\n\n    return (\n        <List>\n            <Form\n                layout="inline"\n                //highlight-start\n                initialValues={{\n                    locale,\n                    publicationState,\n                }}\n                //highlight-end\n            >\n                //highlight-start\n                <Form.Item label="Locale" name="locale">\n                    <Radio.Group onChange={(e) => setLocale(e.target.value)}>\n                        <Radio.Button value="en">English</Radio.Button>\n                        <Radio.Button value="de">Deutsch</Radio.Button>\n                    </Radio.Group>\n                </Form.Item>\n                //highlight-end\n                <Form.Item label="Publication State" name="publicationState">\n                    <Radio.Group\n                        onChange={(e) => setPublicationState(e.target.value)}\n                    >\n                        <Radio.Button value="live">Published</Radio.Button>\n                        <Radio.Button value="preview">\n                            Draft and Published\n                        </Radio.Button>\n                    </Radio.Group>\n                </Form.Item>\n            </Form>\n            <br />\n            <Table\n                {...tableProps}\n                rowKey="id"\n                pagination={{\n                    ...tableProps.pagination,\n                    showSizeChanger: true,\n                }}\n            >\n                <Table.Column\n                    dataIndex="id"\n                    title="ID"\n                    defaultSortOrder={getDefaultSortOrder("id", sorter)}\n                    sorter={{ multiple: 3 }}\n                />\n                <Table.Column\n                    dataIndex="title"\n                    title="Title"\n                    defaultSortOrder={getDefaultSortOrder("title", sorter)}\n                    sorter={{ multiple: 2 }}\n                />\n                <Table.Column\n                    dataIndex={["category", "title"]}\n                    title="Category"\n                    filterDropdown={(props) => (\n                        <FilterDropdown {...props}>\n                            <Select\n                                style={{ minWidth: 200 }}\n                                mode="multiple"\n                                placeholder="Select Category"\n                                {...selectProps}\n                            />\n                        </FilterDropdown>\n                    )}\n                />\n                <Table.Column\n                    dataIndex="publishedAt"\n                    title="Status"\n                    render={(value) => {\n                        return (\n                            <Tag color={value ? "green" : "blue"}>\n                                {value ? "Published" : "Draft"}\n                            </Tag>\n                        );\n                    }}\n                />\n                <Table.Column<{ id: string }>\n                    title="Actions"\n                    render={(_, record) => (\n                        <Space>\n                            <EditButton\n                                hideText\n                                size="small"\n                                recordItemId={record.id}\n                            />\n                            <DeleteButton\n                                hideText\n                                size="small"\n                                recordItemId={record.id}\n                            />\n                        </Space>\n                    )}\n                />\n            </Table>\n        </List>\n    );\n};\n')),(0,o.kt)("div",{class:"img-container"},(0,o.kt)("div",{class:"window"},(0,o.kt)("div",{class:"control red"}),(0,o.kt)("div",{class:"control orange"}),(0,o.kt)("div",{class:"control green"})),(0,o.kt)("img",{src:d.Z,alt:"locale"})),(0,o.kt)("br",null),(0,o.kt)("h2",{id:"metadata-usages"},(0,o.kt)("inlineCode",{parentName:"h2"},"metaData")," Usages"),(0,o.kt)("p",null,"When creating and editing posts you can use these API parameters in ",(0,o.kt)("inlineCode",{parentName:"p"},"metaData"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},'const { formProps, saveButtonProps, queryResult } = useForm<IPost>({\n    metaData: { publicationState: "preview" },\n});\n')),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx",metastring:'title="EditList.tsx"',title:'"EditList.tsx"'},'const { formProps, saveButtonProps, queryResult } = useForm<IPost>({\n    metaData: { populate: ["category", "cover"] },\n});\n')),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx",metastring:'title="CreateList.tsx"',title:'"CreateList.tsx"'},'const { selectProps } = useSelect({\n    metaData: { locale: "en" },\n});\n')),(0,o.kt)("h2",{id:"live-codesandbox-example"},"Live Codesandbox Example"),(0,o.kt)("p",null,"Username: ",(0,o.kt)("a",{parentName:"p",href:"mailto:demo@refine.dev"},"demo@refine.dev")),(0,o.kt)("p",null,"Password: demodemo"),(0,o.kt)("iframe",{src:"https://codesandbox.io/embed/refine-strapi-v4-example-dt5gz?autoresize=1&fontsize=14&module=%2Fsrc%2FApp.tsx&theme=dark&view=preview",style:{width:"100%",height:"80vh",border:"0px",borderRadius:"8px",overflow:"hidden"},title:"refine-strapi-v4-example",allow:"accelerometer; ambient-light-sensor; camera; encrypted-media; geolocation; gyroscope; hid; microphone; midi; payment; usb; vr; xr-spatial-tracking",sandbox:"allow-forms allow-modals allow-popups allow-presentation allow-same-origin allow-scripts"}))}v.isMDXComponent=!0},56327:function(e,t,n){t.Z=n.p+"assets/images/category-2920a958d265e3c212ede482b4f1a28d.png"},18572:function(e,t,n){t.Z=n.p+"assets/images/locale-362d4b9aa86ab19a698c4f7c83f781e3.gif"},1392:function(e,t,n){t.Z=n.p+"assets/images/publication-e94cba3277bb2048be3dcf32fa4eee7f.gif"},81733:function(e,t,n){t.Z=n.p+"assets/images/selection-1afd58e32e4208a3e3268a450a3c6c94.png"}}]);