"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[62493],{62493:e=>{e.exports=JSON.parse('{"filePath":"/home/runner/work/refine/refine/packages/core/src/index.tsx","description":"`useCan` uses the `can` as the query function for `react-query`\'s {@link https://react-query.tanstack.com/guides/queries `useQuery`}. It takes the parameters that `can` takes. It can also be configured with `queryOptions` for `useQuery`. Returns the result of `useQuery`.","displayName":"useCan","props":{"resource":{"defaultValue":null,"description":"","name":"resource","required":true,"type":{"name":"string"},"tags":{}},"action":{"defaultValue":null,"description":"","name":"action","required":true,"type":{"name":"string"},"tags":{}},"params":{"defaultValue":null,"description":"","name":"params","required":false,"type":{"name":"{ [key: string]: any; resource?: (IResourceItem & { children?: ITreeMenu[]; }); id?: BaseKey | undefined; } | undefined"},"tags":{}},"queryOptions":{"defaultValue":null,"description":"","name":"queryOptions","required":false,"type":{"name":"UseQueryOptions<CanReturnType, unknown, CanReturnType, QueryKey>"},"tags":{}}},"generatedAt":1664798491727}')}}]);