"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[18788],{3905:(e,n,t)=>{t.d(n,{Zo:()=>u,kt:()=>h});var r=t(67294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var l=r.createContext({}),d=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},u=function(e){var n=d(e.components);return r.createElement(l.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,i=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),m=d(t),h=o,c=m["".concat(l,".").concat(h)]||m[h]||p[h]||i;return t?r.createElement(c,a(a({ref:n},u),{},{components:t})):r.createElement(c,a({ref:n},u))}));function h(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var i=t.length,a=new Array(i);a[0]=m;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s.mdxType="string"==typeof e?e:o,a[1]=s;for(var d=2;d<i;d++)a[d]=t[d];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},28520:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>p,frontMatter:()=>i,metadata:()=>s,toc:()=>d});var r=t(87462),o=(t(67294),t(3905));const i={id:"antd-auth-page",title:"<AuthPage>",sidebar_label:"<AuthPage>",description:"<AuthPage> component from refine is a authentication page that can be used to login, register, reset password and update password."},a=void 0,s={unversionedId:"ui-frameworks/antd/components/antd-auth-page",id:"ui-frameworks/antd/components/antd-auth-page",title:"<AuthPage>",description:"<AuthPage> component from refine is a authentication page that can be used to login, register, reset password and update password.",source:"@site/docs/ui-frameworks/antd/components/auth-page.md",sourceDirName:"ui-frameworks/antd/components",slug:"/ui-frameworks/antd/components/antd-auth-page",permalink:"/docs/ui-frameworks/antd/components/antd-auth-page",draft:!1,editUrl:"https://github.com/pankod/refine/tree/master/documentation/docs/ui-frameworks/antd/components/auth-page.md",tags:[],version:"current",lastUpdatedBy:"Ayd\u0131n",lastUpdatedAt:1663253617,formattedLastUpdatedAt:"Sep 15, 2022",frontMatter:{id:"antd-auth-page",title:"<AuthPage>",sidebar_label:"<AuthPage>",description:"<AuthPage> component from refine is a authentication page that can be used to login, register, reset password and update password."},sidebar:"someSidebar",previous:{title:"useTable",permalink:"/docs/ui-frameworks/antd/hooks/table/useTable"},next:{title:"Create",permalink:"/docs/ui-frameworks/antd/components/basic-views/create"}},l={},d=[{value:"Usage",id:"usage",level:2},{value:"Types",id:"types",level:2},{value:"Login",id:"login",level:2},{value:"Default",id:"default",level:3},{value:"<code>registerLink</code>",id:"registerlink",level:3},{value:"<code>providers</code>",id:"providers",level:3},{value:"<code>onSubmit</code>",id:"onsubmit",level:3},{value:"<code>rememberMe</code>",id:"rememberme",level:3},{value:"<code>wrapperProps</code>",id:"wrapperprops",level:3},{value:"<code>contentProps</code>",id:"contentprops",level:3},{value:"<code>formProps</code>",id:"formprops",level:3},{value:"<code>renderContent</code>",id:"rendercontent",level:3},{value:"Register",id:"register",level:2},{value:"Default",id:"default-1",level:3},{value:"<code>loginLink</code>",id:"loginlink",level:3},{value:"<code>onSubmit</code>",id:"onsubmit-1",level:3},{value:"<code>wrapperProps</code>",id:"wrapperprops-1",level:3},{value:"<code>contentProps</code>",id:"contentprops-1",level:3},{value:"<code>formProps</code>",id:"formprops-1",level:3},{value:"<code>renderContent</code>",id:"rendercontent-1",level:3},{value:"Reset Password",id:"reset-password",level:2},{value:"Default",id:"default-2",level:3},{value:"<code>loginLink</code>",id:"loginlink-1",level:3},{value:"<code>onSubmit</code>",id:"onsubmit-2",level:3},{value:"<code>wrapperProps</code>",id:"wrapperprops-2",level:3},{value:"<code>contentProps</code>",id:"contentprops-2",level:3},{value:"<code>formProps</code>",id:"formprops-2",level:3},{value:"<code>renderContent</code>",id:"rendercontent-2",level:3},{value:"Update Password",id:"update-password",level:2},{value:"Default",id:"default-3",level:3},{value:"<code>onSubmit</code>",id:"onsubmit-3",level:3},{value:"<code>wrapperProps</code>",id:"wrapperprops-3",level:3},{value:"<code>contentProps</code>",id:"contentprops-3",level:3},{value:"<code>formProps</code>",id:"formprops-3",level:3},{value:"<code>renderContent</code>",id:"rendercontent-3",level:3},{value:"API Reference",id:"api-reference",level:2},{value:"Properties",id:"properties",level:3},{value:"Interface",id:"interface",level:3}],u={toc:d};function p(e){let{components:n,...t}=e;return(0,o.kt)("wrapper",(0,r.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"<AuthPage>")," component from ",(0,o.kt)("strong",{parentName:"p"},"refine")," for ",(0,o.kt)("strong",{parentName:"p"},"ant design")," contains authentication pages that can be used to login, register, reset password and update password."),(0,o.kt)("p",null,"Before using ",(0,o.kt)("inlineCode",{parentName:"p"},"<AuthPage>")," component you need to add ",(0,o.kt)("a",{parentName:"p",href:"/docs/core/providers/auth-provider"},"authProvider")," that will be used to handle authentication."),(0,o.kt)("h2",{id:"usage"},"Usage"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"<AuthPage>")," component can be used like below \ud83d\udc47\ud83c\udffb"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx",metastring:"live url=http://localhost:3000/login",live:!0,url:"http://localhost:3000/login"},'const { useNavigation } = RefineCore;\nconst { AuthPage } = RefineAntd;\n\nconst authProvider = {\n    login: () => Promise.resolve(),\n    register: () => Promise.resolve(),\n    resetPassword: () => Promise.resolve(),\n    updatePassword: () => Promise.resolve(),\n    logout: () => Promise.resolve(),\n    checkAuth: () => Promise.resolve(),\n    checkError: () => Promise.resolve(),\n    getPermissions: () => Promise.resolve(),\n    getUserIdentity: () => Promise.resolve(),\n};\n\n// visible-block-start\nimport { Refine, useNavigation } from "@pankod/refine-core";\nimport { AuthPage } from "@pankod/refine-antd";\n\nimport { authProvider } from "./authProvider";\n\nconst App = () => {\n    return (\n        <Refine\n            authProvider={authProvider}\n            // highlight-next-line\n            LoginPage={AuthPage}\n            resources={[\n                {\n                    name: "home",\n                    list: () => {\n                        const { replace } = useNavigation();\n\n                        return (\n                            <div>\n                                Home Page\n                                <br />\n                                <button\n                                    onClick={() => {\n                                        replace("/login");\n                                    }}\n                                >\n                                    Logout\n                                </button>\n                            </div>\n                        );\n                    },\n                },\n            ]}\n        />\n    );\n};\n// visible-block-end\nrender(\n    <RefineAntdDemo\n        routerProvider={{\n            ...RefineDemoReactRouterV6(["/login"]),\n            routes: [{ path: "/login", element: <AuthPage /> }],\n        }}\n        authProvider={authProvider}\n        resources={[\n            {\n                name: "home",\n                list: () => {\n                    const { replace } = useNavigation();\n\n                    return (\n                        <div>\n                            Home Page\n                            <br />\n                            <button\n                                onClick={() => {\n                                    replace("/login");\n                                }}\n                            >\n                                Logout\n                            </button>\n                        </div>\n                    );\n                },\n            },\n        ]}\n    />,\n);\n')),(0,o.kt)("h2",{id:"types"},"Types"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"<AuthPage>")," component has the following types:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"login")," - a type of login page and default type."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"register")," - a type of registration page."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"resetPassword")," - a type of reset password page."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"updatePassword")," - type of update password page.")),(0,o.kt)("h2",{id:"login"},"Login"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"login")," will be used as the default type of the ",(0,o.kt)("inlineCode",{parentName:"p"},"<AuthPage>")," component. The login page will be used to log in to the system."),(0,o.kt)("p",null,"You can use the following props for the ",(0,o.kt)("inlineCode",{parentName:"p"},"<AuthPage>")," component when the type is ",(0,o.kt)("inlineCode",{parentName:"p"},'"login"'),":"),(0,o.kt)("h3",{id:"default"},"Default"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx",metastring:"live url=http://localhost:3000/login",live:!0,url:"http://localhost:3000/login"},'const { useNavigation } = RefineCore;\nconst { AuthPage } = RefineAntd;\n\nconst authProvider = {\n    login: () => Promise.resolve(),\n    register: () => Promise.resolve(),\n    resetPassword: () => Promise.resolve(),\n    updatePassword: () => Promise.resolve(),\n    logout: () => Promise.resolve(),\n    checkAuth: () => Promise.resolve(),\n    checkError: () => Promise.resolve(),\n    getPermissions: () => Promise.resolve(),\n    getUserIdentity: () => Promise.resolve(),\n};\n\n// visible-block-start\nimport { Refine, useNavigation } from "@pankod/refine-core";\nimport { AuthPage } from "@pankod/refine-antd";\n\nimport { authProvider } from "./authProvider";\n\nconst App = () => {\n    return (\n        <Refine\n            authProvider={authProvider}\n            // highlight-next-line\n            LoginPage={AuthPage}\n            resources={[\n                {\n                    name: "home",\n                    list: () => {\n                        const { replace } = useNavigation();\n\n                        return (\n                            <div>\n                                Home Page\n                                <br />\n                                <button\n                                    onClick={() => {\n                                        replace("/login");\n                                    }}\n                                >\n                                    Logout\n                                </button>\n                            </div>\n                        );\n                    },\n                },\n            ]}\n        />\n    );\n};\n// visible-block-end\nrender(\n    <RefineAntdDemo\n        routerProvider={{\n            ...RefineDemoReactRouterV6(["/login"]),\n            routes: [{ path: "/login", element: <AuthPage /> }],\n        }}\n        authProvider={authProvider}\n        resources={[\n            {\n                name: "home",\n                list: () => {\n                    const { replace } = useNavigation();\n\n                    return (\n                        <div>\n                            Home Page\n                            <br />\n                            <button\n                                onClick={() => {\n                                    replace("/login");\n                                }}\n                            >\n                                Logout\n                            </button>\n                        </div>\n                    );\n                },\n            },\n        ]}\n    />,\n);\n')),(0,o.kt)("h3",{id:"registerlink"},(0,o.kt)("inlineCode",{parentName:"h3"},"registerLink")),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"registerLink")," property defines the link to the registration page and also you can give a node to render. Default value is ",(0,o.kt)("inlineCode",{parentName:"p"},'"/register"'),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx",metastring:"live previewHeight=500px hideCode url=http://localhost:3000/login",live:!0,previewHeight:"500px",hideCode:!0,url:"http://localhost:3000/login"},'const { AuthPage } = RefineAntd;\nconst { useRouterContext, useNavigation } = RefineCore;\n\nconst authProvider = {\n    login: () => Promise.resolve(),\n    register: () => Promise.resolve(),\n    resetPassword: () => Promise.resolve(),\n    updatePassword: () => Promise.resolve(),\n    logout: () => Promise.resolve(),\n    checkAuth: () => Promise.resolve(),\n    checkError: () => Promise.resolve(),\n    getPermissions: () => Promise.resolve(),\n    getUserIdentity: () => Promise.resolve(),\n};\n\n// visible-block-start\nimport { Refine, useRouterContext, useNavigation } from "@pankod/refine-core";\nimport { AuthPage } from "@pankod/refine-antd";\nimport routerProvider from "@pankod/refine-react-router-v6";\n\nimport { authProvider } from "./authProvider";\n\nconst Auth = (props) => {\n    const { Link } = useRouterContext();\n\n    return (\n        <AuthPage\n            {...props}\n            // highlight-start\n            registerLink={\n                <div\n                    style={{\n                        border: "1px dashed cornflowerblue",\n                        marginTop: 5,\n                    }}\n                >\n                    <Link to="/register">Register</Link>\n                </div>\n            }\n            // highlight-end\n        />\n    );\n};\n\nconst App = () => {\n    return (\n        <Refine\n            authProvider={authProvider}\n            routerProvider={{\n                ...routerProvider,\n                routes: [\n                    {\n                        path: "/register",\n                        element: <Auth type="register" />,\n                    },\n                ],\n            }}\n            resources={[\n                {\n                    name: "home",\n                    list: () => {\n                        const { replace } = useNavigation();\n\n                        return (\n                            <div>\n                                Home Page\n                                <button\n                                    onClick={() => {\n                                        replace("/login");\n                                    }}\n                                >\n                                    Logout\n                                </button>\n                            </div>\n                        );\n                    },\n                },\n            ]}\n            LoginPage={Auth}\n        />\n    );\n};\n// visible-block-end\nrender(\n    <RefineAntdDemo\n        routerProvider={{\n            ...RefineDemoReactRouterV6(["/login"]),\n            routes: [\n                {\n                    path: "/login",\n                    element: <Auth type="login" />,\n                },\n                {\n                    path: "/register",\n                    element: <Auth type="register" />,\n                },\n            ],\n        }}\n        authProvider={authProvider}\n        resources={[\n            {\n                name: "home",\n                list: () => {\n                    const { replace } = useNavigation();\n\n                    return (\n                        <div>\n                            Home Page\n                            <button\n                                onClick={() => {\n                                    replace("/login");\n                                }}\n                            >\n                                Logout\n                            </button>\n                        </div>\n                    );\n                },\n            },\n        ]}\n    />,\n);\n')),(0,o.kt)("h3",{id:"providers"},(0,o.kt)("inlineCode",{parentName:"h3"},"providers")),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"providers")," property defines the list of providers used to handle login authentication."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx",metastring:"live previewHeight=500px hideCode url=http://localhost:3000/login",live:!0,previewHeight:"500px",hideCode:!0,url:"http://localhost:3000/login"},'const { AuthPage } = RefineAntd;\nconst { useRouterContext, useNavigation } = RefineCore;\n\nconst authProvider = {\n    login: () => Promise.resolve(),\n    register: () => Promise.resolve(),\n    resetPassword: () => Promise.resolve(),\n    updatePassword: () => Promise.resolve(),\n    logout: () => Promise.resolve(),\n    checkAuth: () => Promise.resolve(),\n    checkError: () => Promise.resolve(),\n    getPermissions: () => Promise.resolve(),\n    getUserIdentity: () => Promise.resolve(),\n};\n\n// visible-block-start\nimport { Refine, useRouterContext, useNavigation } from "@pankod/refine-core";\nimport { AuthPage } from "@pankod/refine-antd";\nimport routerProvider from "@pankod/refine-react-router-v6";\nimport { GoogleOutlined, GithubOutlined } from "@ant-design/icons";\n\nimport { authProvider } from "./authProvider";\n\nconst App = () => {\n    return (\n        <Refine\n            authProvider={authProvider}\n            resources={[\n                {\n                    name: "home",\n                    list: () => {\n                        const { replace } = useNavigation();\n\n                        return (\n                            <div>\n                                Home Page\n                                <button\n                                    onClick={() => {\n                                        replace("/login");\n                                    }}\n                                >\n                                    Logout\n                                </button>\n                            </div>\n                        );\n                    },\n                },\n            ]}\n            // highlight-start\n            LoginPage={() => (\n                <AuthPage\n                    providers={[\n                        {\n                            name: "google",\n                            label: "Sign in with Google",\n                        },\n                        {\n                            name: "github",\n                            label: "Sign in with GitHub",\n                        },\n                    ]}\n                />\n            )}\n            // highlight-end\n        />\n    );\n};\n// visible-block-end\nrender(\n    <RefineAntdDemo\n        routerProvider={{\n            ...RefineDemoReactRouterV6(["/login"]),\n            routes: [\n                {\n                    path: "/login",\n                    element: (\n                        <AuthPage\n                            providers={[\n                                {\n                                    name: "google",\n                                    label: "Sign in with Google",\n                                },\n                                {\n                                    name: "github",\n                                    label: "Sign in with GitHub",\n                                },\n                            ]}\n                        />\n                    ),\n                },\n            ],\n        }}\n        authProvider={authProvider}\n        resources={[\n            {\n                name: "home",\n                list: () => {\n                    const { replace } = useNavigation();\n\n                    return (\n                        <div>\n                            Home Page\n                            <button\n                                onClick={() => {\n                                    replace("/login");\n                                }}\n                            >\n                                Logout\n                            </button>\n                        </div>\n                    );\n                },\n            },\n        ]}\n    />,\n);\n')),(0,o.kt)("h3",{id:"onsubmit"},(0,o.kt)("inlineCode",{parentName:"h3"},"onSubmit")),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"onSubmit")," is a function that will be triggered after submitting the form and verifying data successfully."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx",metastring:"live previewHeight=500px hideCode url=http://localhost:3000/login",live:!0,previewHeight:"500px",hideCode:!0,url:"http://localhost:3000/login"},'const { useNavigation } = RefineCore;\nconst { AuthPage } = RefineAntd;\n\nconst authProvider = {\n    login: () => Promise.resolve(),\n    register: () => Promise.resolve(),\n    resetPassword: () => Promise.resolve(),\n    updatePassword: () => Promise.resolve(),\n    logout: () => Promise.resolve(),\n    checkAuth: () => Promise.resolve(),\n    checkError: () => Promise.resolve(),\n    getPermissions: () => Promise.resolve(),\n    getUserIdentity: () => Promise.resolve(),\n};\n\n// visible-block-start\nimport { Refine, useNavigation } from "@pankod/refine-core";\nimport { AuthPage } from "@pankod/refine-antd";\n\nimport { authProvider } from "./authProvider";\n\nconst App = () => {\n    return (\n        <Refine\n            authProvider={authProvider}\n            LoginPage={() => (\n                <AuthPage\n                    // highlight-start\n                    onSubmit={(formValues) =>\n                        alert(JSON.stringify(formValues, null, 2))\n                    }\n                    // highlight-end\n                />\n            )}\n            resources={[\n                {\n                    name: "posts",\n                    list: () => {\n                        const { replace } = useNavigation();\n\n                        return (\n                            <div>\n                                Home Page\n                                <button\n                                    onClick={() => {\n                                        replace("/login");\n                                    }}\n                                >\n                                    Logout\n                                </button>\n                            </div>\n                        );\n                    },\n                },\n            ]}\n        />\n    );\n};\n// visible-block-end\nrender(\n    <RefineAntdDemo\n        routerProvider={{\n            ...RefineDemoReactRouterV6(["/login"]),\n            routes: [\n                {\n                    path: "/login",\n                    element: (\n                        <AuthPage\n                            onSubmit={(formValues) =>\n                                alert(JSON.stringify(formValues, null, 2))\n                            }\n                        />\n                    ),\n                },\n            ],\n        }}\n        authProvider={authProvider}\n        resources={[\n            {\n                name: "posts",\n                list: () => {\n                    const { replace } = useNavigation();\n\n                    return (\n                        <div>\n                            Home Page\n                            <button\n                                onClick={() => {\n                                    replace("/login");\n                                }}\n                            >\n                                Logout\n                            </button>\n                        </div>\n                    );\n                },\n            },\n        ]}\n    />,\n);\n')),(0,o.kt)("h3",{id:"rememberme"},(0,o.kt)("inlineCode",{parentName:"h3"},"rememberMe")),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"rememberMe")," property defines to render your own remember me component or you can pass ",(0,o.kt)("inlineCode",{parentName:"p"},"false")," to don't render it."),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("p",{parentName:"admonition"},"You have to wrap your remember me component with ",(0,o.kt)("inlineCode",{parentName:"p"},"Form.Item")," component from ",(0,o.kt)("strong",{parentName:"p"},"antd")," and pass the ",(0,o.kt)("inlineCode",{parentName:"p"},"name")," prop to it then you can access its value from the ",(0,o.kt)("inlineCode",{parentName:"p"},"onSubmit")," function with ",(0,o.kt)("inlineCode",{parentName:"p"},"formValues"),".")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx",metastring:"live previewHeight=500px hideCode url=http://localhost:3000/login",live:!0,previewHeight:"500px",hideCode:!0,url:"http://localhost:3000/login"},'const { AuthPage, Form, Checkbox } = RefineAntd;\nconst { useNavigation } = RefineCore;\n\nconst authProvider = {\n    login: () => Promise.resolve(),\n    register: () => Promise.resolve(),\n    resetPassword: () => Promise.resolve(),\n    updatePassword: () => Promise.resolve(),\n    logout: () => Promise.resolve(),\n    checkAuth: () => Promise.resolve(),\n    checkError: () => Promise.resolve(),\n    getPermissions: () => Promise.resolve(),\n    getUserIdentity: () => Promise.resolve(),\n};\n\n// visible-block-start\n\nimport { Refine, useNavigation } from "@pankod/refine-core";\nimport { AuthPage, Form, Checkbox } from "@pankod/refine-antd";\n\nimport { authProvider } from "./authProvider";\n\nconst App = () => {\n    return (\n        <Refine\n            authProvider={authProvider}\n            // highlight-start\n            LoginPage={\n                <AuthPage\n                    rememberMe={\n                        <div\n                            style={{\n                                border: "1px dashed cornflowerblue",\n                                padding: 3,\n                            }}\n                        >\n                            <Form.Item\n                                name="remember"\n                                valuePropName="checked"\n                                noStyle\n                            >\n                                <Checkbox>Custom remember me</Checkbox>\n                            </Form.Item>\n                        </div>\n                    }\n                />\n            }\n            // highlight-end\n            resources={[\n                {\n                    name: "home",\n                    list: () => {\n                        const { replace } = useNavigation();\n\n                        return (\n                            <div>\n                                Home Page\n                                <button\n                                    onClick={() => {\n                                        replace("/login");\n                                    }}\n                                >\n                                    Logout\n                                </button>\n                            </div>\n                        );\n                    },\n                },\n            ]}\n        />\n    );\n};\n// visible-block-end\nrender(\n    <RefineAntdDemo\n        routerProvider={{\n            ...RefineDemoReactRouterV6(["/login"]),\n            routes: [\n                {\n                    path: "/login",\n                    element: (\n                        <AuthPage\n                            rememberMe={\n                                <div\n                                    style={{\n                                        border: "1px dashed cornflowerblue",\n                                        padding: 3,\n                                    }}\n                                >\n                                    <Form.Item\n                                        name="remember"\n                                        valuePropName="checked"\n                                        noStyle\n                                    >\n                                        <Checkbox>Custom remember me</Checkbox>\n                                    </Form.Item>\n                                </div>\n                            }\n                        />\n                    ),\n                },\n            ],\n        }}\n        authProvider={authProvider}\n        resources={[\n            {\n                name: "home",\n                list: () => {\n                    const { replace } = useNavigation();\n\n                    return (\n                        <div>\n                            Home Page\n                            <button\n                                onClick={() => {\n                                    replace("/login");\n                                }}\n                            >\n                                Logout\n                            </button>\n                        </div>\n                    );\n                },\n            },\n        ]}\n    />,\n);\n')),(0,o.kt)("h3",{id:"wrapperprops"},(0,o.kt)("inlineCode",{parentName:"h3"},"wrapperProps")),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"wrapperProps")," uses for passing props to the wrapper component. In the example below you can see that the background color is changed with ",(0,o.kt)("inlineCode",{parentName:"p"},"wrapperProps")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx",metastring:"live previewHeight=500px hideCode url=http://localhost:3000/login",live:!0,previewHeight:"500px",hideCode:!0,url:"http://localhost:3000/login"},'const { AuthPage } = RefineAntd;\nconst { useNavigation } = RefineCore;\n\nconst authProvider = {\n    login: () => Promise.resolve(),\n    register: () => Promise.resolve(),\n    resetPassword: () => Promise.resolve(),\n    updatePassword: () => Promise.resolve(),\n    logout: () => Promise.resolve(),\n    checkAuth: () => Promise.resolve(),\n    checkError: () => Promise.resolve(),\n    getPermissions: () => Promise.resolve(),\n    getUserIdentity: () => Promise.resolve(),\n};\n\n// visible-block-start\nimport { Refine, useNavigation } from "@pankod/refine-core";\nimport { AuthPage } from "@pankod/refine-antd";\nimport routerProvider from "@pankod/refine-react-router-v6";\n\nimport { authProvider } from "./authProvider";\n\nconst App = () => {\n    return (\n        <Refine\n            authProvider={authProvider}\n            LoginPage={() => (\n                <AuthPage\n                    // highlight-start\n                    wrapperProps={{\n                        style: {\n                            background: "#331049",\n                        },\n                    }}\n                    // highlight-end\n                />\n            )}\n            resources={[\n                {\n                    name: "home",\n                    list: () => {\n                        const { replace } = useNavigation();\n\n                        return (\n                            <div>\n                                Home Page\n                                <button\n                                    onClick={() => {\n                                        replace("/login");\n                                    }}\n                                >\n                                    Logout\n                                </button>\n                            </div>\n                        );\n                    },\n                },\n            ]}\n        />\n    );\n};\n// visible-block-end\nrender(\n    <RefineAntdDemo\n        routerProvider={{\n            ...RefineDemoReactRouterV6(["/login"]),\n            routes: [\n                {\n                    path: "/login",\n                    element: (\n                        <AuthPage\n                            wrapperProps={{\n                                style: {\n                                    background: "#331049",\n                                },\n                            }}\n                        />\n                    ),\n                },\n            ],\n        }}\n        authProvider={authProvider}\n        resources={[\n            {\n                name: "home",\n                list: () => {\n                    const { replace } = useNavigation();\n\n                    return (\n                        <div>\n                            Home Page\n                            <button\n                                onClick={() => {\n                                    replace("/login");\n                                }}\n                            >\n                                Logout\n                            </button>\n                        </div>\n                    );\n                },\n            },\n        ]}\n    />,\n);\n')),(0,o.kt)("h3",{id:"contentprops"},(0,o.kt)("inlineCode",{parentName:"h3"},"contentProps")),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"contentProps")," uses for passing props to the content component which is the card component. In the example below you can see that the title, header and content styles are changed with ",(0,o.kt)("inlineCode",{parentName:"p"},"contentProps"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx",metastring:"live previewHeight=500px hideCode url=http://localhost:3000/login",live:!0,previewHeight:"500px",hideCode:!0,url:"http://localhost:3000/login"},'const { AuthPage } = RefineAntd;\nconst { useNavigation } = RefineCore;\n\nconst authProvider = {\n    login: () => Promise.resolve(),\n    register: () => Promise.resolve(),\n    resetPassword: () => Promise.resolve(),\n    updatePassword: () => Promise.resolve(),\n    logout: () => Promise.resolve(),\n    checkAuth: () => Promise.resolve(),\n    checkError: () => Promise.resolve(),\n    getPermissions: () => Promise.resolve(),\n    getUserIdentity: () => Promise.resolve(),\n};\n\n// visible-block-start\nimport { Refine, useNavigation } from "@pankod/refine-core";\nimport { AuthPage } from "@pankod/refine-antd";\nimport routerProvider from "@pankod/refine-react-router-v6";\n\nimport { authProvider } from "./authProvider";\n\nconst App = () => {\n    return (\n        <Refine\n            authProvider={authProvider}\n            LoginPage={() => (\n                <AuthPage\n                    // highlight-start\n                    contentProps={{\n                        title: "Login",\n                        headStyle: {\n                            background: "cornflowerblue",\n                            color: "white",\n                        },\n                        bodyStyle: {\n                            background: "#673ab742",\n                        },\n                    }}\n                    // highlight-end\n                />\n            )}\n            resources={[\n                {\n                    name: "home",\n                    list: () => {\n                        const { replace } = useNavigation();\n\n                        return (\n                            <div>\n                                Home Page\n                                <button\n                                    onClick={() => {\n                                        replace("/login");\n                                    }}\n                                >\n                                    Logout\n                                </button>\n                            </div>\n                        );\n                    },\n                },\n            ]}\n        />\n    );\n};\n// visible-block-end\nrender(\n    <RefineAntdDemo\n        routerProvider={{\n            ...RefineDemoReactRouterV6(["/login"]),\n            routes: [\n                {\n                    path: "/login",\n                    element: (\n                        <AuthPage\n                            contentProps={{\n                                title: "Login",\n                                headStyle: {\n                                    background: "cornflowerblue",\n                                    color: "white",\n                                },\n                                bodyStyle: {\n                                    background: "#673ab742",\n                                },\n                            }}\n                        />\n                    ),\n                },\n            ],\n        }}\n        authProvider={authProvider}\n        resources={[\n            {\n                name: "home",\n                list: () => {\n                    const { replace } = useNavigation();\n\n                    return (\n                        <div>\n                            Home Page\n                            <button\n                                onClick={() => {\n                                    replace("/login");\n                                }}\n                            >\n                                Logout\n                            </button>\n                        </div>\n                    );\n                },\n            },\n        ]}\n    />,\n);\n')),(0,o.kt)("h3",{id:"formprops"},(0,o.kt)("inlineCode",{parentName:"h3"},"formProps")),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"formProps")," uses for passing props to the form component. In the example below you can see that the ",(0,o.kt)("inlineCode",{parentName:"p"},"initialValues")," are changed with ",(0,o.kt)("inlineCode",{parentName:"p"},"formProps"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx",metastring:"live previewHeight=500px hideCode url=http://localhost:3000/login",live:!0,previewHeight:"500px",hideCode:!0,url:"http://localhost:3000/login"},'const { AuthPage } = RefineAntd;\nconst { useNavigation } = RefineCore;\n\nconst authProvider = {\n    login: () => Promise.resolve(),\n    register: () => Promise.resolve(),\n    resetPassword: () => Promise.resolve(),\n    updatePassword: () => Promise.resolve(),\n    logout: () => Promise.resolve(),\n    checkAuth: () => Promise.resolve(),\n    checkError: () => Promise.resolve(),\n    getPermissions: () => Promise.resolve(),\n    getUserIdentity: () => Promise.resolve(),\n};\n\n// visible-block-start\nimport { Refine, useNavigation } from "@pankod/refine-core";\nimport { AuthPage } from "@pankod/refine-antd";\nimport routerProvider from "@pankod/refine-react-router-v6";\n\nimport { authProvider } from "./authProvider";\n\nconst App = () => {\n    return (\n        <Refine\n            authProvider={authProvider}\n            LoginPage={() => (\n                <AuthPage\n                    // highlight-start\n                    formProps={{\n                        initialValues: {\n                            email: "demo@refine.dev",\n                            password: "demo",\n                        },\n                    }}\n                    // highlight-end\n                />\n            )}\n            resources={[\n                {\n                    name: "home",\n                    list: () => {\n                        const { replace } = useNavigation();\n\n                        return (\n                            <div>\n                                Home Page\n                                <button\n                                    onClick={() => {\n                                        replace("/login");\n                                    }}\n                                >\n                                    Logout\n                                </button>\n                            </div>\n                        );\n                    },\n                },\n            ]}\n        />\n    );\n};\n// visible-block-end\nrender(\n    <RefineAntdDemo\n        routerProvider={{\n            ...RefineDemoReactRouterV6(["/login"]),\n            routes: [\n                {\n                    path: "/login",\n                    element: (\n                        <AuthPage\n                            formProps={{\n                                initialValues: {\n                                    email: "demo@refine.dev",\n                                    password: "demo",\n                                },\n                            }}\n                        />\n                    ),\n                },\n            ],\n        }}\n        authProvider={authProvider}\n        resources={[\n            {\n                name: "home",\n                list: () => {\n                    const { replace } = useNavigation();\n\n                    return (\n                        <div>\n                            Home Page\n                            <button\n                                onClick={() => {\n                                    replace("/login");\n                                }}\n                            >\n                                Logout\n                            </button>\n                        </div>\n                    );\n                },\n            },\n        ]}\n    />,\n);\n')),(0,o.kt)("h3",{id:"rendercontent"},(0,o.kt)("inlineCode",{parentName:"h3"},"renderContent")),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"renderContent")," uses to render the form content. You can use this property to render your own content or ",(0,o.kt)("inlineCode",{parentName:"p"},"renderContent")," gives you default content you can use to add some extra elements to the content."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx",metastring:"live previewHeight=500px hideCode url=http://localhost:3000/login",live:!0,previewHeight:"500px",hideCode:!0,url:"http://localhost:3000/login"},'const { AuthPage } = RefineAntd;\nconst { useRouterContext, useNavigation } = RefineCore;\n\nconst authProvider = {\n    login: () => Promise.resolve(),\n    register: () => Promise.resolve(),\n    resetPassword: () => Promise.resolve(),\n    updatePassword: () => Promise.resolve(),\n    logout: () => Promise.resolve(),\n    checkAuth: () => Promise.resolve(),\n    checkError: () => Promise.resolve(),\n    getPermissions: () => Promise.resolve(),\n    getUserIdentity: () => Promise.resolve(),\n};\n\n// visible-block-start\nimport { Refine, useRouterContext } from "@pankod/refine-core";\nimport { AuthPage } from "@pankod/refine-antd";\n\nimport { authProvider } from "./authProvider";\n\nconst App = () => {\n    return (\n        <Refine\n            authProvider={authProvider}\n            // highlight-start\n            LoginPage={() => (\n                <AuthPage\n                    contentProps={{\n                        style: {\n                            width: "400px",\n                        },\n                    }}\n                    renderContent={(content: React.ReactNode) => {\n                        return (\n                            <div\n                                style={{\n                                    display: "flex",\n                                    flexDirection: "column",\n                                    justifyContent: "center",\n                                    alignItems: "center",\n                                }}\n                            >\n                                <h1>Extra Header</h1>\n                                {content}\n                                <h1>Extra Footer</h1>\n                            </div>\n                        );\n                    }}\n                />\n            )}\n            // highlight-end\n            resources={[\n                {\n                    name: "home",\n                    list: () => {\n                        const { replace } = useNavigation();\n\n                        return (\n                            <div>\n                                Home Page\n                                <button\n                                    onClick={() => {\n                                        replace("/login");\n                                    }}\n                                >\n                                    Logout\n                                </button>\n                            </div>\n                        );\n                    },\n                },\n            ]}\n        />\n    );\n};\n// visible-block-end\nrender(\n    <RefineAntdDemo\n        routerProvider={{\n            ...RefineDemoReactRouterV6(["/login"]),\n            routes: [\n                {\n                    path: "/login",\n                    element: (\n                        <AuthPage\n                            contentProps={{\n                                style: {\n                                    width: "400px",\n                                },\n                            }}\n                            renderContent={(content: React.ReactNode) => {\n                                return (\n                                    <div\n                                        style={{\n                                            display: "flex",\n                                            flexDirection: "column",\n                                            justifyContent: "center",\n                                            alignItems: "center",\n                                            width: "100%",\n                                        }}\n                                    >\n                                        <h1>Extra Header</h1>\n                                        {content}\n                                        <h1>Extra Footer</h1>\n                                    </div>\n                                );\n                            }}\n                        />\n                    ),\n                },\n            ],\n        }}\n        authProvider={authProvider}\n        resources={[\n            {\n                name: "home",\n                list: () => {\n                    const { replace } = useNavigation();\n\n                    return (\n                        <div>\n                            Home Page\n                            <button\n                                onClick={() => {\n                                    replace("/login");\n                                }}\n                            >\n                                Logout\n                            </button>\n                        </div>\n                    );\n                },\n            },\n        ]}\n    />,\n);\n')),(0,o.kt)("h2",{id:"register"},"Register"),(0,o.kt)("p",null,"The register page will be used to register new users. You can use the following props for the ",(0,o.kt)("inlineCode",{parentName:"p"},"<AuthPage>")," component when the type is ",(0,o.kt)("inlineCode",{parentName:"p"},'"register"'),":"),(0,o.kt)("h3",{id:"default-1"},"Default"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx",metastring:"live url=http://localhost:3000/register",live:!0,url:"http://localhost:3000/register"},'const { useNavigation } = RefineCore;\nconst { AuthPage } = RefineAntd;\n\nconst authProvider = {\n    login: () => Promise.resolve(),\n    register: () => Promise.resolve(),\n    resetPassword: () => Promise.resolve(),\n    updatePassword: () => Promise.resolve(),\n    logout: () => Promise.resolve(),\n    checkAuth: () => Promise.resolve(),\n    checkError: () => Promise.resolve(),\n    getPermissions: () => Promise.resolve(),\n    getUserIdentity: () => Promise.resolve(),\n};\n\n// visible-block-start\nimport { Refine, useNavigation } from "@pankod/refine-core";\nimport { AuthPage } from "@pankod/refine-antd";\nimport routerProvider from "@pankod/refine-react-router-v6";\n\nimport { authProvider } from "./authProvider";\n\nconst App = () => {\n    return (\n        <Refine\n            authProvider={authProvider}\n            routerProvider={{\n                ...routerProvider,\n                routes: [\n                    {\n                        path: "/register",\n                        element: <Auth type="register" />,\n                    },\n                ],\n            }}\n            LoginPage={AuthPage}\n            resources={[\n                {\n                    name: "home",\n                    list: () => {\n                        const { replace } = useNavigation();\n\n                        return (\n                            <div>\n                                Home Page\n                                <br />\n                                <button\n                                    onClick={() => {\n                                        replace("/login");\n                                    }}\n                                >\n                                    Logout\n                                </button>\n                            </div>\n                        );\n                    },\n                },\n            ]}\n        />\n    );\n};\n// visible-block-end\nrender(\n    <RefineAntdDemo\n        routerProvider={{\n            ...RefineDemoReactRouterV6(["/register"]),\n            routes: [\n                { path: "/login", element: <AuthPage /> },\n                { path: "/register", element: <AuthPage type="register" /> },\n            ],\n        }}\n        authProvider={authProvider}\n        resources={[\n            {\n                name: "home",\n                list: () => {\n                    const { replace } = useNavigation();\n\n                    return (\n                        <div>\n                            Home Page\n                            <br />\n                            <button\n                                onClick={() => {\n                                    replace("/login");\n                                }}\n                            >\n                                Logout\n                            </button>\n                        </div>\n                    );\n                },\n            },\n        ]}\n    />,\n);\n')),(0,o.kt)("h3",{id:"loginlink"},(0,o.kt)("inlineCode",{parentName:"h3"},"loginLink")),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"loginLink")," property defines the link to the login page and also you can give a node to render. Default value is ",(0,o.kt)("inlineCode",{parentName:"p"},'"/login"'),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx",metastring:"live previewHeight=500px hideCode url=http://localhost:3000/register",live:!0,previewHeight:"500px",hideCode:!0,url:"http://localhost:3000/register"},'const { AuthPage } = RefineAntd;\nconst { useRouterContext, useNavigation } = RefineCore;\n\nconst authProvider = {\n    login: () => Promise.resolve(),\n    register: () => Promise.resolve(),\n    resetPassword: () => Promise.resolve(),\n    updatePassword: () => Promise.resolve(),\n    logout: () => Promise.resolve(),\n    checkAuth: () => Promise.resolve(),\n    checkError: () => Promise.resolve(),\n    getPermissions: () => Promise.resolve(),\n    getUserIdentity: () => Promise.resolve(),\n};\n\n// visible-block-start\nimport { Refine, useRouterContext, useNavigation } from "@pankod/refine-core";\nimport { AuthPage } from "@pankod/refine-antd";\nimport routerProvider from "@pankod/refine-react-router-v6";\n\nimport { authProvider } from "./authProvider";\n\nconst Auth = (props) => {\n    const { Link } = useRouterContext();\n\n    return (\n        <AuthPage\n            {...props}\n            // highlight-start\n            loginLink={\n                <div\n                    style={{\n                        border: "1px dashed cornflowerblue",\n                        padding: 3,\n                    }}\n                >\n                    <Link to="/login">Login</Link>\n                </div>\n            }\n            // highlight-end\n        />\n    );\n};\n\nconst App = () => {\n    return (\n        <Refine\n            authProvider={authProvider}\n            // highlight-start\n            routerProvider={{\n                ...routerProvider,\n                routes: [\n                    {\n                        path: "/register",\n                        element: <Auth type="register" />,\n                    },\n                ],\n            }}\n            // highlight-end\n            LoginPage={Auth}\n            resources={[\n                {\n                    name: "home",\n                    list: () => {\n                        const { replace } = useNavigation();\n\n                        return (\n                            <div>\n                                Home Page\n                                <button\n                                    onClick={() => {\n                                        replace("/login");\n                                    }}\n                                >\n                                    Logout\n                                </button>\n                            </div>\n                        );\n                    },\n                },\n            ]}\n        />\n    );\n};\n// visible-block-end\nrender(\n    <RefineAntdDemo\n        routerProvider={{\n            ...RefineDemoReactRouterV6(["/register"]),\n            routes: [\n                {\n                    path: "/login",\n                    element: <Auth />,\n                },\n                {\n                    path: "/register",\n                    element: <Auth type="register" />,\n                },\n            ],\n        }}\n        authProvider={authProvider}\n        resources={[\n            {\n                name: "home",\n                list: () => {\n                    const { replace } = useNavigation();\n\n                    return (\n                        <div>\n                            Home Page\n                            <button\n                                onClick={() => {\n                                    replace("/login");\n                                }}\n                            >\n                                Logout\n                            </button>\n                        </div>\n                    );\n                },\n            },\n        ]}\n    />,\n);\n')),(0,o.kt)("h3",{id:"onsubmit-1"},(0,o.kt)("inlineCode",{parentName:"h3"},"onSubmit")),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"onSubmit")," is a function that will be triggered after submitting the form and verifying data successfully."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx",metastring:"live previewHeight=500px hideCode url=http://localhost:3000/register",live:!0,previewHeight:"500px",hideCode:!0,url:"http://localhost:3000/register"},'const { AuthPage } = RefineAntd;\nconst { useNavigation } = RefineCore;\n\nconst authProvider = {\n    login: () => Promise.resolve(),\n    register: () => Promise.resolve(),\n    resetPassword: () => Promise.resolve(),\n    updatePassword: () => Promise.resolve(),\n    logout: () => Promise.resolve(),\n    checkAuth: () => Promise.resolve(),\n    checkError: () => Promise.resolve(),\n    getPermissions: () => Promise.resolve(),\n    getUserIdentity: () => Promise.resolve(),\n};\n\n// visible-block-start\nimport { Refine, useNavigation } from "@pankod/refine-core";\nimport { AuthPage } from "@pankod/refine-antd";\nimport routerProvider from "@pankod/refine-react-router-v6";\n\nimport { authProvider } from "./authProvider";\n\nconst App = () => {\n    return (\n        <Refine\n            authProvider={authProvider}\n            routerProvider={{\n                ...routerProvider,\n                routes: [\n                    {\n                        path: "/register",\n                        element: (\n                            <Auth\n                                type="register"\n                                // highlight-start\n                                onSubmit={(formValues) =>\n                                    alert(JSON.stringify(formValues, null, 2))\n                                }\n                                // highlight-end\n                                loginLink={false}\n                            />\n                        ),\n                    },\n                ],\n            }}\n            resources={[\n                {\n                    name: "home",\n                    list: () => {\n                        const { replace } = useNavigation();\n\n                        return (\n                            <div>\n                                Home Page\n                                <button\n                                    onClick={() => {\n                                        replace("/login");\n                                    }}\n                                >\n                                    Logout\n                                </button>\n                            </div>\n                        );\n                    },\n                },\n            ]}\n        />\n    );\n};\n// visible-block-end\nrender(\n    <RefineAntdDemo\n        routerProvider={{\n            ...RefineDemoReactRouterV6(["/register"]),\n            routes: [\n                {\n                    path: "/register",\n                    element: (\n                        <AuthPage\n                            type="register"\n                            onSubmit={(formValues) =>\n                                alert(JSON.stringify(formValues, null, 2))\n                            }\n                            loginLink={false}\n                        />\n                    ),\n                },\n            ],\n        }}\n        authProvider={authProvider}\n        resources={[\n            {\n                name: "home",\n                list: () => {\n                    const { replace } = useNavigation();\n\n                    return (\n                        <div>\n                            Home Page\n                            <button\n                                onClick={() => {\n                                    replace("/login");\n                                }}\n                            >\n                                Logout\n                            </button>\n                        </div>\n                    );\n                },\n            },\n        ]}\n    />,\n);\n')),(0,o.kt)("h3",{id:"wrapperprops-1"},(0,o.kt)("inlineCode",{parentName:"h3"},"wrapperProps")),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"wrapperProps")," uses for passing props to the wrapper component. In the example below you can see that the background color is changed with ",(0,o.kt)("inlineCode",{parentName:"p"},"wrapperProps")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx",metastring:"live previewHeight=500px hideCode url=http://localhost:3000/register",live:!0,previewHeight:"500px",hideCode:!0,url:"http://localhost:3000/register"},'const { AuthPage } = RefineAntd;\nconst { useNavigation } = RefineCore;\n\nconst authProvider = {\n    login: () => Promise.resolve(),\n    register: () => Promise.resolve(),\n    resetPassword: () => Promise.resolve(),\n    updatePassword: () => Promise.resolve(),\n    logout: () => Promise.resolve(),\n    checkAuth: () => Promise.resolve(),\n    checkError: () => Promise.resolve(),\n    getPermissions: () => Promise.resolve(),\n    getUserIdentity: () => Promise.resolve(),\n};\n\n// visible-block-start\nimport { Refine, useNavigation } from "@pankod/refine-core";\nimport { AuthPage } from "@pankod/refine-antd";\nimport routerProvider from "@pankod/refine-react-router-v6";\n\nimport { authProvider } from "./authProvider";\n\nconst App = () => {\n    return (\n        <Refine\n            authProvider={authProvider}\n            routerProvider={{\n                ...routerProvider,\n                routes: [\n                    {\n                        path: "/register",\n                        element: (\n                            // highlight-start\n                            <AuthPage\n                                type="register"\n                                wrapperProps={{\n                                    style: {\n                                        background: "#331049",\n                                    },\n                                }}\n                                loginLink={false}\n                            />\n                            // highlight-end\n                        ),\n                    },\n                ],\n            }}\n            LoginPage={AuthPage}\n            resources={[\n                {\n                    name: "home",\n                    list: () => {\n                        const { replace } = useNavigation();\n\n                        return (\n                            <div>\n                                Home Page\n                                <button\n                                    onClick={() => {\n                                        replace("/login");\n                                    }}\n                                >\n                                    Logout\n                                </button>\n                            </div>\n                        );\n                    },\n                },\n            ]}\n        />\n    );\n};\n// visible-block-end\nrender(\n    <RefineAntdDemo\n        routerProvider={{\n            ...RefineDemoReactRouterV6(["/register"]),\n            routes: [\n                {\n                    path: "/login",\n                    element: <AuthPage />,\n                },\n                {\n                    path: "/register",\n                    element: (\n                        <AuthPage\n                            type="register"\n                            wrapperProps={{\n                                style: {\n                                    background: "#331049",\n                                },\n                            }}\n                            loginLink={false}\n                        />\n                    ),\n                },\n            ],\n        }}\n        authProvider={authProvider}\n        resources={[\n            {\n                name: "home",\n                list: () => {\n                    const { replace } = useNavigation();\n\n                    return (\n                        <div>\n                            Home Page\n                            <button\n                                onClick={() => {\n                                    replace("/login");\n                                }}\n                            >\n                                Logout\n                            </button>\n                        </div>\n                    );\n                },\n            },\n        ]}\n    />,\n);\n')),(0,o.kt)("h3",{id:"contentprops-1"},(0,o.kt)("inlineCode",{parentName:"h3"},"contentProps")),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"contentProps")," uses for passing props to the content component which is the form component. In the example below you can see that the title, header and content styles are changed with ",(0,o.kt)("inlineCode",{parentName:"p"},"contentProps"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx",metastring:"live previewHeight=500px hideCode url=http://localhost:3000/register",live:!0,previewHeight:"500px",hideCode:!0,url:"http://localhost:3000/register"},'const { AuthPage } = RefineAntd;\nconst { useRouterContext, useNavigation } = RefineCore;\n\nconst authProvider = {\n    login: () => Promise.resolve(),\n    register: () => Promise.resolve(),\n    resetPassword: () => Promise.resolve(),\n    updatePassword: () => Promise.resolve(),\n    logout: () => Promise.resolve(),\n    checkAuth: () => Promise.resolve(),\n    checkError: () => Promise.resolve(),\n    getPermissions: () => Promise.resolve(),\n    getUserIdentity: () => Promise.resolve(),\n};\n\n// visible-block-start\nimport { Refine, useNavigation } from "@pankod/refine-core";\nimport { AuthPage } from "@pankod/refine-antd";\nimport routerProvider from "@pankod/refine-react-router-v6";\n\nimport { authProvider } from "./authProvider";\n\nconst App = () => {\n    return (\n        <Refine\n            authProvider={authProvider}\n            routerProvider={{\n                ...routerProvider,\n                routes: [\n                    {\n                        path: "/register",\n                        element: (\n                            <AuthPage\n                                type="register"\n                                loginLink={false}\n                                // highlight-start\n                                contentProps={{\n                                    title: "Login",\n                                    headStyle: {\n                                        background: "cornflowerblue",\n                                        color: "white",\n                                    },\n                                    bodyStyle: {\n                                        background: "#673ab742",\n                                    },\n                                }}\n                                // highlight-end\n                            />\n                        ),\n                    },\n                ],\n            }}\n            resources={[\n                {\n                    name: "home",\n                    list: () => {\n                        const { replace } = useNavigation();\n\n                        return (\n                            <div>\n                                Home Page\n                                <button\n                                    onClick={() => {\n                                        replace("/login");\n                                    }}\n                                >\n                                    Logout\n                                </button>\n                            </div>\n                        );\n                    },\n                },\n            ]}\n        />\n    );\n};\n// visible-block-end\nrender(\n    <RefineAntdDemo\n        routerProvider={{\n            ...RefineDemoReactRouterV6(["/register"]),\n            routes: [\n                {\n                    path: "/register",\n                    element: (\n                        <AuthPage\n                            type="register"\n                            loginLink={false}\n                            contentProps={{\n                                title: "Register",\n                                headStyle: {\n                                    background: "cornflowerblue",\n                                    color: "white",\n                                },\n                                bodyStyle: {\n                                    background: "#673ab742",\n                                },\n                            }}\n                        />\n                    ),\n                },\n            ],\n        }}\n        authProvider={authProvider}\n        resources={[\n            {\n                name: "home",\n                list: () => {\n                    const { replace } = useNavigation();\n\n                    return (\n                        <div>\n                            Home Page\n                            <button\n                                onClick={() => {\n                                    replace("/login");\n                                }}\n                            >\n                                Logout\n                            </button>\n                        </div>\n                    );\n                },\n            },\n        ]}\n    />,\n);\n')),(0,o.kt)("h3",{id:"formprops-1"},(0,o.kt)("inlineCode",{parentName:"h3"},"formProps")),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"formProps")," uses for passing props to the form component. In the example below you can see that the ",(0,o.kt)("inlineCode",{parentName:"p"},"initialValues")," are changed with ",(0,o.kt)("inlineCode",{parentName:"p"},"formProps"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx",metastring:"live previewHeight=500px hideCode url=http://localhost:3000/register",live:!0,previewHeight:"500px",hideCode:!0,url:"http://localhost:3000/register"},'const { AuthPage } = RefineAntd;\nconst { useNavigation } = RefineCore;\n\nconst authProvider = {\n    login: () => Promise.resolve(),\n    register: () => Promise.resolve(),\n    resetPassword: () => Promise.resolve(),\n    updatePassword: () => Promise.resolve(),\n    logout: () => Promise.resolve(),\n    checkAuth: () => Promise.resolve(),\n    checkError: () => Promise.resolve(),\n    getPermissions: () => Promise.resolve(),\n    getUserIdentity: () => Promise.resolve(),\n};\n\n// visible-block-start\nimport { Refine, useNavigation } from "@pankod/refine-core";\nimport { AuthPage } from "@pankod/refine-antd";\nimport routerProvider from "@pankod/refine-react-router-v6";\n\nimport { authProvider } from "./authProvider";\n\nconst App = () => {\n    return (\n        <Refine\n            authProvider={authProvider}\n            LoginPage={() => (\n                <AuthPage\n                    type="register"\n                    // highlight-start\n                    formProps={{\n                        initialValues: {\n                            email: "demo@refine.dev",\n                            password: "demo",\n                        },\n                    }}\n                    // highlight-end\n                />\n            )}\n            resources={[\n                {\n                    name: "home",\n                    list: () => {\n                        const { replace } = useNavigation();\n\n                        return (\n                            <div>\n                                Home Page\n                                <button\n                                    onClick={() => {\n                                        replace("/login");\n                                    }}\n                                >\n                                    Logout\n                                </button>\n                            </div>\n                        );\n                    },\n                },\n            ]}\n        />\n    );\n};\n// visible-block-end\nrender(\n    <RefineAntdDemo\n        routerProvider={{\n            ...RefineDemoReactRouterV6(["/register"]),\n            routes: [\n                {\n                    path: "/register",\n                    element: (\n                        <AuthPage\n                            type="register"\n                            formProps={{\n                                initialValues: {\n                                    email: "demo@refine.dev",\n                                    password: "demo",\n                                },\n                            }}\n                        />\n                    ),\n                },\n            ],\n        }}\n        authProvider={authProvider}\n        resources={[\n            {\n                name: "home",\n                list: () => {\n                    const { replace } = useNavigation();\n\n                    return (\n                        <div>\n                            Home Page\n                            <button\n                                onClick={() => {\n                                    replace("/login");\n                                }}\n                            >\n                                Logout\n                            </button>\n                        </div>\n                    );\n                },\n            },\n        ]}\n    />,\n);\n')),(0,o.kt)("h3",{id:"rendercontent-1"},(0,o.kt)("inlineCode",{parentName:"h3"},"renderContent")),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"renderContent")," uses to render the form content. You can use this property to render your own content or ",(0,o.kt)("inlineCode",{parentName:"p"},"renderContent")," gives you default content you can use to add some extra elements to the content."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx",metastring:"live previewHeight=500px hideCode url=http://localhost:3000/register",live:!0,previewHeight:"500px",hideCode:!0,url:"http://localhost:3000/register"},'const { AuthPage } = RefineAntd;\nconst { useNavigation } = RefineCore;\n\nconst authProvider = {\n    login: () => Promise.resolve(),\n    register: () => Promise.resolve(),\n    resetPassword: () => Promise.resolve(),\n    updatePassword: () => Promise.resolve(),\n    logout: () => Promise.resolve(),\n    checkAuth: () => Promise.resolve(),\n    checkError: () => Promise.resolve(),\n    getPermissions: () => Promise.resolve(),\n    getUserIdentity: () => Promise.resolve(),\n};\n\n// visible-block-start\nimport { Refine, useNavigation } from "@pankod/refine-core";\nimport { AuthPage } from "@pankod/refine-antd";\n\nimport { authProvider } from "./authProvider";\n\nconst App = () => {\n    return (\n        <Refine\n            authProvider={authProvider}\n            routerProvider={{\n                ...routerProvider,\n                routes: [\n                    {\n                        path: "/register",\n                        // highlight-start\n                        element: (\n                            <AuthPage\n                                type="register"\n                                loginLink={false}\n                                onSubmit={(formValues) =>\n                                    alert(JSON.stringify(formValues, null, 2))\n                                }\n                                contentProps={{\n                                    style: {\n                                        width: "400px",\n                                    },\n                                }}\n                                renderContent={(content: React.ReactNode) => {\n                                    return (\n                                        <div\n                                            style={{\n                                                display: "flex",\n                                                flexDirection: "column",\n                                                justifyContent: "center",\n                                                alignItems: "center",\n                                            }}\n                                        >\n                                            <h1>Extra Header</h1>\n                                            {content}\n                                            <h1>Extra Footer</h1>\n                                        </div>\n                                    );\n                                }}\n                            />\n                        ),\n                        // highlight-end\n                    },\n                ],\n            }}\n            resources={[\n                {\n                    name: "home",\n                    list: () => {\n                        const { replace } = useNavigation();\n\n                        return (\n                            <div>\n                                Home Page\n                                <button\n                                    onClick={() => {\n                                        replace("/login");\n                                    }}\n                                >\n                                    Logout\n                                </button>\n                            </div>\n                        );\n                    },\n                },\n            ]}\n        />\n    );\n};\n// visible-block-end\nrender(\n    <RefineAntdDemo\n        routerProvider={{\n            ...RefineDemoReactRouterV6(["/register"]),\n            routes: [\n                {\n                    path: "/register",\n                    element: (\n                        <AuthPage\n                            type="register"\n                            loginLink={false}\n                            onSubmit={(formValues) =>\n                                alert(JSON.stringify(formValues, null, 2))\n                            }\n                            contentProps={{\n                                style: {\n                                    width: "400px",\n                                },\n                            }}\n                            renderContent={(content: React.ReactNode) => {\n                                return (\n                                    <div\n                                        style={{\n                                            display: "flex",\n                                            flexDirection: "column",\n                                            justifyContent: "center",\n                                            alignItems: "center",\n                                            width: "100%",\n                                        }}\n                                    >\n                                        <h1>Extra Header</h1>\n                                        {content}\n                                        <h1>Extra Footer</h1>\n                                    </div>\n                                );\n                            }}\n                        />\n                    ),\n                },\n            ],\n        }}\n        authProvider={authProvider}\n        resources={[\n            {\n                name: "home",\n                list: () => {\n                    const { replace } = useNavigation();\n\n                    return (\n                        <div>\n                            Home Page\n                            <button\n                                onClick={() => {\n                                    replace("/login");\n                                }}\n                            >\n                                Logout\n                            </button>\n                        </div>\n                    );\n                },\n            },\n        ]}\n    />,\n);\n')),(0,o.kt)("h2",{id:"reset-password"},"Reset Password"),(0,o.kt)("p",null,"The reset Password Page is a page that allows users to reset their passwords. You can use this page to reset your password."),(0,o.kt)("h3",{id:"default-2"},"Default"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx",metastring:"live url=http://localhost:3000/reset-password",live:!0,url:"http://localhost:3000/reset-password"},'const { useNavigation } = RefineCore;\nconst { AuthPage } = RefineAntd;\n\nconst authProvider = {\n    login: () => Promise.resolve(),\n    register: () => Promise.resolve(),\n    resetPassword: () => Promise.resolve(),\n    updatePassword: () => Promise.resolve(),\n    logout: () => Promise.resolve(),\n    checkAuth: () => Promise.resolve(),\n    checkError: () => Promise.resolve(),\n    getPermissions: () => Promise.resolve(),\n    getUserIdentity: () => Promise.resolve(),\n};\n\n// visible-block-start\nimport { Refine, useNavigation } from "@pankod/refine-core";\nimport { AuthPage } from "@pankod/refine-antd";\nimport routerProvider from "@pankod/refine-react-router-v6";\n\nimport { authProvider } from "./authProvider";\n\nconst App = () => {\n    return (\n        <Refine\n            authProvider={authProvider}\n            routerProvider={{\n                ...routerProvider,\n                routes: [\n                    {\n                        path: "/reset-password",\n                        element: <AuthPage type="resetPassword" />,\n                    },\n                ],\n            }}\n            LoginPage={AuthPage}\n            resources={[\n                {\n                    name: "home",\n                    list: () => {\n                        const { replace } = useNavigation();\n\n                        return (\n                            <div>\n                                Home Page\n                                <br />\n                                <button\n                                    onClick={() => {\n                                        replace("/login");\n                                    }}\n                                >\n                                    Logout\n                                </button>\n                            </div>\n                        );\n                    },\n                },\n            ]}\n        />\n    );\n};\n// visible-block-end\nrender(\n    <RefineAntdDemo\n        routerProvider={{\n            ...RefineDemoReactRouterV6(["/reset-password"]),\n            routes: [\n                { path: "/login", element: <AuthPage /> },\n                {\n                    path: "/reset-password",\n                    element: <AuthPage type="resetPassword" />,\n                },\n            ],\n        }}\n        authProvider={authProvider}\n        resources={[\n            {\n                name: "home",\n                list: () => {\n                    const { replace } = useNavigation();\n\n                    return (\n                        <div>\n                            Home Page\n                            <br />\n                            <button\n                                onClick={() => {\n                                    replace("/login");\n                                }}\n                            >\n                                Logout\n                            </button>\n                        </div>\n                    );\n                },\n            },\n        ]}\n    />,\n);\n')),(0,o.kt)("h3",{id:"loginlink-1"},(0,o.kt)("inlineCode",{parentName:"h3"},"loginLink")),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"loginLink")," property defines the link to the login page and also you can give a node to render. Default value is ",(0,o.kt)("inlineCode",{parentName:"p"},'"/login"'),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx",metastring:"live previewHeight=500px hideCode url=http://localhost:3000/reset-password",live:!0,previewHeight:"500px",hideCode:!0,url:"http://localhost:3000/reset-password"},'const { AuthPage } = RefineAntd;\nconst { useRouterContext, useNavigation } = RefineCore;\n\nconst authProvider = {\n    login: () => Promise.resolve(),\n    register: () => Promise.resolve(),\n    resetPassword: () => Promise.resolve(),\n    updatePassword: () => Promise.resolve(),\n    logout: () => Promise.resolve(),\n    checkAuth: () => Promise.resolve(),\n    checkError: () => Promise.resolve(),\n    getPermissions: () => Promise.resolve(),\n    getUserIdentity: () => Promise.resolve(),\n};\n\n// visible-block-start\nimport { Refine, useRouterContext, useNavigation } from "@pankod/refine-core";\nimport { AuthPage } from "@pankod/refine-antd";\nimport routerProvider from "@pankod/refine-react-router-v6";\n\nimport { authProvider } from "./authProvider";\n\nconst Auth = (props) => {\n    const { Link } = useRouterContext();\n\n    return (\n        <AuthPage\n            {...props}\n            // highlight-start\n            loginLink={\n                <div\n                    style={{\n                        border: "1px dashed cornflowerblue",\n                        padding: 3,\n                    }}\n                >\n                    <Link to="/login">Login</Link>\n                </div>\n            }\n            // highlight-end\n        />\n    );\n};\n\nconst App = () => {\n    return (\n        <Refine\n            authProvider={authProvider}\n            // highlight-start\n            routerProvider={{\n                ...routerProvider,\n                routes: [\n                    {\n                        path: "/reset-password",\n                        element: <Auth type="resetPassword" />,\n                    },\n                ],\n            }}\n            // highlight-end\n            LoginPage={Auth}\n            resources={[\n                {\n                    name: "home",\n                    list: () => {\n                        const { replace } = useNavigation();\n\n                        return (\n                            <div>\n                                Home Page\n                                <button\n                                    onClick={() => {\n                                        replace("/login");\n                                    }}\n                                >\n                                    Logout\n                                </button>\n                            </div>\n                        );\n                    },\n                },\n            ]}\n        />\n    );\n};\n// visible-block-end\nrender(\n    <RefineAntdDemo\n        routerProvider={{\n            ...RefineDemoReactRouterV6(["/reset-password"]),\n            routes: [\n                {\n                    path: "/login",\n                    element: <Auth type="login" />,\n                },\n                {\n                    path: "/reset-password",\n                    element: <Auth type="resetPassword" />,\n                },\n            ],\n        }}\n        authProvider={authProvider}\n        resources={[\n            {\n                name: "home",\n                list: () => {\n                    const { replace } = useNavigation();\n\n                    return (\n                        <div>\n                            Home Page\n                            <button\n                                onClick={() => {\n                                    replace("/login");\n                                }}\n                            >\n                                Logout\n                            </button>\n                        </div>\n                    );\n                },\n            },\n        ]}\n    />,\n);\n')),(0,o.kt)("h3",{id:"onsubmit-2"},(0,o.kt)("inlineCode",{parentName:"h3"},"onSubmit")),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"onSubmit")," is a function that will be triggered after submitting the form and verifying data successfully."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx",metastring:"live previewHeight=500px hideCode url=http://localhost:3000/reset-password",live:!0,previewHeight:"500px",hideCode:!0,url:"http://localhost:3000/reset-password"},'const { AuthPage } = RefineAntd;\n\nconst authProvider = {\n    login: () => Promise.resolve(),\n    register: () => Promise.resolve(),\n    resetPassword: () => Promise.resolve(),\n    updatePassword: () => Promise.resolve(),\n    logout: () => Promise.resolve(),\n    checkAuth: () => Promise.resolve(),\n    checkError: () => Promise.resolve(),\n    getPermissions: () => Promise.resolve(),\n    getUserIdentity: () => Promise.resolve(),\n};\n\n// visible-block-start\nimport { Refine, useNavigation } from "@pankod/refine-core";\nimport { AuthPage } from "@pankod/refine-antd";\nimport routerProvider from "@pankod/refine-react-router-v6";\n\nimport { authProvider } from "./authProvider";\n\nconst App = () => {\n    return (\n        <Refine\n            authProvider={authProvider}\n            routerProvider={{\n                ...routerProvider,\n                routes: [\n                    {\n                        path: "/reset-password",\n                        element: (\n                            <AuthPage\n                                type="resetPassword"\n                                // highlight-start\n                                onSubmit={(formValues) =>\n                                    alert(JSON.stringify(formValues, null, 2))\n                                }\n                                // highlight-end\n                                loginLink={false}\n                            />\n                        ),\n                    },\n                ],\n            }}\n        />\n    );\n};\n// visible-block-end\nrender(\n    <RefineAntdDemo\n        routerProvider={{\n            ...RefineDemoReactRouterV6(["/reset-password"]),\n            routes: [\n                {\n                    path: "/reset-password",\n                    element: (\n                        <AuthPage\n                            type="resetPassword"\n                            onSubmit={(formValues) =>\n                                alert(JSON.stringify(formValues, null, 2))\n                            }\n                            loginLink={false}\n                        />\n                    ),\n                },\n            ],\n        }}\n        authProvider={authProvider}\n        resources={[\n            {\n                name: "home",\n                list: () => {\n                    const { replace } = useNavigation();\n\n                    return (\n                        <div>\n                            Home Page\n                            <button\n                                onClick={() => {\n                                    replace("/reset-password");\n                                }}\n                            >\n                                Reset Password\n                            </button>\n                        </div>\n                    );\n                },\n            },\n        ]}\n    />,\n);\n')),(0,o.kt)("h3",{id:"wrapperprops-2"},(0,o.kt)("inlineCode",{parentName:"h3"},"wrapperProps")),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"wrapperProps")," uses for passing props to the wrapper component. In the example below you can see that the background color is changed with ",(0,o.kt)("inlineCode",{parentName:"p"},"wrapperProps")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx",metastring:"live previewHeight=500px hideCode url=http://localhost:3000/reset-password",live:!0,previewHeight:"500px",hideCode:!0,url:"http://localhost:3000/reset-password"},'const { AuthPage } = RefineAntd;\nconst { useNavigation } = RefineCore;\n\nconst authProvider = {\n    login: () => Promise.resolve(),\n    register: () => Promise.resolve(),\n    resetPassword: () => Promise.resolve(),\n    updatePassword: () => Promise.resolve(),\n    logout: () => Promise.resolve(),\n    checkAuth: () => Promise.resolve(),\n    checkError: () => Promise.resolve(),\n    getPermissions: () => Promise.resolve(),\n    getUserIdentity: () => Promise.resolve(),\n};\n\n// visible-block-start\nimport { Refine, useNavigation } from "@pankod/refine-core";\nimport { AuthPage } from "@pankod/refine-antd";\nimport routerProvider from "@pankod/refine-react-router-v6";\n\nimport { authProvider } from "./authProvider";\n\nconst App = () => {\n    return (\n        <Refine\n            authProvider={authProvider}\n            // highlight-start\n            routerProvider={{\n                ...routerProvider,\n                routes: [\n                    {\n                        path: "/reset-password",\n                        element: (\n                            <AuthPage\n                                type="resetPassword"\n                                wrapperProps={{\n                                    style: {\n                                        background: "#331049",\n                                    },\n                                }}\n                                loginLink={false}\n                            />\n                        ),\n                    },\n                ],\n            }}\n            // highlight-end\n            LoginPage={AuthPage}\n            resources={[\n                {\n                    name: "home",\n                    list: () => {\n                        const { replace } = useNavigation();\n\n                        return (\n                            <div>\n                                Home Page\n                                <button\n                                    onClick={() => {\n                                        replace("/login");\n                                    }}\n                                >\n                                    Logout\n                                </button>\n                            </div>\n                        );\n                    },\n                },\n            ]}\n        />\n    );\n};\n// visible-block-end\nrender(\n    <RefineAntdDemo\n        routerProvider={{\n            ...RefineDemoReactRouterV6(["/reset-password"]),\n            routes: [\n                {\n                    path: "/reset-password",\n                    element: (\n                        <AuthPage\n                            type="resetPassword"\n                            wrapperProps={{\n                                style: {\n                                    background: "#331049",\n                                },\n                            }}\n                            loginLink={false}\n                        />\n                    ),\n                },\n            ],\n        }}\n        authProvider={authProvider}\n        resources={[\n            {\n                name: "home",\n                list: () => {\n                    const { replace } = useNavigation();\n\n                    return (\n                        <div>\n                            Home Page\n                            <button\n                                onClick={() => {\n                                    replace("/login");\n                                }}\n                            >\n                                Logout\n                            </button>\n                        </div>\n                    );\n                },\n            },\n        ]}\n    />,\n);\n')),(0,o.kt)("h3",{id:"contentprops-2"},(0,o.kt)("inlineCode",{parentName:"h3"},"contentProps")),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"contentProps")," uses for passing props to the content component which is the form component. In the example below you can see that the title, header and content styles are changed with ",(0,o.kt)("inlineCode",{parentName:"p"},"contentProps"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx",metastring:"live previewHeight=500px hideCode url=http://localhost:3000/reset-password",live:!0,previewHeight:"500px",hideCode:!0,url:"http://localhost:3000/reset-password"},'const { AuthPage } = RefineAntd;\nconst { useRouterContext, useNavigation } = RefineCore;\n\nconst authProvider = {\n    login: () => Promise.resolve(),\n    register: () => Promise.resolve(),\n    resetPassword: () => Promise.resolve(),\n    updatePassword: () => Promise.resolve(),\n    logout: () => Promise.resolve(),\n    checkAuth: () => Promise.resolve(),\n    checkError: () => Promise.resolve(),\n    getPermissions: () => Promise.resolve(),\n    getUserIdentity: () => Promise.resolve(),\n};\n\n// visible-block-start\nimport { Refine } from "@pankod/refine-core";\nimport { AuthPage } from "@pankod/refine-antd";\nimport routerProvider from "@pankod/refine-react-router-v6";\n\nimport { authProvider } from "./authProvider";\n\nconst App = () => {\n    return (\n        <Refine\n            authProvider={authProvider}\n            // highlight-start\n            routerProvider={{\n                ...routerProvider,\n                routes: [\n                    {\n                        path: "/reset-password",\n                        element: (\n                            <AuthPage\n                                type="resetPassword"\n                                loginLink={false}\n                                contentProps={{\n                                    title: "Reset Password",\n                                    headStyle: {\n                                        background: "cornflowerblue",\n                                        color: "white",\n                                    },\n                                    bodyStyle: {\n                                        background: "#673ab742",\n                                    },\n                                }}\n                            />\n                        ),\n                    },\n                ],\n            }}\n            // highlight-end\n        />\n    );\n};\n// visible-block-end\nrender(\n    <RefineAntdDemo\n        routerProvider={{\n            ...RefineDemoReactRouterV6(["/reset-password"]),\n            routes: [\n                {\n                    path: "/reset-password",\n                    element: (\n                        <AuthPage\n                            type="resetPassword"\n                            loginLink={false}\n                            contentProps={{\n                                title: "Reset Password",\n                                headStyle: {\n                                    background: "cornflowerblue",\n                                    color: "white",\n                                },\n                                bodyStyle: {\n                                    background: "#673ab742",\n                                },\n                            }}\n                        />\n                    ),\n                },\n            ],\n        }}\n        authProvider={authProvider}\n        resources={[\n            {\n                name: "Home",\n                list: () => {\n                    return <div>Home</div>;\n                },\n            },\n        ]}\n    />,\n);\n')),(0,o.kt)("h3",{id:"formprops-2"},(0,o.kt)("inlineCode",{parentName:"h3"},"formProps")),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"formProps")," uses for passing props to the form component. In the example below you can see that the ",(0,o.kt)("inlineCode",{parentName:"p"},"initialValues")," are changed with ",(0,o.kt)("inlineCode",{parentName:"p"},"formProps"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx",metastring:"live previewHeight=500px hideCode url=http://localhost:3000/reset-password",live:!0,previewHeight:"500px",hideCode:!0,url:"http://localhost:3000/reset-password"},'const { AuthPage } = RefineAntd;\nconst { useNavigation } = RefineCore;\n\nconst authProvider = {\n    login: () => Promise.resolve(),\n    register: () => Promise.resolve(),\n    resetPassword: () => Promise.resolve(),\n    updatePassword: () => Promise.resolve(),\n    logout: () => Promise.resolve(),\n    checkAuth: () => Promise.resolve(),\n    checkError: () => Promise.resolve(),\n    getPermissions: () => Promise.resolve(),\n    getUserIdentity: () => Promise.resolve(),\n};\n\n// visible-block-start\nimport { Refine, useNavigation } from "@pankod/refine-core";\nimport { AuthPage } from "@pankod/refine-antd";\nimport routerProvider from "@pankod/refine-react-router-v6";\n\nimport { authProvider } from "./authProvider";\n\nconst App = () => {\n    return (\n        <Refine\n            authProvider={authProvider}\n            LoginPage={() => (\n                <AuthPage\n                    type="resetPassword"\n                    // highlight-start\n                    formProps={{\n                        initialValues: {\n                            email: "demo@refine.dev",\n                            password: "demo",\n                        },\n                    }}\n                    // highlight-end\n                />\n            )}\n            resources={[\n                {\n                    name: "Home",\n                    list: () => {\n                        return <div>Home</div>;\n                    },\n                },\n            ]}\n        />\n    );\n};\n// visible-block-end\nrender(\n    <RefineAntdDemo\n        routerProvider={{\n            ...RefineDemoReactRouterV6(["/reset-password"]),\n            routes: [\n                {\n                    path: "/reset-password",\n                    element: (\n                        <AuthPage\n                            type="resetPassword"\n                            formProps={{\n                                initialValues: {\n                                    email: "demo@refine.dev",\n                                    password: "demo",\n                                },\n                            }}\n                        />\n                    ),\n                },\n            ],\n        }}\n        authProvider={authProvider}\n        resources={[\n            {\n                name: "Home",\n                list: () => {\n                    return <div>Home</div>;\n                },\n            },\n        ]}\n    />,\n);\n')),(0,o.kt)("h3",{id:"rendercontent-2"},(0,o.kt)("inlineCode",{parentName:"h3"},"renderContent")),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"renderContent")," uses to render the form content. You can use this property to render your own content or ",(0,o.kt)("inlineCode",{parentName:"p"},"renderContent")," gives you default content you can use to add some extra elements to the content."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx",metastring:"live previewHeight=500px hideCode url=http://localhost:3000/reset-password",live:!0,previewHeight:"500px",hideCode:!0,url:"http://localhost:3000/reset-password"},'const { AuthPage } = RefineAntd;\nconst { useRouterContext, useNavigation } = RefineCore;\n\nconst authProvider = {\n    login: () => Promise.resolve(),\n    register: () => Promise.resolve(),\n    resetPassword: () => Promise.resolve(),\n    updatePassword: () => Promise.resolve(),\n    logout: () => Promise.resolve(),\n    checkAuth: () => Promise.resolve(),\n    checkError: () => Promise.resolve(),\n    getPermissions: () => Promise.resolve(),\n    getUserIdentity: () => Promise.resolve(),\n};\n\n// visible-block-start\nimport { Refine, useRouterContext } from "@pankod/refine-core";\nimport { AuthPage } from "@pankod/refine-antd";\n\nimport { authProvider } from "./authProvider";\n\nconst App = () => {\n    return (\n        <Refine\n            authProvider={authProvider}\n            // highlight-start\n            routerProvider={{\n                ...routerProvider,\n                routes: [\n                    {\n                        path: "/reset-password",\n                        element: (\n                            <AuthPage\n                                type="resetPassword"\n                                loginLink={false}\n                                onSubmit={(formValues) =>\n                                    alert(JSON.stringify(formValues, null, 2))\n                                }\n                                contentProps={{\n                                    style: {\n                                        width: "400px",\n                                    },\n                                }}\n                                renderContent={(content: React.ReactNode) => {\n                                    return (\n                                        <div\n                                            style={{\n                                                display: "flex",\n                                                flexDirection: "column",\n                                                justifyContent: "center",\n                                                alignItems: "center",\n                                            }}\n                                        >\n                                            <h1>Extra Header</h1>\n                                            {content}\n                                            <h1>Extra Footer</h1>\n                                        </div>\n                                    );\n                                }}\n                            />\n                        ),\n                    },\n                ],\n            }}\n            // highlight-end\n            resources={[\n                {\n                    name: "Home",\n                    list: () => {\n                        return <div>Home Page</div>;\n                    },\n                },\n            ]}\n        />\n    );\n};\n// visible-block-end\nrender(\n    <RefineAntdDemo\n        routerProvider={{\n            ...RefineDemoReactRouterV6(["/reset-password"]),\n            routes: [\n                {\n                    path: "/reset-password",\n                    element: (\n                        <AuthPage\n                            type="resetPassword"\n                            loginLink={false}\n                            onSubmit={(formValues) =>\n                                alert(JSON.stringify(formValues, null, 2))\n                            }\n                            contentProps={{\n                                style: {\n                                    width: "400px",\n                                },\n                            }}\n                            renderContent={(content: React.ReactNode) => {\n                                return (\n                                    <div\n                                        style={{\n                                            display: "flex",\n                                            flexDirection: "column",\n                                            justifyContent: "center",\n                                            alignItems: "center",\n                                            width: "100%",\n                                        }}\n                                    >\n                                        <h1>Extra Header</h1>\n                                        {content}\n                                        <h1>Extra Footer</h1>\n                                    </div>\n                                );\n                            }}\n                        />\n                    ),\n                },\n            ],\n        }}\n        authProvider={authProvider}\n        resources={[\n            {\n                name: "Home",\n                list: () => {\n                    return <div>Home Page</div>;\n                },\n            },\n        ]}\n    />,\n);\n')),(0,o.kt)("h2",{id:"update-password"},"Update Password"),(0,o.kt)("p",null,"The update Password page is used to update the password of the user."),(0,o.kt)("h3",{id:"default-3"},"Default"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx",metastring:"live url=http://localhost:3000/update-password",live:!0,url:"http://localhost:3000/update-password"},'const { useNavigation } = RefineCore;\nconst { AuthPage } = RefineAntd;\n\nconst authProvider = {\n    login: () => Promise.resolve(),\n    register: () => Promise.resolve(),\n    resetPassword: () => Promise.resolve(),\n    updatePassword: () => Promise.resolve(),\n    logout: () => Promise.resolve(),\n    checkAuth: () => Promise.resolve(),\n    checkError: () => Promise.resolve(),\n    getPermissions: () => Promise.resolve(),\n    getUserIdentity: () => Promise.resolve(),\n};\n\n// visible-block-start\nimport { Refine, useNavigation } from "@pankod/refine-core";\nimport { AuthPage } from "@pankod/refine-antd";\nimport routerProvider from "@pankod/refine-react-router-v6";\n\nimport { authProvider } from "./authProvider";\n\nconst App = () => {\n    return (\n        <Refine\n            authProvider={authProvider}\n            // highlight-start\n\n            routerProvider={{\n                ...routerProvider,\n                routes: [\n                    {\n                        path: "/update-password",\n                        element: <AuthPage type="updatePassword" />,\n                    },\n                ],\n            }}\n            // highlight-end\n            LoginPage={AuthPage}\n            resources={[\n                {\n                    name: "home",\n                    list: () => {\n                        const { replace } = useNavigation();\n\n                        return (\n                            <div>\n                                Home Page\n                                <br />\n                                <button\n                                    onClick={() => {\n                                        replace("/login");\n                                    }}\n                                >\n                                    Logout\n                                </button>\n                            </div>\n                        );\n                    },\n                },\n            ]}\n        />\n    );\n};\n// visible-block-end\nrender(\n    <RefineAntdDemo\n        routerProvider={{\n            ...RefineDemoReactRouterV6(["/update-password"]),\n            routes: [\n                { path: "/login", element: <AuthPage /> },\n                {\n                    path: "/update-password",\n                    element: <AuthPage type="updatePassword" />,\n                },\n            ],\n        }}\n        authProvider={authProvider}\n        resources={[\n            {\n                name: "home",\n                list: () => {\n                    const { replace } = useNavigation();\n\n                    return (\n                        <div>\n                            Home Page\n                            <br />\n                            <button\n                                onClick={() => {\n                                    replace("/login");\n                                }}\n                            >\n                                Logout\n                            </button>\n                        </div>\n                    );\n                },\n            },\n        ]}\n    />,\n);\n')),(0,o.kt)("h3",{id:"onsubmit-3"},(0,o.kt)("inlineCode",{parentName:"h3"},"onSubmit")),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"onSubmit")," is a function that will be triggered after submitting the form and verifying data successfully."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx",metastring:"live previewHeight=500px hideCode url=http://localhost:3000/update-password",live:!0,previewHeight:"500px",hideCode:!0,url:"http://localhost:3000/update-password"},'const { AuthPage } = RefineAntd;\n\nconst authProvider = {\n    login: () => Promise.resolve(),\n    register: () => Promise.resolve(),\n    resetPassword: () => Promise.resolve(),\n    updatePassword: () => Promise.resolve(),\n    logout: () => Promise.resolve(),\n    checkAuth: () => Promise.resolve(),\n    checkError: () => Promise.resolve(),\n    getPermissions: () => Promise.resolve(),\n    getUserIdentity: () => Promise.resolve(),\n};\n\n// visible-block-start\nimport { Refine } from "@pankod/refine-core";\nimport { AuthPage } from "@pankod/refine-antd";\nimport routerProvider from "@pankod/refine-react-router-v6";\n\nimport { authProvider } from "./authProvider";\n\nconst App = () => {\n    return (\n        <Refine\n            authProvider={authProvider}\n            routerProvider={{\n                ...routerProvider,\n                routes: [\n                    {\n                        path: "/update-password",\n                        element: (\n                            <AuthPage\n                                type="updatePassword"\n                                // highlight-start\n                                onSubmit={(formValues) =>\n                                    alert(JSON.stringify(formValues, null, 2))\n                                }\n                                // highlight-end\n                            />\n                        ),\n                    },\n                ],\n            }}\n        />\n    );\n};\n// visible-block-end\nrender(\n    <RefineAntdDemo\n        routerProvider={{\n            ...RefineDemoReactRouterV6(["/update-password"]),\n            routes: [\n                {\n                    path: "/update-password",\n                    element: (\n                        <AuthPage\n                            type="updatePassword"\n                            onSubmit={(formValues) =>\n                                alert(JSON.stringify(formValues, null, 2))\n                            }\n                        />\n                    ),\n                },\n            ],\n        }}\n        authProvider={authProvider}\n        resources={[\n            {\n                name: "posts",\n                list: () => {\n                    return <div>Empty Page</div>;\n                },\n            },\n        ]}\n    />,\n);\n')),(0,o.kt)("h3",{id:"wrapperprops-3"},(0,o.kt)("inlineCode",{parentName:"h3"},"wrapperProps")),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"wrapperProps")," uses for passing props to the wrapper component. In the example below you can see that the background color is changed with ",(0,o.kt)("inlineCode",{parentName:"p"},"wrapperProps")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx",metastring:"live previewHeight=500px hideCode url=http://localhost:3000/update-password",live:!0,previewHeight:"500px",hideCode:!0,url:"http://localhost:3000/update-password"},'const { AuthPage } = RefineAntd;\n\nconst authProvider = {\n    login: () => Promise.resolve(),\n    register: () => Promise.resolve(),\n    resetPassword: () => Promise.resolve(),\n    updatePassword: () => Promise.resolve(),\n    logout: () => Promise.resolve(),\n    checkAuth: () => Promise.resolve(),\n    checkError: () => Promise.resolve(),\n    getPermissions: () => Promise.resolve(),\n    getUserIdentity: () => Promise.resolve(),\n};\n\n// visible-block-start\nimport { Refine } from "@pankod/refine-core";\nimport { AuthPage } from "@pankod/refine-antd";\nimport routerProvider from "@pankod/refine-react-router-v6";\n\nimport { authProvider } from "./authProvider";\n\nconst App = () => {\n    return (\n        <Refine\n            authProvider={authProvider}\n            routerProvider={{\n                ...routerProvider,\n                routes: [\n                    {\n                        path: "/update-password",\n                        element: (\n                            <AuthPage\n                                type="updatePassword"\n                                // highlight-start\n                                wrapperProps={{\n                                    style: {\n                                        background: "#331049",\n                                    },\n                                }}\n                                // highlight-end\n                            />\n                        ),\n                    },\n                ],\n            }}\n        />\n    );\n};\n// visible-block-end\nrender(\n    <RefineAntdDemo\n        routerProvider={{\n            ...RefineDemoReactRouterV6(["/update-password"]),\n            routes: [\n                {\n                    path: "/update-password",\n                    element: (\n                        <AuthPage\n                            type="updatePassword"\n                            wrapperProps={{\n                                style: {\n                                    background: "#331049",\n                                },\n                            }}\n                            loginLink={false}\n                        />\n                    ),\n                },\n            ],\n        }}\n        authProvider={authProvider}\n        resources={[\n            {\n                name: "posts",\n                list: () => {\n                    return <div>Empty Page</div>;\n                },\n            },\n        ]}\n    />,\n);\n')),(0,o.kt)("h3",{id:"contentprops-3"},(0,o.kt)("inlineCode",{parentName:"h3"},"contentProps")),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"contentProps")," uses for passing props to the content component which is the form component. In the example below you can see that the title, header and content styles are changed with ",(0,o.kt)("inlineCode",{parentName:"p"},"contentProps"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx",metastring:"live previewHeight=500px hideCode url=http://localhost:3000/update-password",live:!0,previewHeight:"500px",hideCode:!0,url:"http://localhost:3000/update-password"},'const { AuthPage } = RefineAntd;\nconst { useRouterContext, useNavigation } = RefineCore;\n\nconst authProvider = {\n    login: () => Promise.resolve(),\n    register: () => Promise.resolve(),\n    resetPassword: () => Promise.resolve(),\n    updatePassword: () => Promise.resolve(),\n    logout: () => Promise.resolve(),\n    checkAuth: () => Promise.resolve(),\n    checkError: () => Promise.resolve(),\n    getPermissions: () => Promise.resolve(),\n    getUserIdentity: () => Promise.resolve(),\n};\n\n// visible-block-start\nimport { Refine } from "@pankod/refine-core";\nimport { AuthPage } from "@pankod/refine-antd";\nimport routerProvider from "@pankod/refine-react-router-v6";\n\nimport { authProvider } from "./authProvider";\n\nconst App = () => {\n    return (\n        <Refine\n            authProvider={authProvider}\n            routerProvider={{\n                ...routerProvider,\n                routes: [\n                    {\n                        path: "/update-password",\n\n                        element: (\n                            <AuthPage\n                                type="updatePassword"\n                                // highlight-start\n                                contentProps={{\n                                    title: "Update Password",\n                                    headStyle: {\n                                        background: "cornflowerblue",\n                                        color: "white",\n                                    },\n                                    bodyStyle: {\n                                        background: "#673ab742",\n                                    },\n                                }}\n                                // highlight-end\n                            />\n                        ),\n                    },\n                ],\n            }}\n        />\n    );\n};\n// visible-block-end\nrender(\n    <RefineAntdDemo\n        routerProvider={{\n            ...RefineDemoReactRouterV6(["/update-password"]),\n            routes: [\n                {\n                    path: "/update-password",\n                    element: (\n                        <AuthPage\n                            type="updatePassword"\n                            contentProps={{\n                                title: "Update Password",\n                                headStyle: {\n                                    background: "cornflowerblue",\n                                    color: "white",\n                                },\n                                bodyStyle: {\n                                    background: "#673ab742",\n                                },\n                            }}\n                        />\n                    ),\n                },\n            ],\n        }}\n        authProvider={authProvider}\n        resources={[\n            {\n                name: "posts",\n                list: () => {\n                    return <div>Empty Page</div>;\n                },\n            },\n        ]}\n    />,\n);\n')),(0,o.kt)("h3",{id:"formprops-3"},(0,o.kt)("inlineCode",{parentName:"h3"},"formProps")),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"formProps")," uses for passing props to the form component. In the example below you can see that the ",(0,o.kt)("inlineCode",{parentName:"p"},"initialValues")," are changed with ",(0,o.kt)("inlineCode",{parentName:"p"},"formProps"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx",metastring:"live previewHeight=500px hideCode url=http://localhost:3000/update-password",live:!0,previewHeight:"500px",hideCode:!0,url:"http://localhost:3000/update-password"},'const { AuthPage } = RefineAntd;\nconst { useNavigation } = RefineCore;\n\nconst authProvider = {\n    login: () => Promise.resolve(),\n    register: () => Promise.resolve(),\n    resetPassword: () => Promise.resolve(),\n    updatePassword: () => Promise.resolve(),\n    logout: () => Promise.resolve(),\n    checkAuth: () => Promise.resolve(),\n    checkError: () => Promise.resolve(),\n    getPermissions: () => Promise.resolve(),\n    getUserIdentity: () => Promise.resolve(),\n};\n\n// visible-block-start\nimport { Refine, useNavigation } from "@pankod/refine-core";\nimport { AuthPage } from "@pankod/refine-antd";\nimport routerProvider from "@pankod/refine-react-router-v6";\n\nimport { authProvider } from "./authProvider";\n\nconst App = () => {\n    return (\n        <Refine\n            authProvider={authProvider}\n            LoginPage={() => (\n                <AuthPage\n                    type="updatePassword"\n                    // highlight-start\n                    formProps={{\n                        initialValues: {\n                            email: "demo@refine.dev",\n                            password: "demo",\n                        },\n                    }}\n                    // highlight-end\n                />\n            )}\n            resources={[\n                {\n                    name: "home",\n                    list: () => {\n                        const { replace } = useNavigation();\n\n                        return (\n                            <div>\n                                Home Page\n                                <button\n                                    onClick={() => {\n                                        replace("/login");\n                                    }}\n                                >\n                                    Logout\n                                </button>\n                            </div>\n                        );\n                    },\n                },\n            ]}\n        />\n    );\n};\n// visible-block-end\nrender(\n    <RefineAntdDemo\n        routerProvider={{\n            ...RefineDemoReactRouterV6(["/update-password"]),\n            routes: [\n                {\n                    path: "/update-password",\n                    element: (\n                        <AuthPage\n                            type="updatePassword"\n                            formProps={{\n                                initialValues: {\n                                    email: "demo@refine.dev",\n                                    password: "demo",\n                                },\n                            }}\n                        />\n                    ),\n                },\n            ],\n        }}\n        authProvider={authProvider}\n        resources={[\n            {\n                name: "home",\n                list: () => {\n                    const { replace } = useNavigation();\n\n                    return (\n                        <div>\n                            Home Page\n                            <button\n                                onClick={() => {\n                                    replace("/login");\n                                }}\n                            >\n                                Logout\n                            </button>\n                        </div>\n                    );\n                },\n            },\n        ]}\n    />,\n);\n')),(0,o.kt)("h3",{id:"rendercontent-3"},(0,o.kt)("inlineCode",{parentName:"h3"},"renderContent")),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"renderContent")," uses to render the form content. You can use this property to render your own content or ",(0,o.kt)("inlineCode",{parentName:"p"},"renderContent")," gives you default content you can use to add some extra elements to the content."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx",metastring:"live previewHeight=500px hideCode url=http://localhost:3000/update-password",live:!0,previewHeight:"500px",hideCode:!0,url:"http://localhost:3000/update-password"},'const { AuthPage } = RefineAntd;\nconst { useRouterContext, useNavigation } = RefineCore;\n\nconst authProvider = {\n    login: () => Promise.resolve(),\n    register: () => Promise.resolve(),\n    resetPassword: () => Promise.resolve(),\n    updatePassword: () => Promise.resolve(),\n    logout: () => Promise.resolve(),\n    checkAuth: () => Promise.resolve(),\n    checkError: () => Promise.resolve(),\n    getPermissions: () => Promise.resolve(),\n    getUserIdentity: () => Promise.resolve(),\n};\n\n// visible-block-start\nimport { Refine, useRouterContext } from "@pankod/refine-core";\nimport { AuthPage } from "@pankod/refine-antd";\n\nimport { authProvider } from "./authProvider";\n\nconst App = () => {\n    return (\n        <Refine\n            authProvider={authProvider}\n            routerProvider={{\n                ...routerProvider,\n                routes: [\n                    {\n                        path: "/update-password",\n                        element: (\n                            <AuthPage\n                                type="updatePassword"\n                                contentProps={{\n                                    style: {\n                                        width: "400px",\n                                    },\n                                }}\n                                // highlight-start\n                                renderContent={(content: React.ReactNode) => {\n                                    return (\n                                        <div\n                                            style={{\n                                                display: "flex",\n                                                flexDirection: "column",\n                                                justifyContent: "center",\n                                                alignItems: "center",\n                                            }}\n                                        >\n                                            <h1>Extra Header</h1>\n                                            {content}\n                                            <h1>Extra Footer</h1>\n                                        </div>\n                                    );\n                                }}\n                                // highlight-end\n                            />\n                        ),\n                    },\n                ],\n            }}\n        />\n    );\n};\n// visible-block-end\nrender(\n    <RefineAntdDemo\n        routerProvider={{\n            ...RefineDemoReactRouterV6(["/update-password"]),\n            routes: [\n                {\n                    path: "/update-password",\n                    element: (\n                        <AuthPage\n                            type="updatePassword"\n                            contentProps={{\n                                style: {\n                                    width: "400px",\n                                },\n                            }}\n                            renderContent={(content: React.ReactNode) => {\n                                return (\n                                    <div\n                                        style={{\n                                            display: "flex",\n                                            flexDirection: "column",\n                                            justifyContent: "center",\n                                            alignItems: "center",\n                                            width: "100%",\n                                        }}\n                                    >\n                                        <h1>Extra Header</h1>\n                                        {content}\n                                        <h1>Extra Footer</h1>\n                                    </div>\n                                );\n                            }}\n                        />\n                    ),\n                },\n            ],\n        }}\n        authProvider={authProvider}\n        resources={[\n            {\n                name: "posts",\n                list: () => {\n                    return <div>Empty Page</div>;\n                },\n            },\n        ]}\n    />,\n);\n')),(0,o.kt)("h2",{id:"api-reference"},"API Reference"),(0,o.kt)("h3",{id:"properties"},"Properties"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Property"),(0,o.kt)("th",{parentName:"tr",align:null},"Description"),(0,o.kt)("th",{parentName:"tr",align:null},"Type"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"type"),(0,o.kt)("td",{parentName:"tr",align:null},"Render ",(0,o.kt)("inlineCode",{parentName:"td"},"<AuthPage>")," forms by ",(0,o.kt)("inlineCode",{parentName:"td"},"type")," property."),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"login")," ","|"," ",(0,o.kt)("inlineCode",{parentName:"td"},"register")," ","|"," ",(0,o.kt)("inlineCode",{parentName:"td"},"resetPassword")," ","|"," ",(0,o.kt)("inlineCode",{parentName:"td"},"updatePassword"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"providers"),(0,o.kt)("td",{parentName:"tr",align:null},"Render auth logins if ",(0,o.kt)("inlineCode",{parentName:"td"},"type")," is ",(0,o.kt)("inlineCode",{parentName:"td"},'"login"'),"."),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"#interface"},(0,o.kt)("inlineCode",{parentName:"a"},"IProvider[]")))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"registerLink"),(0,o.kt)("td",{parentName:"tr",align:null},"A custom node that will be rendered as a register link to the ",(0,o.kt)("inlineCode",{parentName:"td"},"<AuthPage>"),"."),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"React.ReactNode"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"loginLink"),(0,o.kt)("td",{parentName:"tr",align:null},"A custom node that will be rendered as a link to the ",(0,o.kt)("inlineCode",{parentName:"td"},"<AuthPage>"),"."),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"React.ReactNode"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"resetPasswordLink"),(0,o.kt)("td",{parentName:"tr",align:null},"A custom node that will be rendered as a reset password link to the ",(0,o.kt)("inlineCode",{parentName:"td"},"<AuthPage>"),"."),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"React.ReactNode"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"onSubmit"),(0,o.kt)("td",{parentName:"tr",align:null},"Trigger after submitting the form and verifying data successfully."),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"function(formValues)"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"wrapperProps"),(0,o.kt)("td",{parentName:"tr",align:null},"Wrapper element props."),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"https://ant.design/components/layout/#API"},(0,o.kt)("inlineCode",{parentName:"a"},"WrapperProps")))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"contentProps"),(0,o.kt)("td",{parentName:"tr",align:null},"Content wrapper element props."),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"https://ant.design/components/card/#API"},(0,o.kt)("inlineCode",{parentName:"a"},"CardProps")))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"formProps"),(0,o.kt)("td",{parentName:"tr",align:null},"Props for the form component."),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"https://ant.design/components/form/#API"},(0,o.kt)("inlineCode",{parentName:"a"},"FormProps")))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"renderContent"),(0,o.kt)("td",{parentName:"tr",align:null},"Gives you default content you can use it to add some extra elements to the content."),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"function(content: React.ReactNode) => React.ReactNode"))))),(0,o.kt)("h3",{id:"interface"},"Interface"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"interface IProvider {\n    name: string;\n    icon?: React.ReactNode;\n    label?: string;\n}\n")))}p.isMDXComponent=!0}}]);