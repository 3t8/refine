"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[86945],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>u});var o=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,o,a=function(e,t){if(null==e)return{};var n,o,a={},r=Object.keys(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=o.createContext({}),s=function(e){var t=o.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=s(e.components);return o.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},m=o.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,l=e.parentName,c=p(e,["components","mdxType","originalType","parentName"]),m=s(n),u=a,f=m["".concat(l,".").concat(u)]||m[u]||d[u]||r;return n?o.createElement(f,i(i({ref:t},c),{},{components:n})):o.createElement(f,i({ref:t},c))}));function u(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,i=new Array(r);i[0]=m;var p={};for(var l in t)hasOwnProperty.call(t,l)&&(p[l]=t[l]);p.originalType=e,p.mdxType="string"==typeof e?e:a,i[1]=p;for(var s=2;s<r;s++)i[s]=n[s];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}m.displayName="MDXCreateElement"},12118:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>d,frontMatter:()=>r,metadata:()=>p,toc:()=>s});var o=n(87462),a=(n(67294),n(3905));const r={id:"antd-custom-layout",title:"Layout"},i=void 0,p={unversionedId:"ui-frameworks/antd/customization/antd-custom-layout",id:"ui-frameworks/antd/customization/antd-custom-layout",title:"Layout",description:"You can create custom layouts using ` and ` components.",source:"@site/docs/ui-frameworks/antd/customization/layout.md",sourceDirName:"ui-frameworks/antd/customization",slug:"/ui-frameworks/antd/customization/antd-custom-layout",permalink:"/docs/ui-frameworks/antd/customization/antd-custom-layout",draft:!1,editUrl:"https://github.com/pankod/refine/tree/master/documentation/docs/ui-frameworks/antd/customization/layout.md",tags:[],version:"current",lastUpdatedBy:"Melih \xd6zkalay",lastUpdatedAt:1663163634,formattedLastUpdatedAt:"Sep 14, 2022",frontMatter:{id:"antd-custom-layout",title:"Layout"},sidebar:"someSidebar",previous:{title:"Theme",permalink:"/docs/ui-frameworks/antd/customization/antd-custom-theme"},next:{title:"Sider",permalink:"/docs/ui-frameworks/antd/customization/antd-custom-sider"}},l={},s=[{value:"Creating a Custom Layout",id:"creating-a-custom-layout",level:2},{value:"Live StackBlitz Example",id:"live-stackblitz-example",level:2}],c={toc:s};function d(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,o.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"You can create custom layouts using ",(0,a.kt)("a",{parentName:"p",href:"/docs/core/components/refine-config"},(0,a.kt)("inlineCode",{parentName:"a"},"<Refine>"))," and ",(0,a.kt)("a",{parentName:"p",href:"/docs/core/components/layout-wrapper"},(0,a.kt)("inlineCode",{parentName:"a"},"<LayoutWrapper>"))," components."),(0,a.kt)("p",null,"Both of these components can accept the listed props for customization. ",(0,a.kt)("a",{parentName:"p",href:"/docs/core/components/refine-config"},(0,a.kt)("inlineCode",{parentName:"a"},"<Refine>"))," being for global customization and the ",(0,a.kt)("a",{parentName:"p",href:"/docs/core/components/layout-wrapper"},(0,a.kt)("inlineCode",{parentName:"a"},"<LayoutWrapper>"))," being for local."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/docs/core/components/refine-config#layout"},(0,a.kt)("inlineCode",{parentName:"a"},"Layout"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/docs/core/components/refine-config#sider"},(0,a.kt)("inlineCode",{parentName:"a"},"Sider"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/docs/core/components/refine-config#footer"},(0,a.kt)("inlineCode",{parentName:"a"},"Footer"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/docs/core/components/refine-config#header"},(0,a.kt)("inlineCode",{parentName:"a"},"Header"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/docs/core/components/refine-config#offlayoutarea"},(0,a.kt)("inlineCode",{parentName:"a"},"OffLayoutArea"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/docs/core/components/refine-config#title"},(0,a.kt)("inlineCode",{parentName:"a"},"Title")))),(0,a.kt)("h2",{id:"creating-a-custom-layout"},"Creating a Custom Layout"),(0,a.kt)("p",null,"Let's look at an example of modifying the default layout to have a top menu layout."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx",metastring:'title="/src/App.tsx"',title:'"/src/App.tsx"'},'import { Refine } from "@pankod/refine-core";\nimport {\n    AntdLayout,\n    ReadyPage,\n    notificationProvider,\n    ErrorComponent,\n} from "@pankod/refine-antd";\nimport routerProvider from "@pankod/refine-react-router-v6";\nimport dataProvider from "@pankod/refine-simple-rest";\n\nimport "@pankod/refine-antd/dist/styles.min.css";\n\nimport { PostList } from "pages/posts";\n// highlight-next-line\nimport { CustomSider } from "components";\n\nconst { Link } = routerProvider;\n\nconst API_URL = "https://api.fake-rest.refine.dev";\n\nconst App: React.FC = () => {\n    return (\n        <Refine\n            routerProvider={routerProvider}\n            dataProvider={dataProvider(API_URL)}\n            // highlight-start\n            Layout={({ children, Footer, OffLayoutArea }) => (\n                <AntdLayout>\n                    <AntdLayout.Header>\n                        <CustomSider />\n                    </AntdLayout.Header>\n                    <AntdLayout.Content>\n                        <AntdLayout.Content>\n                            <div style={{ padding: 24, minHeight: 360 }}>\n                                {children}\n                            </div>\n                        </AntdLayout.Content>\n                        {Footer && <Footer />}\n                    </AntdLayout.Content>\n                    {OffLayoutArea && <OffLayoutArea />}\n                </AntdLayout>\n            )}\n            // highlight-end\n            Title={() => (\n                <Link to="/" style={{ float: "left", marginRight: "10px" }}>\n                    <img src="/refine.svg" alt="Refine" />\n                </Link>\n            )}\n            ReadyPage={ReadyPage}\n            notificationProvider={notificationProvider}\n            catchAll={<ErrorComponent />}\n        />\n    );\n};\n\nexport default App;\n')),(0,a.kt)("p",null,"Here, we override the ",(0,a.kt)("a",{parentName:"p",href:"/docs/core/components/refine-config#title"},(0,a.kt)("inlineCode",{parentName:"a"},"<Title>"))," and ",(0,a.kt)("a",{parentName:"p",href:"/docs/core/components/refine-config#layout"},(0,a.kt)("inlineCode",{parentName:"a"},"<Layout>"))," components. When we override ",(0,a.kt)("a",{parentName:"p",href:"/docs/core/components/refine-config#layout"},(0,a.kt)("inlineCode",{parentName:"a"},"<Layout>")),", we put the ",(0,a.kt)("inlineCode",{parentName:"p"},"<CustomSider>")," (insted of the ",(0,a.kt)("a",{parentName:"p",href:"/docs/core/components/refine-config#sider"},(0,a.kt)("inlineCode",{parentName:"a"},"<Sider>"))," that was provided to ",(0,a.kt)("a",{parentName:"p",href:"/docs/core/components/refine-config#layout"},(0,a.kt)("inlineCode",{parentName:"a"},"<Layout>"))," to render it by default) on top of ",(0,a.kt)("a",{parentName:"p",href:"https://ant.design/components/layout/"},(0,a.kt)("inlineCode",{parentName:"a"},"<AntdLayout>")),"."),(0,a.kt)("p",null,"So, we just provided a custom ",(0,a.kt)("a",{parentName:"p",href:"/docs/core/components/refine-config#sider"},(0,a.kt)("inlineCode",{parentName:"a"},"<Sider>")),". Here's our custom sider that looks horizontal, instead of the default vertical one:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx",metastring:'title="/src/components/sider/index.tsx"',title:'"/src/components/sider/index.tsx"'},'import { useTitle, useMenu } from "@pankod/refine-core";\nimport { Menu } from "@pankod/refine-antd";\nimport routerProvider from "@pankod/refine-react-router-v6";\n\nconst { Link } = routerProvider;\n\nexport const CustomSider: React.FC = () => {\n    // highlight-start\n    const Title = useTitle();\n    const { menuItems, selectedKey } = useMenu();\n    // highlight-end\n\n    return (\n        <>\n            // highlight-start\n            {Title && <Title collapsed={false} />}\n            <Menu selectedKeys={[selectedKey]} mode="horizontal">\n                {menuItems.map(({ icon, route, label }) => (\n                    <Menu.Item key={route} icon={icon}>\n                        <Link to={route ?? ""}>{label}</Link>\n                    </Menu.Item>\n                ))}\n            </Menu>\n            // highlight-end\n        </>\n    );\n};\n')),(0,a.kt)("p",null,"Here, we use ",(0,a.kt)("a",{parentName:"p",href:"/docs/core/hooks/ui/useMenu"},(0,a.kt)("inlineCode",{parentName:"a"},"useMenu"))," hook to get the list of current resources and print it."),(0,a.kt)("admonition",{type:"info"},(0,a.kt)("p",{parentName:"admonition"},"By default, ",(0,a.kt)("a",{parentName:"p",href:"/docs/core/components/refine-config#sider"},(0,a.kt)("inlineCode",{parentName:"a"},"<Sider>"))," is responsible for rendering ",(0,a.kt)("a",{parentName:"p",href:"/docs/core/components/refine-config#title"},(0,a.kt)("inlineCode",{parentName:"a"},"<Title>")),". It gets this component (configured by ",(0,a.kt)("a",{parentName:"p",href:"/docs/core/components/refine-config"},(0,a.kt)("inlineCode",{parentName:"a"},"<Refine>"))," and/or ",(0,a.kt)("a",{parentName:"p",href:"/docs/core/components/layout-wrapper"},(0,a.kt)("inlineCode",{parentName:"a"},"<LayoutWrapper>")),") by ",(0,a.kt)("a",{parentName:"p",href:"/docs/core/hooks/refine/useTitle"},(0,a.kt)("inlineCode",{parentName:"a"},"useTitle"))," hook.")),(0,a.kt)("admonition",{type:"info"},(0,a.kt)("p",{parentName:"admonition"},"This example demonstrated how to configure a global layout. To learn how to use global layout in custom pages and make local modifications per page, ",(0,a.kt)("a",{parentName:"p",href:"/docs/core/components/layout-wrapper"},"refer to the ",(0,a.kt)("inlineCode",{parentName:"a"},"<LayoutWrapper>")," docs. ","\u2192"))),(0,a.kt)("h2",{id:"live-stackblitz-example"},"Live StackBlitz Example"),(0,a.kt)("p",null,"Here's how it looks in the end:"),(0,a.kt)("iframe",{loading:"lazy",src:"https://stackblitz.com//github/pankod/refine/tree/master/examples/customization/topMenuLayout?embed=1&view=preview&theme=dark&preset=node",style:{width:"100%",height:"80vh",border:"0px",borderRadius:"8px",overflow:"hidden"},title:"refine-top-menu-layout-example",allow:"accelerometer; ambient-light-sensor; camera; encrypted-media; geolocation; gyroscope; hid; microphone; midi; payment; usb; vr; xr-spatial-tracking",sandbox:"allow-forms allow-modals allow-popups allow-presentation allow-same-origin allow-scripts"}))}d.isMDXComponent=!0}}]);